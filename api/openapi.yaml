openapi: 3.0.0
info:
  contact:
    name: Trello
    url: https://trello.com/home
  description: |-
    This document describes the REST API of Trello as published by Trello.com.
     - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>
     - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
  license:
    name: "Trello : Terms of Service"
    url: https://trello.com/legal
  termsOfService: https://trello.com/legal
  title: Trello
  version: "1.0"
  x-apisguru-categories:
  - collaboration
  x-logo:
    url: https://d2k1ftgv7pobq7.cloudfront.net/meta/p/res/images/c13d1cd96a2cff30f0460a5e1860c5ea/header-logo-blue.svg
  x-origin:
  - version: "3.0"
    format: openapi
    url: https://raw.githubusercontent.com/APIs-guru/unofficial_openapi_specs/master/trello.com/1.0/swagger.yaml
  x-providerName: trello.com
  x-unofficialSpec: true
externalDocs:
  url: https://developers.trello.com
servers:
- url: https://trello.com/1
tags:
- description: https://trello.com/docs/api/board/index.html
  name: board
- description: https://trello.com/docs/api/member/index.html
  name: member
- description: https://trello.com/docs/api/card/index.html
  name: card
- description: https://trello.com/docs/api/organization/index.html
  name: organization
- description: https://trello.com/docs/api/action/index.html
  name: action
- description: https://trello.com/docs/api/notification/index.html
  name: notification
- description: https://trello.com/docs/api/list/index.html
  name: list
- description: https://trello.com/docs/api/checklist/index.html
  name: checklist
- description: https://trello.com/docs/api/token/index.html
  name: token
- description: https://trello.com/docs/api/webhook/index.html
  name: webhook
- description: https://trello.com/docs/api/label/index.html
  name: label
- description: https://trello.com/docs/api/session/index.html
  name: session
- description: https://trello.com/docs/api/search/index.html
  name: search
- description: https://trello.com/docs/api/batch/index.html
  name: batch
- description: https://trello.com/docs/api/type/index.html
  name: type
paths:
  /actions/{idAction}:
    delete:
      operationId: Action_removeByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteActionsByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--actions-idAction
      x-accepts: application/json
    get:
      operationId: Action_getById
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: ' true or false'
        explode: true
        in: query
        name: display
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: entities
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-get-parameters-3-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-get-parameters-5-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: memberCreator
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-get-parameters-7-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction
      x-accepts: application/json
    put:
      operationId: Action_updateByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actions'
        description: Attributes of "Actions" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateActionsByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--actions-idAction
      x-content-type: application/json
      x-accepts: application/json
  /actions/{idAction}/board:
    get:
      operationId: Action_getBoardByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-board-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsBoardByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-board
      x-accepts: application/json
  /actions/{idAction}/board/{field}:
    get:
      operationId: Action_getBoardByIdActionByField
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsBoardByIdActionByField()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-board-field
      x-accepts: application/json
  /actions/{idAction}/card:
    get:
      operationId: Action_getCardByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-card-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsCardByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-card
      x-accepts: application/json
  /actions/{idAction}/card/{field}:
    get:
      operationId: Action_getCardByIdActionByField
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsCardByIdActionByField()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-card-field
      x-accepts: application/json
  /actions/{idAction}/display:
    get:
      operationId: Action_getDisplayByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsDisplayByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-display
      x-accepts: application/json
  /actions/{idAction}/entities:
    get:
      operationId: Action_getEntitiesByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsEntitiesByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-entities
      x-accepts: application/json
  /actions/{idAction}/list:
    get:
      operationId: Action_getListByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-list-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsListByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-list
      x-accepts: application/json
  /actions/{idAction}/list/{field}:
    get:
      operationId: Action_getListByIdActionByField
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsListByIdActionByField()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-list-field
      x-accepts: application/json
  /actions/{idAction}/member:
    get:
      operationId: Action_getMemberByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-member-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsMemberByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-member
      x-accepts: application/json
  /actions/{idAction}/member/{field}:
    get:
      operationId: Action_getMemberByField
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsMemberByIdActionByField()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-member-field
      x-accepts: application/json
  /actions/{idAction}/memberCreator:
    get:
      operationId: Action_getMemberCreatorByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-memberCreator-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsMemberCreatorByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-memberCreator
      x-accepts: application/json
  /actions/{idAction}/memberCreator/{field}:
    get:
      operationId: Action_getMemberByIdActionByField
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsMemberCreatorByIdActionByField()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-memberCreator-field
      x-accepts: application/json
  /actions/{idAction}/organization:
    get:
      operationId: Action_getOrganizationByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-organization-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsOrganizationByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-organization
      x-accepts: application/json
  /actions/{idAction}/organization/{field}:
    get:
      operationId: Action_getOrgByIdActionByField
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getActionsOrganizationByIdActionByField()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-organization-field
      x-accepts: application/json
  /actions/{idAction}/text:
    put:
      operationId: Action_updateTextByIdAction
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actions_text'
        description: Attributes of "Actions Text" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateActionsTextByIdAction()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--actions-idAction-text
      x-content-type: application/json
      x-accepts: application/json
  /actions/{idAction}/{field}:
    get:
      operationId: Action_getByIdActionField
      parameters:
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getActionsByIdActionByField()
      tags:
      - action
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--actions-idAction-field
      x-accepts: application/json
  /batch:
    get:
      operationId: Batch_getData
      parameters:
      - description: "list of API v1 GET routes, not including the version prefix"
        explode: true
        in: query
        name: urls
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getBatch()
      tags:
      - batch
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--batch
      x-accepts: application/json
  /boards:
    post:
      operationId: Board_createBoard
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards'
        description: Attributes of "Boards" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addBoards()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--boards
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}:
    get:
      operationId: Board_getById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_display
        required: false
        schema:
          type: string
        style: form
      - description: "One of: count, list or minimal"
        explode: true
        in: query
        name: actions_format
        required: false
        schema:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-4-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: actions_since
        required: false
        schema:
          type: string
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: actions_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-6-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: action_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-7-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: action_member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: action_member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-9-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: action_memberCreator
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: action_memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-11-schema
        style: form
      - description: "One of: all, closed, none, open or visible"
        explode: true
        in: query
        name: cards
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-12-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: card_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-13-schema
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: card_attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: card_attachment_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-15-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: card_checklists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-16-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: card_stickers
        required: false
        schema:
          type: string
        style: form
      - description: "One of: mine or none"
        explode: true
        in: query
        name: boardStars
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-18-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: labels
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-19-schema
        style: form
      - description: "all or a comma-separated list of: color, idBoard, name or uses"
        explode: true
        in: query
        name: label_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-20-schema
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: labels_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-21-schema
        style: form
      - description: "One of: all, closed, none or open"
        explode: true
        in: query
        name: lists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-22-schema
        style: form
      - description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        explode: true
        in: query
        name: list_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-23-schema
        style: form
      - description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        explode: true
        in: query
        name: memberships
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-24-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: memberships_member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberships_member_fields
        required: false
        schema:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-26-schema
        style: form
      - description: "One of: admins, all, none, normal or owners"
        explode: true
        in: query
        name: members
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-27-schema
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, initials, fullName, username and confirmed"
          example: "avatarHash, initials, fullName, username and confirmed"
          type: string
          x-konfig-original-example: "avatarHash, initials, fullName, username and\
            \ confirmed"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-28-schema
        style: form
      - description: "One of: admins, all, none, normal or owners"
        explode: true
        in: query
        name: membersInvited
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-29-schema
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: membersInvited_fields
        required: false
        schema:
          default: "avatarHash, initials, fullName and username"
          example: "avatarHash, initials, fullName and username"
          type: string
          x-konfig-original-example: "avatarHash, initials, fullName and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-30-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checklists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-31-schema
        style: form
      - description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        explode: true
        in: query
        name: checklist_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-32-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: organization
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: organization_fields
        required: false
        schema:
          default: name and displayName
          example: name and displayName
          type: string
          x-konfig-original-example: name and displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-34-schema
        style: form
      - description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        explode: true
        in: query
        name: organization_memberships
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-35-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: myPrefs
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: "name, desc, descData, closed, idOrganization, pinned, url, shortUrl,\
            \ prefs and labelNames"
          example: "name, desc, descData, closed, idOrganization, pinned, url, shortUrl,\
            \ prefs and labelNames"
          type: string
          x-konfig-original-example: "name, desc, descData, closed, idOrganization,\
            \ pinned, url, shortUrl, prefs and labelNames"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-37-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard
      x-accepts: application/json
    put:
      operationId: Board_updateById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards'
        description: Attributes of "Boards" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/actions:
    get:
      operationId: Board_listActionsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: ' true or false'
        explode: true
        in: query
        name: entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: display
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-3-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-4-schema
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-5-schema
        style: form
      - description: "One of: count, list or minimal"
        explode: true
        in: query
        name: format
        required: false
        schema:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-6-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: Page * limit must be less than 1000
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-9-schema
        style: form
      - description: Only return actions related to these model ids
        explode: true
        in: query
        name: idModels
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-12-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: memberCreator
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-14-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsActionsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-actions
      x-accepts: application/json
  /boards/{idBoard}/boardStars:
    get:
      operationId: Board_getBoardStarsById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: mine or none"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: mine
          example: mine
          type: string
          x-konfig-original-example: mine
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-boardStars-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsBoardStarsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-boardStars
      x-accepts: application/json
  /boards/{idBoard}/calendarKey/generate:
    post:
      operationId: Board_generateCalendarKeyById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addBoardsCalendarKeyGenerateByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--boards-idBoard-calendarKey-generate
      x-accepts: application/json
  /boards/{idBoard}/cards:
    get:
      operationId: Board_getCardsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: attachment_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-3-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: stickers
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: members
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-6-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: checkItemStates
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checklists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-8-schema
        style: form
      - description: a number from 1 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all, closed, none, open or visible"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: visible
          example: visible
          type: string
          x-konfig-original-example: visible
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-12-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-13-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsCardsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-cards
      x-accepts: application/json
  /boards/{idBoard}/cards/{filter}:
    get:
      operationId: Board_filterCardsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getBoardsCardsByIdBoardByFilter()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-cards-filter
      x-accepts: application/json
  /boards/{idBoard}/cards/{idCard}:
    get:
      operationId: Board_getCardsByIdBoardByIdCard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: idCard
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: attachment_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-3-schema
        style: form
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_display
        required: false
        schema:
          type: string
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: actions_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-7-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: action_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-8-schema
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: action_memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-9-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: members
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, initials, fullName and username"
          example: "avatarHash, initials, fullName and username"
          type: string
          x-konfig-original-example: "avatarHash, initials, fullName and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-11-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: checkItemStates
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: idCheckItem or state"
        explode: true
        in: query
        name: checkItemState_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-13-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: labels
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checklists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-15-schema
        style: form
      - description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        explode: true
        in: query
        name: checklist_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-16-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-17-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsCardsByIdBoardByIdCard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-cards-idCard
      x-accepts: application/json
  /boards/{idBoard}/checklists:
    get:
      operationId: Board_getChecklistsById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all, closed, none, open or visible"
        explode: true
        in: query
        name: cards
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: card_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-2-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checkItems
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-3-schema
        style: form
      - description: "all or a comma-separated list of: name, nameData, pos, state\
          \ or type"
        explode: true
        in: query
        name: checkItem_fields
        required: false
        schema:
          default: "name, nameData, pos and state"
          example: "name, nameData, pos and state"
          type: string
          x-konfig-original-example: "name, nameData, pos and state"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-4-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-5-schema
        style: form
      - description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-6-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsChecklistsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-checklists
      x-accepts: application/json
    post:
      operationId: Board_addChecklists
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_checklists'
        description: Attributes of "Boards Checklists" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addBoardsChecklistsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--boards-idBoard-checklists
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/closed:
    put:
      operationId: Board_updateClosedById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_closed'
        description: Attributes of "Boards Closed" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsClosedByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-closed
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/deltas:
    get:
      operationId: Board_getDeltasByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: A valid tag for subscribing
        explode: true
        in: query
        name: tags
        required: true
        schema:
          type: string
        style: form
      - description: a number from -1 to Infinity
        explode: true
        in: query
        name: ixLastUpdate
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsDeltasByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-deltas
      x-accepts: application/json
  /boards/{idBoard}/desc:
    put:
      operationId: Board_updateDescriptionByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_desc'
        description: Attributes of "Boards Desc" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsDescByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-desc
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/emailKey/generate:
    post:
      operationId: Board_generateEmailKey
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addBoardsEmailKeyGenerateByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--boards-idBoard-emailKey-generate
      x-accepts: application/json
  /boards/{idBoard}/idOrganization:
    put:
      operationId: Board_updateOrganizationByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_idOrganization'
        description: Attributes of "Boards Id Organization" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsIdOrganizationByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-idOrganization
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/labelNames/blue:
    put:
      operationId: Board_updateLabelNamesBlueById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_blue'
        description: Attributes of "Label Names Blue" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsLabelNamesBlueByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-blue
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/labelNames/green:
    put:
      operationId: Board_updateLabelNamesGreenByIdBoardPut
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_green'
        description: Attributes of "Label Names Green" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsLabelNamesGreenByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-green
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/labelNames/orange:
    put:
      operationId: Board_updateLabelNamesOrangeByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_orange'
        description: Attributes of "Label Names Orange" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsLabelNamesOrangeByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-orange
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/labelNames/purple:
    put:
      operationId: Board_updateLabelNamesPurpleByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_purple'
        description: Attributes of "Label Names Purple" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsLabelNamesPurpleByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-purple
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/labelNames/red:
    put:
      operationId: Board_updateLabelNamesRed
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_red'
        description: Attributes of "Label Names Red" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsLabelNamesRedByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-red
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/labelNames/yellow:
    put:
      operationId: Board_updateLabelNamesYellowByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_yellow'
        description: Attributes of "Label Names Yellow" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsLabelNamesYellowByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-yellow
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/labels:
    get:
      operationId: Board_listLabelsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: color, idBoard, name or uses"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-labels-get-parameters-1-schema
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-labels-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsLabelsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-labels
      x-accepts: application/json
    post:
      operationId: Board_addLabelsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_labels'
        description: Attributes of "Boards Labels" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addBoardsLabelsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--boards-idBoard-labels
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/labels/{idLabel}:
    get:
      operationId: Board_getLabelsByIdBoardByIdLabel
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: idLabel
        explode: false
        in: path
        name: idLabel
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: color, idBoard, name or uses"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-labels-idLabel-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsLabelsByIdBoardByIdLabel()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-labels-idLabel
      x-accepts: application/json
  /boards/{idBoard}/lists:
    get:
      operationId: Board_getListsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all, closed, none, open or visible"
        explode: true
        in: query
        name: cards
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: card_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-2-schema
        style: form
      - description: "One of: all, closed, none or open"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: open
          example: open
          type: string
          x-konfig-original-example: open
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-3-schema
        style: form
      - description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-4-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsListsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-lists
      x-accepts: application/json
    post:
      operationId: Board_createListsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_lists'
        description: Attributes of "Boards Lists" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addBoardsListsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--boards-idBoard-lists
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/lists/{filter}:
    get:
      operationId: Board_getListsByFilter
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getBoardsListsByIdBoardByFilter()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-lists-filter
      x-accepts: application/json
  /boards/{idBoard}/markAsViewed:
    post:
      operationId: Board_markAsViewedByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addBoardsMarkAsViewedByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--boards-idBoard-markAsViewed
      x-accepts: application/json
  /boards/{idBoard}/members:
    get:
      operationId: Board_getMembersByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: admins, all, none, normal or owners"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-get-parameters-2-schema
        style: form
      - description: true or false ; works for premium organizations only.
        explode: true
        in: query
        name: activity
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsMembersByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-members
      x-accepts: application/json
    put:
      operationId: Board_updateMembersByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/boards_members'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsMembersByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-members
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/members/{filter}:
    get:
      operationId: Board_getMembersByFilter
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getBoardsMembersByIdBoardByFilter()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-members-filter
      x-accepts: application/json
  /boards/{idBoard}/members/{idMember}:
    delete:
      operationId: Board_removeMember
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: idMember
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteBoardsMembersByIdBoardByIdMember()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--boards-idBoard-members-idMember
      x-accepts: application/json
    put:
      operationId: Board_updateMembersByIdBoardByIdMember
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: idMember
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/boards_members'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsMembersByIdBoardByIdMember()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-members-idMember
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/members/{idMember}/cards:
    get:
      operationId: Board_getMembersCardsByIdBoardByIdMember
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: idMember
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: attachment_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-4-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: members
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-6-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: checkItemStates
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checklists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-8-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: board
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: board_fields
        required: false
        schema:
          default: "name, desc, closed, idOrganization, pinned, url and prefs"
          example: "name, desc, closed, idOrganization, pinned, url and prefs"
          type: string
          x-konfig-original-example: "name, desc, closed, idOrganization, pinned,\
            \ url and prefs"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-10-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        explode: true
        in: query
        name: list_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-12-schema
        style: form
      - description: "One of: all, closed, none, open or visible"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: visible
          example: visible
          type: string
          x-konfig-original-example: visible
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-13-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-14-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsMembersCardsByIdBoardByIdMember()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-members-idMember-cards
      x-accepts: application/json
  /boards/{idBoard}/membersInvited:
    get:
      operationId: Board_getMembersInvitedByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-membersInvited-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsMembersInvitedByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-membersInvited
      x-accepts: application/json
  /boards/{idBoard}/membersInvited/{field}:
    get:
      operationId: Board_getMembersInvitedByField
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsMembersInvitedByIdBoardByField()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-membersInvited-field
      x-accepts: application/json
  /boards/{idBoard}/memberships:
    get:
      operationId: Board_getMembershipsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-memberships-get-parameters-1-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-memberships-get-parameters-3-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsMembershipsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-memberships
      x-accepts: application/json
  /boards/{idBoard}/memberships/{idMembership}:
    get:
      operationId: Board_getMembershipsByIdBoardByIdMembership
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: idMembership
        explode: false
        in: path
        name: idMembership
        required: true
        schema:
          type: string
        style: simple
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-memberships-idMembership-get-parameters-3-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsMembershipsByIdBoardByIdMembership()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-memberships-idMembership
      x-accepts: application/json
    put:
      operationId: Board_updateMembershipsByIdBoardByIdMembership
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: idMembership
        explode: false
        in: path
        name: idMembership
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_memberships'
        description: Attributes of "Boards Memberships" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsMembershipsByIdBoardByIdMembership()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-memberships-idMembership
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/myPrefs:
    get:
      operationId: Board_getMyPrefsById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsMyPrefsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-myPrefs
      x-accepts: application/json
  /boards/{idBoard}/myPrefs/emailPosition:
    put:
      operationId: Board_updateMyPrefsEmailPositionByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_emailPosition'
        description: Attributes of "My Prefs Email Position" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsMyPrefsEmailPositionByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-emailPosition
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/myPrefs/idEmailList:
    put:
      operationId: Board_updateMyPrefsEmailListByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_idEmailList'
        description: Attributes of "My Prefs Id Email List" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsMyPrefsIdEmailListByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-idEmailList
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/myPrefs/showListGuide:
    put:
      operationId: Board_updateMyPrefsShowListGuideByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_showListGuide'
        description: Attributes of "My Prefs Show List Guide" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsMyPrefsShowListGuideByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-showListGuide
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/myPrefs/showSidebar:
    put:
      operationId: Board_updateMyPrefsShowSidebar
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_showSidebar'
        description: Attributes of "My Prefs Show Sidebar" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsMyPrefsShowSidebarByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-showSidebar
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/myPrefs/showSidebarActivity:
    put:
      operationId: Board_updateMyPrefsShowSidebarActivityByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_showSidebarActivity'
        description: Attributes of "My Prefs Show Sidebar Activity" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsMyPrefsShowSidebarActivityByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-showSidebarActivity
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/myPrefs/showSidebarBoardActions:
    put:
      operationId: Board_updateMyPrefsShowSidebarActionsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_showSidebarBoardActions'
        description: Attributes of "My Prefs Show Sidebar Board Actions" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-showSidebarBoardActions
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/myPrefs/showSidebarMembers:
    put:
      operationId: Board_updatePrefsShowSidebarMembersById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_showSidebarMembers'
        description: Attributes of "My Prefs Show Sidebar Members" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsMyPrefsShowSidebarMembersByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-showSidebarMembers
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/name:
    put:
      operationId: Board_updateNameById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_name'
        description: Attributes of "Boards Name" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsNameByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-name
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/organization:
    get:
      operationId: Board_getOrganizationById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-organization-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsOrganizationByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-organization
      x-accepts: application/json
  /boards/{idBoard}/organization/{field}:
    get:
      operationId: Board_getOrganizationByIdBoardByField
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getBoardsOrganizationByIdBoardByField()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-organization-field
      x-accepts: application/json
  /boards/{idBoard}/powerUps:
    post:
      operationId: Board_addPowerUpsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_powerUps'
        description: Attributes of "Boards Power Ups" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addBoardsPowerUpsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--boards-idBoard-powerUps
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/powerUps/{powerUp}:
    delete:
      operationId: Board_removePowerUp
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: powerUp
        explode: false
        in: path
        name: powerUp
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteBoardsPowerUpsByIdBoardByPowerUp()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--boards-idBoard-powerUps-powerUp
      x-accepts: application/json
  /boards/{idBoard}/prefs/background:
    put:
      operationId: Board_updatePrefsBackgroundByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_background'
        description: Attributes of "Prefs Background" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsPrefsBackgroundByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-background
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/prefs/calendarFeedEnabled:
    put:
      operationId: Board_updatePrefsCalendarFeedEnabledById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_calendarFeedEnabled'
        description: Attributes of "Prefs Calendar Feed Enabled" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsPrefsCalendarFeedEnabledByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-calendarFeedEnabled
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/prefs/cardAging:
    put:
      operationId: Board_updatePrefsCardAgingByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_cardAging'
        description: Attributes of "Prefs Card Aging" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsPrefsCardAgingByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-cardAging
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/prefs/cardCovers:
    put:
      operationId: Board_updatePrefsCardCoversByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_cardCovers'
        description: Attributes of "Prefs Card Covers" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsPrefsCardCoversByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-cardCovers
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/prefs/comments:
    put:
      operationId: Board_updatePrefsCommentsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_comments'
        description: Attributes of "Prefs Comments" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsPrefsCommentsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-comments
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/prefs/invitations:
    put:
      operationId: Board_updatePrefsInvitationsByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_invitations'
        description: Attributes of "Prefs Invitations" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsPrefsInvitationsByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-invitations
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/prefs/permissionLevel:
    put:
      operationId: Board_updatePrefsPermissionLevelById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/prefs_permissionLevel'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsPrefsPermissionLevelByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-permissionLevel
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/prefs/selfJoin:
    put:
      operationId: Board_updatePrefsSelfJoinByIdBoard
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_selfJoin'
        description: Attributes of "Prefs Self Join" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsPrefsSelfJoinByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-selfJoin
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/prefs/voting:
    put:
      operationId: Board_updateVotingPrefsById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_voting'
        description: Attributes of "Prefs Voting" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsPrefsVotingByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-voting
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/subscribed:
    put:
      operationId: Board_updateSubscribedById
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_subscribed'
        description: Attributes of "Boards Subscribed" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateBoardsSubscribedByIdBoard()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--boards-idBoard-subscribed
      x-content-type: application/json
      x-accepts: application/json
  /boards/{idBoard}/{field}:
    get:
      operationId: Board_getByIdField
      parameters:
      - description: board_id
        explode: false
        in: path
        name: idBoard
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getBoardsByIdBoardByField()
      tags:
      - board
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--boards-idBoard-field
      x-accepts: application/json
  /cards:
    post:
      operationId: Card_createAndUpdate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards'
        description: Attributes of "Cards" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCards()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}:
    delete:
      operationId: Card_removeByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteCardsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--cards-idCard
      x-accepts: application/json
    get:
      operationId: Card_getById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_display
        required: false
        schema:
          type: string
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: actions_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-4-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: action_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-5-schema
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: action_memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-6-schema
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: attachment_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-8-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: members
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-10-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: membersVoted
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberVoted_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-12-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: checkItemStates
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: idCheckItem or state"
        explode: true
        in: query
        name: checkItemState_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-14-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checklists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-15-schema
        style: form
      - description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        explode: true
        in: query
        name: checklist_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-16-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: board
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: board_fields
        required: false
        schema:
          default: "name, desc, descData, closed, idOrganization, pinned, url and\
            \ prefs"
          example: "name, desc, descData, closed, idOrganization, pinned, url and\
            \ prefs"
          type: string
          x-konfig-original-example: "name, desc, descData, closed, idOrganization,\
            \ pinned, url and prefs"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-18-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        explode: true
        in: query
        name: list_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-20-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: stickers
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: image, imageScaled, imageUrl,\
          \ left, rotate, top or zIndex"
        explode: true
        in: query
        name: sticker_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-22-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: "badges, checkItemStates, closed, dateLastActivity, desc, descData,\
            \ due, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort,\
            \ idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl\
            \ and url"
          example: "badges, checkItemStates, closed, dateLastActivity, desc, descData,\
            \ due, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort,\
            \ idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl\
            \ and url"
          type: string
          x-konfig-original-example: "badges, checkItemStates, closed, dateLastActivity,\
            \ desc, descData, due, email, idBoard, idChecklists, idLabels, idList,\
            \ idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels,\
            \ name, pos, shortUrl and url"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-23-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard
      x-accepts: application/json
    put:
      operationId: Card_updateByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards'
        description: Attributes of "Cards" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/actions:
    get:
      operationId: Card_listCardActionsById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: ' true or false'
        explode: true
        in: query
        name: entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: display
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: commentCard and updateCard:idList
          example: commentCard and updateCard:idList
          type: string
          x-konfig-original-example: commentCard and updateCard:idList
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-3-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-4-schema
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-5-schema
        style: form
      - description: "One of: count, list or minimal"
        explode: true
        in: query
        name: format
        required: false
        schema:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-6-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: Page * limit must be less than 1000
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-9-schema
        style: form
      - description: Only return actions related to these model ids
        explode: true
        in: query
        name: idModels
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-12-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: memberCreator
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-14-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsActionsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-actions
      x-accepts: application/json
  /cards/{idCard}/actions/comments:
    post:
      operationId: Card_addActionsCommentsByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actions_comments'
        description: Attributes of "Actions Comments" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsActionsCommentsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-actions-comments
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/actions/{idAction}/comments:
    delete:
      description: "This can only be done by the original author of the comment, or\
        \ someone with higher permissions than the original author."
      operationId: Card_removeActionCommentByIdCardByIdAction
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteCardsActionsCommentsByIdCardByIdAction()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--cards-idCard-actions-idAction-comments
      x-accepts: application/json
    put:
      description: This can only be done by the original author of the comment.
      operationId: Card_updateActionCommentByIdCardByIdAction
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idAction
        explode: false
        in: path
        name: idAction
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_actions_comments'
        description: Attributes of "Cards Actions Comments" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsActionsCommentsByIdCardByIdAction()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-actions-idAction-comments
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/attachments:
    get:
      operationId: Card_getAttachmentsByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-attachments-get-parameters-1-schema
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsAttachmentsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-attachments
      x-accepts: application/json
    post:
      operationId: Card_addAttachmentsByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_attachments'
        description: Attributes of "Cards Attachments" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsAttachmentsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-attachments
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/attachments/{idAttachment}:
    delete:
      operationId: Card_deleteAttachmentsByIdCardByIdAttachment
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idAttachment
        explode: false
        in: path
        name: idAttachment
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteCardsAttachmentsByIdCardByIdAttachment()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--cards-idCard-attachments-idAttachment
      x-accepts: application/json
    get:
      operationId: Card_getAttachmentsByIds
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idAttachment
        explode: false
        in: path
        name: idAttachment
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-attachments-idAttachment-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsAttachmentsByIdCardByIdAttachment()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-attachments-idAttachment
      x-accepts: application/json
  /cards/{idCard}/board:
    get:
      operationId: Card_getBoardById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-board-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsBoardByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-board
      x-accepts: application/json
  /cards/{idCard}/board/{field}:
    get:
      operationId: Card_getBoardByIdCardByField
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsBoardByIdCardByField()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-board-field
      x-accepts: application/json
  /cards/{idCard}/checkItemStates:
    get:
      operationId: Card_getCheckItemStatesById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: idCheckItem or state"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checkItemStates-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsCheckItemStatesByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-checkItemStates
      x-accepts: application/json
  /cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}:
    put:
      operationId: Card_updateChecklistCheckItem
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idChecklistCurrent
        explode: false
        in: path
        name: idChecklistCurrent
        required: true
        schema:
          type: string
        style: simple
      - description: idCheckItem
        explode: false
        in: path
        name: idCheckItem
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklist_idChecklistCurrent_checkItem'
        description: Attributes of "Cards Checklist Id Checklist Current Check Item"
          to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-checklist-idChecklistCurrent-checkItem-idCheckItem
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/checklist/{idChecklist}/checkItem:
    post:
      operationId: Card_addChecklistCheckItem
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklist_checkItem'
        description: Attributes of "Cards Checklist Check Item" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsChecklistCheckItemByIdCardByIdChecklist()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-checklist-idChecklist-checkItem
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}:
    delete:
      operationId: Card_removeChecklistCheckItem
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: idCheckItem
        explode: false
        in: path
        name: idCheckItem
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--cards-idCard-checklist-idChecklist-checkItem-idCheckItem
      x-accepts: application/json
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard:
    post:
      operationId: Card_convertCheckItemToCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: idCheckItem
        explode: false
        in: path
        name: idCheckItem
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-checklist-idChecklist-checkItem-idCheckItem-convertToCard
      x-accepts: application/json
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name:
    put:
      operationId: Card_updateChecklistCheckItemNameById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: idCheckItem
        explode: false
        in: path
        name: idCheckItem
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklist_checkItem_name'
        description: Attributes of "Cards Checklist Check Item Name" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-checklist-idChecklist-checkItem-idCheckItem-name
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos:
    put:
      operationId: Card_updateCheckItemPosById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: idCheckItem
        explode: false
        in: path
        name: idCheckItem
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklist_checkItem_pos'
        description: Attributes of "Cards Checklist Check Item Pos" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-checklist-idChecklist-checkItem-idCheckItem-pos
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state:
    put:
      operationId: Card_updateChecklistCheckItemState
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: idCheckItem
        explode: false
        in: path
        name: idCheckItem
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklist_checkItem_state'
        description: Attributes of "Cards Checklist Check Item State" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-checklist-idChecklist-checkItem-idCheckItem-state
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/checklists:
    get:
      operationId: Card_getChecklistsById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all, closed, none, open or visible"
        explode: true
        in: query
        name: cards
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: card_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-2-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checkItems
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-3-schema
        style: form
      - description: "all or a comma-separated list of: name, nameData, pos, state\
          \ or type"
        explode: true
        in: query
        name: checkItem_fields
        required: false
        schema:
          default: "name, nameData, pos and state"
          example: "name, nameData, pos and state"
          type: string
          x-konfig-original-example: "name, nameData, pos and state"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-4-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-5-schema
        style: form
      - description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-6-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsChecklistsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-checklists
      x-accepts: application/json
    post:
      operationId: Card_addChecklists
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklists'
        description: Attributes of "Cards Checklists" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsChecklistsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-checklists
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/checklists/{idChecklist}:
    delete:
      operationId: Card_deleteChecklistByIdCardByIdChecklist
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteCardsChecklistsByIdCardByIdChecklist()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--cards-idCard-checklists-idChecklist
      x-accepts: application/json
  /cards/{idCard}/closed:
    put:
      operationId: Card_updateClosedById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_closed'
        description: Attributes of "Cards Closed" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsClosedByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-closed
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/desc:
    put:
      operationId: Card_updateDescriptionByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_desc'
        description: Attributes of "Cards Desc" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsDescByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-desc
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/due:
    put:
      operationId: Card_updateDueById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_due'
        description: Attributes of "Cards Due" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsDueByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-due
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/idAttachmentCover:
    put:
      operationId: Card_updateAttachmentCoverByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idAttachmentCover'
        description: Attributes of "Cards Id Attachment Cover" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsIdAttachmentCoverByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-idAttachmentCover
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/idBoard:
    put:
      operationId: Card_updateBoardByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idBoard'
        description: Attributes of "Cards Id Board" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsIdBoardByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-idBoard
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/idLabels:
    post:
      operationId: Card_addIdLabelsToCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idLabels'
        description: Attributes of "Cards Id Labels" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsIdLabelsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-idLabels
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/idLabels/{idLabel}:
    delete:
      operationId: Card_removeLabelByIdCardByIdLabel
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idLabel
        explode: false
        in: path
        name: idLabel
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteCardsIdLabelsByIdCardByIdLabel()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--cards-idCard-idLabels-idLabel
      x-accepts: application/json
  /cards/{idCard}/idList:
    put:
      operationId: Card_updateIdListByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idList'
        description: Attributes of "Cards Id List" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsIdListByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-idList
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/idMembers:
    post:
      operationId: Card_addMembers
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idMembers'
        description: Attributes of "Cards Id Members" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsIdMembersByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-idMembers
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Card_updateIdMembers
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idMembers'
        description: Attributes of "Cards Id Members" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsIdMembersByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-idMembers
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/idMembers/{idMember}:
    delete:
      operationId: Card_removeMemberByIdMember
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idMember
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteCardsIdMembersByIdCardByIdMember()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--cards-idCard-idMembers-idMember
      x-accepts: application/json
  /cards/{idCard}/labels:
    post:
      operationId: Card_addLabels
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_labels'
        description: Attributes of "Cards Labels" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsLabelsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-labels
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Card_updateLabels
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_labels'
        description: Attributes of "Cards Labels" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsLabelsByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-labels
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/labels/{color}:
    delete:
      operationId: Card_removeLabelsByIdCardByColor
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: color
        explode: false
        in: path
        name: color
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteCardsLabelsByIdCardByColor()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--cards-idCard-labels-color
      x-accepts: application/json
  /cards/{idCard}/list:
    get:
      operationId: Card_getListById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-list-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsListByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-list
      x-accepts: application/json
  /cards/{idCard}/list/{field}:
    get:
      operationId: Card_getCardsListByIdCardByField
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsListByIdCardByField()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-list-field
      x-accepts: application/json
  /cards/{idCard}/markAssociatedNotificationsRead:
    post:
      operationId: Card_markAssociatedNotificationsRead
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsMarkAssociatedNotificationsReadByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-markAssociatedNotificationsRead
      x-accepts: application/json
  /cards/{idCard}/members:
    get:
      operationId: Card_listMembersByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-members-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsMembersByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-members
      x-accepts: application/json
  /cards/{idCard}/membersVoted:
    get:
      operationId: Card_getMembersVotedByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-membersVoted-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsMembersVotedByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-membersVoted
      x-accepts: application/json
    post:
      operationId: Card_addMembersVoted
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_membersVoted'
        description: Attributes of "Cards Members Voted" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsMembersVotedByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-membersVoted
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/membersVoted/{idMember}:
    delete:
      operationId: Card_removeMembersVotedByIdCardByIdMember
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idMember
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteCardsMembersVotedByIdCardByIdMember()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--cards-idCard-membersVoted-idMember
      x-accepts: application/json
  /cards/{idCard}/name:
    put:
      operationId: Card_updateNameById
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_name'
        description: Attributes of "Cards Name" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsNameByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-name
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/pos:
    put:
      operationId: Card_updatePosByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_pos'
        description: Attributes of "Cards Pos" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsPosByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-pos
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/stickers:
    get:
      operationId: Card_getStickersByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: image, imageScaled, imageUrl,\
          \ left, rotate, top or zIndex"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-stickers-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsStickersByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-stickers
      x-accepts: application/json
    post:
      operationId: Card_addStickersByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_stickers'
        description: Attributes of "Cards Stickers" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addCardsStickersByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--cards-idCard-stickers
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/stickers/{idSticker}:
    delete:
      operationId: Card_removeStickerByIds
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idSticker
        explode: false
        in: path
        name: idSticker
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteCardsStickersByIdCardByIdSticker()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--cards-idCard-stickers-idSticker
      x-accepts: application/json
    get:
      operationId: Card_getStickerByIds
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idSticker
        explode: false
        in: path
        name: idSticker
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: image, imageScaled, imageUrl,\
          \ left, rotate, top or zIndex"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-stickers-idSticker-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getCardsStickersByIdCardByIdSticker()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-stickers-idSticker
      x-accepts: application/json
    put:
      operationId: Card_updateStickersByIdCardByIdSticker
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: idSticker
        explode: false
        in: path
        name: idSticker
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_stickers'
        description: Attributes of "Cards Stickers" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsStickersByIdCardByIdSticker()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-stickers-idSticker
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/subscribed:
    put:
      operationId: Card_updateSubscribedByIdCard
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_subscribed'
        description: Attributes of "Cards Subscribed" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateCardsSubscribedByIdCard()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--cards-idCard-subscribed
      x-content-type: application/json
      x-accepts: application/json
  /cards/{idCard}/{field}:
    get:
      operationId: Card_getByIdField
      parameters:
      - description: card id or shortlink
        explode: false
        in: path
        name: idCard
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getCardsByIdCardByField()
      tags:
      - card
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--cards-idCard-field
      x-accepts: application/json
  /checklists:
    post:
      operationId: Checklist_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists'
        description: Attributes of "Checklists" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addChecklists()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--checklists
      x-content-type: application/json
      x-accepts: application/json
  /checklists/{idChecklist}:
    delete:
      operationId: Checklist_removeById
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteChecklistsByIdChecklist()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--checklists-idChecklist
      x-accepts: application/json
    get:
      operationId: Checklist_getById
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all, closed, none, open or visible"
        explode: true
        in: query
        name: cards
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: card_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-get-parameters-2-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checkItems
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-get-parameters-3-schema
        style: form
      - description: "all or a comma-separated list of: name, nameData, pos, state\
          \ or type"
        explode: true
        in: query
        name: checkItem_fields
        required: false
        schema:
          default: "name, nameData, pos and state"
          example: "name, nameData, pos and state"
          type: string
          x-konfig-original-example: "name, nameData, pos and state"
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-get-parameters-4-schema
        style: form
      - description: "all or a comma-separated list of: idBoard, idCard, name or pos"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-get-parameters-5-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getChecklistsByIdChecklist()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist
      x-accepts: application/json
    put:
      operationId: Checklist_updateByIdChecklist
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists'
        description: Attributes of "Checklists" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateChecklistsByIdChecklist()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--checklists-idChecklist
      x-content-type: application/json
      x-accepts: application/json
  /checklists/{idChecklist}/board:
    get:
      operationId: Checklist_getBoardByIdChecklist
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-board-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getChecklistsBoardByIdChecklist()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-board
      x-accepts: application/json
  /checklists/{idChecklist}/board/{field}:
    get:
      operationId: Checklist_getBoardByIdChecklistByField
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getChecklistsBoardByIdChecklistByField()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-board-field
      x-accepts: application/json
  /checklists/{idChecklist}/cards:
    get:
      operationId: Checklist_listCardsByIdChecklist
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: attachment_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-3-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: stickers
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: members
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-6-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: checkItemStates
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checklists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-8-schema
        style: form
      - description: a number from 1 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all, closed, none or open"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: open
          example: open
          type: string
          x-konfig-original-example: open
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-12-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-13-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getChecklistsCardsByIdChecklist()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-cards
      x-accepts: application/json
  /checklists/{idChecklist}/cards/{filter}:
    get:
      operationId: Checklist_getCardsByFilter
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getChecklistsCardsByIdChecklistByFilter()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-cards-filter
      x-accepts: application/json
  /checklists/{idChecklist}/checkItems:
    get:
      operationId: Checklist_getCheckItemsByIdChecklist
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all or none"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-checkItems-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: name, nameData, pos, state\
          \ or type"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: "name, nameData, pos and state"
          example: "name, nameData, pos and state"
          type: string
          x-konfig-original-example: "name, nameData, pos and state"
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-checkItems-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getChecklistsCheckItemsByIdChecklist()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-checkItems
      x-accepts: application/json
    post:
      operationId: Checklist_addCheckItemsByIdChecklist
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists_checkItems'
        description: Attributes of "Checklists Check Items" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addChecklistsCheckItemsByIdChecklist()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--checklists-idChecklist-checkItems
      x-content-type: application/json
      x-accepts: application/json
  /checklists/{idChecklist}/checkItems/{idCheckItem}:
    delete:
      operationId: Checklist_removeByIdCheckItem
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: idCheckItem
        explode: false
        in: path
        name: idCheckItem
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteChecklistsCheckItemsByIdChecklistByIdCheckItem()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--checklists-idChecklist-checkItems-idCheckItem
      x-accepts: application/json
    get:
      operationId: Checklist_getCheckItemsByIdChecklistByIdCheckItem
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: idCheckItem
        explode: false
        in: path
        name: idCheckItem
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: name, nameData, pos, state\
          \ or type"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: "name, nameData, pos and state"
          example: "name, nameData, pos and state"
          type: string
          x-konfig-original-example: "name, nameData, pos and state"
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-checkItems-idCheckItem-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getChecklistsCheckItemsByIdChecklistByIdCheckItem()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-checkItems-idCheckItem
      x-accepts: application/json
  /checklists/{idChecklist}/idCard:
    put:
      operationId: Checklist_updateIdCardByIdChecklist
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists_idCard'
        description: Attributes of "Checklists Id Card" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateChecklistsIdCardByIdChecklist()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--checklists-idChecklist-idCard
      x-content-type: application/json
      x-accepts: application/json
  /checklists/{idChecklist}/name:
    put:
      operationId: Checklist_updateNameByIdChecklist
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists_name'
        description: Attributes of "Checklists Name" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateChecklistsNameByIdChecklist()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--checklists-idChecklist-name
      x-content-type: application/json
      x-accepts: application/json
  /checklists/{idChecklist}/pos:
    put:
      operationId: Checklist_updatePosByIdChecklist
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists_pos'
        description: Attributes of "Checklists Pos" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateChecklistsPosByIdChecklist()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--checklists-idChecklist-pos
      x-content-type: application/json
      x-accepts: application/json
  /checklists/{idChecklist}/{field}:
    get:
      operationId: Checklist_getByIdField
      parameters:
      - description: idChecklist
        explode: false
        in: path
        name: idChecklist
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getChecklistsByIdChecklistByField()
      tags:
      - checklist
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-field
      x-accepts: application/json
  /labels:
    post:
      operationId: Label_createLabels
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels'
        description: Attributes of "Labels" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addLabels()
      tags:
      - label
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--labels
      x-content-type: application/json
      x-accepts: application/json
  /labels/{idLabel}:
    delete:
      operationId: Label_removeByIdLabel
      parameters:
      - description: idLabel
        explode: false
        in: path
        name: idLabel
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteLabelsByIdLabel()
      tags:
      - label
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--labels-idLabel
      x-accepts: application/json
    get:
      operationId: Label_getByIdLabel
      parameters:
      - description: idLabel
        explode: false
        in: path
        name: idLabel
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: color, idBoard, name or uses"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--labels-idLabel-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getLabelsByIdLabel()
      tags:
      - label
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--labels-idLabel
      x-accepts: application/json
    put:
      operationId: Label_updateByIdLabel
      parameters:
      - description: idLabel
        explode: false
        in: path
        name: idLabel
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels'
        description: Attributes of "Labels" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateLabelsByIdLabel()
      tags:
      - label
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--labels-idLabel
      x-content-type: application/json
      x-accepts: application/json
  /labels/{idLabel}/board:
    get:
      operationId: Label_getBoardByIdLabel
      parameters:
      - description: idLabel
        explode: false
        in: path
        name: idLabel
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--labels-idLabel-board-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getLabelsBoardByIdLabel()
      tags:
      - label
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--labels-idLabel-board
      x-accepts: application/json
  /labels/{idLabel}/board/{field}:
    get:
      operationId: Label_getBoardByIdLabelByField
      parameters:
      - description: idLabel
        explode: false
        in: path
        name: idLabel
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getLabelsBoardByIdLabelByField()
      tags:
      - label
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--labels-idLabel-board-field
      x-accepts: application/json
  /labels/{idLabel}/color:
    put:
      operationId: Label_updateColorByIdLabel
      parameters:
      - description: idLabel
        explode: false
        in: path
        name: idLabel
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels_color'
        description: Attributes of "Labels Color" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateLabelsColorByIdLabel()
      tags:
      - label
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--labels-idLabel-color
      x-content-type: application/json
      x-accepts: application/json
  /labels/{idLabel}/name:
    put:
      operationId: Label_updateNameByIdLabel
      parameters:
      - description: idLabel
        explode: false
        in: path
        name: idLabel
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels_name'
        description: Attributes of "Labels Name" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateLabelsNameByIdLabel()
      tags:
      - label
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--labels-idLabel-name
      x-content-type: application/json
      x-accepts: application/json
  /lists:
    post:
      operationId: List_createList
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists'
        description: Attributes of "Lists" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addLists()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--lists
      x-content-type: application/json
      x-accepts: application/json
  /lists/{idList}:
    get:
      operationId: List_getByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all, closed, none or open"
        explode: true
        in: query
        name: cards
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: card_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-get-parameters-2-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: board
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: board_fields
        required: false
        schema:
          default: "name, desc, descData, closed, idOrganization, pinned, url and\
            \ prefs"
          example: "name, desc, descData, closed, idOrganization, pinned, url and\
            \ prefs"
          type: string
          x-konfig-original-example: "name, desc, descData, closed, idOrganization,\
            \ pinned, url and prefs"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-get-parameters-4-schema
        style: form
      - description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: "name, closed, idBoard and pos"
          example: "name, closed, idBoard and pos"
          type: string
          x-konfig-original-example: "name, closed, idBoard and pos"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-get-parameters-5-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getListsByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--lists-idList
      x-accepts: application/json
    put:
      operationId: List_updateByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists'
        description: Attributes of "Lists" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateListsByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--lists-idList
      x-content-type: application/json
      x-accepts: application/json
  /lists/{idList}/actions:
    get:
      operationId: List_getActionsByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      - description: ' true or false'
        explode: true
        in: query
        name: entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: display
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-3-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-4-schema
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-5-schema
        style: form
      - description: "One of: count, list or minimal"
        explode: true
        in: query
        name: format
        required: false
        schema:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-6-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: Page * limit must be less than 1000
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-9-schema
        style: form
      - description: Only return actions related to these model ids
        explode: true
        in: query
        name: idModels
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-12-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: memberCreator
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-14-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getListsActionsByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--lists-idList-actions
      x-accepts: application/json
  /lists/{idList}/archiveAllCards:
    post:
      operationId: List_archiveAllCardsByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addListsArchiveAllCardsByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--lists-idList-archiveAllCards
      x-accepts: application/json
  /lists/{idList}/board:
    get:
      operationId: List_idBoardGet
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-board-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getListsBoardByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--lists-idList-board
      x-accepts: application/json
  /lists/{idList}/board/{field}:
    get:
      operationId: List_getBoardByIdListByField
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getListsBoardByIdListByField()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--lists-idList-board-field
      x-accepts: application/json
  /lists/{idList}/cards:
    get:
      operationId: List_getCardsByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: attachment_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-cards-get-parameters-3-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: stickers
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: members
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-cards-get-parameters-6-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: checkItemStates
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checklists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-cards-get-parameters-8-schema
        style: form
      - description: a number from 1 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all, closed, none or open"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: open
          example: open
          type: string
          x-konfig-original-example: open
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-cards-get-parameters-12-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-cards-get-parameters-13-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getListsCardsByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--lists-idList-cards
      x-accepts: application/json
    post:
      operationId: List_createCardsByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_cards'
        description: Attributes of "Lists Cards" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addListsCardsByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--lists-idList-cards
      x-content-type: application/json
      x-accepts: application/json
  /lists/{idList}/cards/{filter}:
    get:
      operationId: List_getCardsByFilter
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getListsCardsByIdListByFilter()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--lists-idList-cards-filter
      x-accepts: application/json
  /lists/{idList}/closed:
    put:
      operationId: List_updateClosedByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_closed'
        description: Attributes of "Lists Closed" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateListsClosedByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--lists-idList-closed
      x-content-type: application/json
      x-accepts: application/json
  /lists/{idList}/idBoard:
    put:
      operationId: List_updateIdBoardByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_idBoard'
        description: Attributes of "Lists Id Board" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateListsIdBoardByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--lists-idList-idBoard
      x-content-type: application/json
      x-accepts: application/json
  /lists/{idList}/moveAllCards:
    post:
      operationId: List_moveAllCardsByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_moveAllCards'
        description: Attributes of "Lists Move All Cards" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addListsMoveAllCardsByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--lists-idList-moveAllCards
      x-content-type: application/json
      x-accepts: application/json
  /lists/{idList}/name:
    put:
      operationId: List_updateNameByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_name'
        description: Attributes of "Lists Name" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateListsNameByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--lists-idList-name
      x-content-type: application/json
      x-accepts: application/json
  /lists/{idList}/pos:
    put:
      operationId: List_updatePosByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_pos'
        description: Attributes of "Lists Pos" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateListsPosByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--lists-idList-pos
      x-content-type: application/json
      x-accepts: application/json
  /lists/{idList}/subscribed:
    put:
      operationId: List_updateSubscribedByIdList
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_subscribed'
        description: Attributes of "Lists Subscribed" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateListsSubscribedByIdList()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--lists-idList-subscribed
      x-content-type: application/json
      x-accepts: application/json
  /lists/{idList}/{field}:
    get:
      operationId: List_getByIdListByField
      parameters:
      - description: idList
        explode: false
        in: path
        name: idList
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getListsByIdListByField()
      tags:
      - list
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--lists-idList-field
      x-accepts: application/json
  /members/{idMember}:
    get:
      description: "If you specify 'me' as the username, this call will respond as\
        \ if you had supplied the username associated with the supplied token"
      operationId: Member_getById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_display
        required: false
        schema:
          type: string
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: actions_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-4-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: action_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-5-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: action_since
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: action_before
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all, closed, none, open or visible"
        explode: true
        in: query
        name: cards
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-8-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: card_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-9-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: card_members
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: card_member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-11-schema
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: card_attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: card_attachment_fields
        required: false
        schema:
          default: url and previews
          example: url and previews
          type: string
          x-konfig-original-example: url and previews
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-13-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: card_stickers
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, members, open, organization,\
          \ pinned, public, starred or unpinned"
        explode: true
        in: query
        name: boards
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: board_fields
        required: false
        schema:
          default: "name, closed, idOrganization and pinned"
          example: "name, closed, idOrganization and pinned"
          type: string
          x-konfig-original-example: "name, closed, idOrganization and pinned"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-16-schema
        style: form
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: board_actions
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: board_actions_entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: board_actions_display
        required: false
        schema:
          type: string
        style: form
      - description: "One of: count, list or minimal"
        explode: true
        in: query
        name: board_actions_format
        required: false
        schema:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-20-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: board_actions_since
        required: false
        schema:
          type: string
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: board_actions_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-22-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: board_action_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-23-schema
        style: form
      - description: "One of: all, closed, none or open"
        explode: true
        in: query
        name: board_lists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-24-schema
        style: form
      - description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        explode: true
        in: query
        name: board_memberships
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-25-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: board_organization
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: board_organization_fields
        required: false
        schema:
          default: name and displayName
          example: name and displayName
          type: string
          x-konfig-original-example: name and displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-27-schema
        style: form
      - description: "all or a comma-separated list of: closed, members, open, organization,\
          \ pinned, public, starred or unpinned"
        explode: true
        in: query
        name: boardsInvited
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: boardsInvited_fields
        required: false
        schema:
          default: "name, closed, idOrganization and pinned"
          example: "name, closed, idOrganization and pinned"
          type: string
          x-konfig-original-example: "name, closed, idOrganization and pinned"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-29-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: boardStars
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: savedSearches
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all, members, none or public"
        explode: true
        in: query
        name: organizations
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-32-schema
        style: form
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: organization_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-33-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: organization_paid_account
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all, members, none or public"
        explode: true
        in: query
        name: organizationsInvited
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-35-schema
        style: form
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: organizationsInvited_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-36-schema
        style: form
      - description: "all or a comma-separated list of: addAdminToBoard, addAdminToOrganization,\
          \ addedAttachmentToCard, addedMemberToCard, addedToBoard, addedToCard, addedToOrganization,\
          \ cardDueSoon, changeCard, closeBoard, commentCard, createdCard, declinedInvitationToBoard,\
          \ declinedInvitationToOrganization, invitedToBoard, invitedToOrganization,\
          \ makeAdminOfBoard, makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,\
          \ removedFromBoard, removedFromCard, removedFromOrganization, removedMemberFromCard,\
          \ unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization or updateCheckItemStateOnCard"
        explode: true
        in: query
        name: notifications
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: notifications_entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: notifications_display
        required: false
        schema:
          type: string
        style: form
      - description: a number from 1 to 1000
        explode: true
        in: query
        name: notifications_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-40-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator,\
          \ type or unread"
        explode: true
        in: query
        name: notification_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-41-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: notification_memberCreator
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: notification_memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-43-schema
        style: form
      - description: "An id, or null"
        explode: true
        in: query
        name: notification_before
        required: false
        schema:
          type: string
        style: form
      - description: "An id, or null"
        explode: true
        in: query
        name: notification_since
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: tokens
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-46-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: paid_account
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all, custom, default, none or premium"
        explode: true
        in: query
        name: boardBackgrounds
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-48-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: customBoardBackgrounds
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-49-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: customStickers
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-50-schema
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: customEmoji
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-51-schema
        style: form
      - description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-52-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember
      x-accepts: application/json
    put:
      operationId: Member_updateByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members'
        description: Attributes of "Members" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/actions:
    get:
      operationId: Member_listActionsByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: ' true or false'
        explode: true
        in: query
        name: entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: display
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-3-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-4-schema
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-5-schema
        style: form
      - description: "One of: count, list or minimal"
        explode: true
        in: query
        name: format
        required: false
        schema:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-6-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: Page * limit must be less than 1000
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-9-schema
        style: form
      - description: Only return actions related to these model ids
        explode: true
        in: query
        name: idModels
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-12-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: memberCreator
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-14-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersActionsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-actions
      x-accepts: application/json
  /members/{idMember}/avatar:
    post:
      operationId: Member_uploadAvatarById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_avatar'
        description: Attributes of "Members Avatar" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addMembersAvatarByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--members-idMember-avatar
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/avatarSource:
    put:
      operationId: Member_updateAvatarSource
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_avatarSource'
        description: Attributes of "Members Avatar Source" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersAvatarSourceByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-avatarSource
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/bio:
    put:
      operationId: Member_updateBioById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_bio'
        description: Attributes of "Members Bio" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersBioByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-bio
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/boardBackgrounds:
    get:
      operationId: Member_getBoardBackgroundsById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all, custom, default, none or premium"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boardBackgrounds-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersBoardBackgroundsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-boardBackgrounds
      x-accepts: application/json
    post:
      operationId: Member_addBoardBackgrounds
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardBackgrounds'
        description: Attributes of "Members Board Backgrounds" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addMembersBoardBackgroundsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--members-idMember-boardBackgrounds
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/boardBackgrounds/{idBoardBackground}:
    delete:
      operationId: Member_deleteBoardBackground
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardBackground
        explode: false
        in: path
        name: idBoardBackground
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--members-idMember-boardBackgrounds-idBoardBackground
      x-accepts: application/json
    get:
      operationId: Member_getBoardBackgroundByIds
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardBackground
        explode: false
        in: path
        name: idBoardBackground
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: brightness, fullSizeUrl, scaled\
          \ or tile"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boardBackgrounds-idBoardBackground-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersBoardBackgroundsByIdMemberByIdBoardBackground()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-boardBackgrounds-idBoardBackground
      x-accepts: application/json
    put:
      operationId: Member_updateBoardBackgroundsById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardBackground
        explode: false
        in: path
        name: idBoardBackground
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardBackgrounds'
        description: Attributes of "Members Board Backgrounds" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersBoardBackgroundsByIdMemberByIdBoardBackground()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-boardBackgrounds-idBoardBackground
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/boardStars:
    get:
      operationId: Member_getBoardStarsById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersBoardStarsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-boardStars
      x-accepts: application/json
    post:
      operationId: Member_addBoardStarsByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardStars'
        description: Attributes of "Members Board Stars" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addMembersBoardStarsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--members-idMember-boardStars
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/boardStars/{idBoardStar}:
    delete:
      operationId: Member_removeBoardStarByIdMemberByIdBoardStar
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardStar
        explode: false
        in: path
        name: idBoardStar
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteMembersBoardStarsByIdMemberByIdBoardStar()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--members-idMember-boardStars-idBoardStar
      x-accepts: application/json
    get:
      operationId: Member_getBoardStarByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardStar
        explode: false
        in: path
        name: idBoardStar
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersBoardStarsByIdMemberByIdBoardStar()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-boardStars-idBoardStar
      x-accepts: application/json
    put:
      operationId: Member_updateBoardStar
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardStar
        explode: false
        in: path
        name: idBoardStar
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardStars'
        description: Attributes of "Members Board Stars" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersBoardStarsByIdMemberByIdBoardStar()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-boardStars-idBoardStar
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/boardStars/{idBoardStar}/idBoard:
    put:
      operationId: Member_updateBoardStarsIdBoard
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardStar
        explode: false
        in: path
        name: idBoardStar
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardStars_idBoard'
        description: Attributes of "Members Board Stars Id Board" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-boardStars-idBoardStar-idBoard
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/boardStars/{idBoardStar}/pos:
    put:
      operationId: Member_updateBoardStarPosByIdMemberByIdBoardStar
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardStar
        explode: false
        in: path
        name: idBoardStar
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardStars_pos'
        description: Attributes of "Members Board Stars Pos" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersBoardStarsPosByIdMemberByIdBoardStar()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-boardStars-idBoardStar-pos
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/boards:
    get:
      operationId: Member_getBoardsByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, members, open, organization,\
          \ pinned, public, starred or unpinned"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-2-schema
        style: form
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_entities
        required: false
        schema:
          type: string
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: actions_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-5-schema
        style: form
      - description: "One of: count, list or minimal"
        explode: true
        in: query
        name: actions_format
        required: false
        schema:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-6-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: actions_since
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: action_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-8-schema
        style: form
      - description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        explode: true
        in: query
        name: memberships
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-9-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: organization
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: organization_fields
        required: false
        schema:
          default: name and displayName
          example: name and displayName
          type: string
          x-konfig-original-example: name and displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-11-schema
        style: form
      - description: "One of: all, closed, none or open"
        explode: true
        in: query
        name: lists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-12-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersBoardsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-boards
      x-accepts: application/json
  /members/{idMember}/boards/{filter}:
    get:
      operationId: Member_getBoards
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getMembersBoardsByIdMemberByFilter()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-boards-filter
      x-accepts: application/json
  /members/{idMember}/boardsInvited:
    get:
      operationId: Member_getInvitedBoards
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boardsInvited-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersBoardsInvitedByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-boardsInvited
      x-accepts: application/json
  /members/{idMember}/boardsInvited/{field}:
    get:
      operationId: Member_getBoardsInvitedByIdMemberByField
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersBoardsInvitedByIdMemberByField()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-boardsInvited-field
      x-accepts: application/json
  /members/{idMember}/cards:
    get:
      operationId: Member_getCardsByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: attachment_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-cards-get-parameters-3-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: stickers
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: members
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-cards-get-parameters-6-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: checkItemStates
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checklists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-cards-get-parameters-8-schema
        style: form
      - description: a number from 1 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all, closed, none, open or visible"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: visible
          example: visible
          type: string
          x-konfig-original-example: visible
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-cards-get-parameters-12-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-cards-get-parameters-13-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersCardsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-cards
      x-accepts: application/json
  /members/{idMember}/cards/{filter}:
    get:
      operationId: Member_getCardsByFilter
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getMembersCardsByIdMemberByFilter()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-cards-filter
      x-accepts: application/json
  /members/{idMember}/customBoardBackgrounds:
    get:
      operationId: Member_getCustomBoardBackgroundsById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all or none"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customBoardBackgrounds-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersCustomBoardBackgroundsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-customBoardBackgrounds
      x-accepts: application/json
    post:
      operationId: Member_addCustomBoardBackgrounds
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_customBoardBackgrounds'
        description: Attributes of "Members Custom Board Backgrounds" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addMembersCustomBoardBackgroundsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--members-idMember-customBoardBackgrounds
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/customBoardBackgrounds/{idBoardBackground}:
    delete:
      operationId: Member_removeCustomBoardBackgroundById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardBackground
        explode: false
        in: path
        name: idBoardBackground
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--members-idMember-customBoardBackgrounds-idBoardBackground
      x-accepts: application/json
    get:
      operationId: Member_getCustomBoardBackgroundByIds
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardBackground
        explode: false
        in: path
        name: idBoardBackground
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: brightness, fullSizeUrl, scaled\
          \ or tile"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customBoardBackgrounds-idBoardBackground-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-customBoardBackgrounds-idBoardBackground
      x-accepts: application/json
    put:
      operationId: Member_updateCustomBoardBackgrounds
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idBoardBackground
        explode: false
        in: path
        name: idBoardBackground
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_customBoardBackgrounds'
        description: Attributes of "Members Custom Board Backgrounds" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-customBoardBackgrounds-idBoardBackground
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/customEmoji:
    get:
      description: This gets the list of all of the user’s uploaded emoji
      operationId: Member_listCustomEmojiByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all or none"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customEmoji-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersCustomEmojiByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-customEmoji
      x-accepts: application/json
    post:
      operationId: Member_addCustomEmojiByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_customEmoji'
        description: Attributes of "Members Custom Emoji" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addMembersCustomEmojiByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--members-idMember-customEmoji
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/customEmoji/{idCustomEmoji}:
    get:
      operationId: Member_getCustomEmojiByIds
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idCustomEmoji
        explode: false
        in: path
        name: idCustomEmoji
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: name or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customEmoji-idCustomEmoji-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersCustomEmojiByIdMemberByIdCustomEmoji()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-customEmoji-idCustomEmoji
      x-accepts: application/json
  /members/{idMember}/customStickers:
    get:
      description: This gets a list of all of the user’s uploaded stickers
      operationId: Member_getCustomStickersByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all or none"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customStickers-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersCustomStickersByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-customStickers
      x-accepts: application/json
    post:
      operationId: Member_addCustomStickers
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_customStickers'
        description: Attributes of "Members Custom Stickers" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addMembersCustomStickersByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--members-idMember-customStickers
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/customStickers/{idCustomSticker}:
    delete:
      operationId: Member_removeCustomStickerByIds
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idCustomSticker
        explode: false
        in: path
        name: idCustomSticker
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteMembersCustomStickersByIdMemberByIdCustomSticker()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--members-idMember-customStickers-idCustomSticker
      x-accepts: application/json
    get:
      operationId: Member_getCustomStickerByIds
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idCustomSticker
        explode: false
        in: path
        name: idCustomSticker
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: scaled or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customStickers-idCustomSticker-get-parameters-2-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersCustomStickersByIdMemberByIdCustomSticker()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-customStickers-idCustomSticker
      x-accepts: application/json
  /members/{idMember}/deltas:
    get:
      operationId: Member_getDeltasByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: A valid tag for subscribing
        explode: true
        in: query
        name: tags
        required: true
        schema:
          type: string
        style: form
      - description: a number from -1 to Infinity
        explode: true
        in: query
        name: ixLastUpdate
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersDeltasByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-deltas
      x-accepts: application/json
  /members/{idMember}/fullName:
    put:
      operationId: Member_updateFullName
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_fullName'
        description: Attributes of "Members Full Name" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersFullNameByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-fullName
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/initials:
    put:
      operationId: Member_updateInitialsByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_initials'
        description: Attributes of "Members Initials" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersInitialsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-initials
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/notifications:
    get:
      description: You can only read the notifications for the member associated with
        the supplied token
      operationId: Member_getNotificationsByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: ' true or false'
        explode: true
        in: query
        name: entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: display
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: addAdminToBoard, addAdminToOrganization,\
          \ addedAttachmentToCard, addedMemberToCard, addedToBoard, addedToCard, addedToOrganization,\
          \ cardDueSoon, changeCard, closeBoard, commentCard, createdCard, declinedInvitationToBoard,\
          \ declinedInvitationToOrganization, invitedToBoard, invitedToOrganization,\
          \ makeAdminOfBoard, makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,\
          \ removedFromBoard, removedFromCard, removedFromOrganization, removedMemberFromCard,\
          \ unconfirmedInvitedToBoard, unconfirmedInvitedToOrganization or updateCheckItemStateOnCard"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-3-schema
        style: form
      - description: "One of: all, read or unread"
        explode: true
        in: query
        name: read_filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-4-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator,\
          \ type or unread"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-5-schema
        style: form
      - description: a number from 1 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-6-schema
        style: form
      - description: a number from 0 to 100
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-7-schema
        style: form
      - description: "An id, or null"
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: "An id, or null"
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: memberCreator
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-11-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersNotificationsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-notifications
      x-accepts: application/json
  /members/{idMember}/notifications/{filter}:
    get:
      operationId: Member_getNotificationsByIdMemberByFilter
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getMembersNotificationsByIdMemberByFilter()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-notifications-filter
      x-accepts: application/json
  /members/{idMember}/oneTimeMessagesDismissed:
    post:
      operationId: Member_addOneTimeMessagesDismissedByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_oneTimeMessagesDismissed'
        description: Attributes of "Members One Time Messages Dismissed" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addMembersOneTimeMessagesDismissedByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--members-idMember-oneTimeMessagesDismissed
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/organizations:
    get:
      operationId: Member_listOrganizationsById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all, members, none or public"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-organizations-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-organizations-get-parameters-2-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: paid_account
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersOrganizationsByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-organizations
      x-accepts: application/json
  /members/{idMember}/organizations/{filter}:
    get:
      operationId: Member_getOrganizations
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getMembersOrganizationsByIdMemberByFilter()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-organizations-filter
      x-accepts: application/json
  /members/{idMember}/organizationsInvited:
    get:
      operationId: Member_listInvitedOrganizationsById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-organizationsInvited-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersOrganizationsInvitedByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-organizationsInvited
      x-accepts: application/json
  /members/{idMember}/organizationsInvited/{field}:
    get:
      operationId: Member_listOrganizationsInvitedByIdMemberByField
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersOrganizationsInvitedByIdMemberByField()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-organizationsInvited-field
      x-accepts: application/json
  /members/{idMember}/prefs/colorBlind:
    put:
      operationId: Member_updatePrefsColorBlindByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_colorBlind'
        description: Attributes of "Prefs Color Blind" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersPrefsColorBlindByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-prefs-colorBlind
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/prefs/locale:
    put:
      operationId: Member_updatePrefsLocaleByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_locale'
        description: Attributes of "Prefs Locale" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersPrefsLocaleByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-prefs-locale
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/prefs/minutesBetweenSummaries:
    put:
      operationId: Member_updatePrefsMinutesBetweenSummariesById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_minutesBetweenSummaries'
        description: Attributes of "Prefs Minutes Between Summaries" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersPrefsMinutesBetweenSummariesByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-prefs-minutesBetweenSummaries
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/savedSearches:
    get:
      operationId: Member_getSavedSearchesByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersSavedSearchesByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-savedSearches
      x-accepts: application/json
    post:
      operationId: Member_createSavedSearch
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_savedSearches'
        description: Attributes of "Members Saved Searches" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addMembersSavedSearchesByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--members-idMember-savedSearches
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/savedSearches/{idSavedSearch}:
    delete:
      operationId: Member_removeSavedSearchByIds
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idSavedSearch
        explode: false
        in: path
        name: idSavedSearch
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteMembersSavedSearchesByIdMemberByIdSavedSearch()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--members-idMember-savedSearches-idSavedSearch
      x-accepts: application/json
    get:
      operationId: Member_getSavedSearchByIds
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idSavedSearch
        explode: false
        in: path
        name: idSavedSearch
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersSavedSearchesByIdMemberByIdSavedSearch()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-savedSearches-idSavedSearch
      x-accepts: application/json
    put:
      operationId: Member_updateSavedSearchesByIdMemberByIdSavedSearch
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idSavedSearch
        explode: false
        in: path
        name: idSavedSearch
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_savedSearches'
        description: Attributes of "Members Saved Searches" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersSavedSearchesByIdMemberByIdSavedSearch()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-savedSearches-idSavedSearch
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/savedSearches/{idSavedSearch}/name:
    put:
      operationId: Member_updateSavedSearchesNameByIdMemberByIdSavedSearch
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idSavedSearch
        explode: false
        in: path
        name: idSavedSearch
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_savedSearches_name'
        description: Attributes of "Members Saved Searches Name" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersSavedSearchesNameByIdMemberByIdSavedSearch()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-savedSearches-idSavedSearch-name
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/savedSearches/{idSavedSearch}/pos:
    put:
      operationId: Member_updateSavedSearchesPosByIdMemberByIdSavedSearch
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idSavedSearch
        explode: false
        in: path
        name: idSavedSearch
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_savedSearches_pos'
        description: Attributes of "Members Saved Searches Pos" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersSavedSearchesPosByIdMemberByIdSavedSearch()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-savedSearches-idSavedSearch-pos
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/savedSearches/{idSavedSearch}/query:
    put:
      operationId: Member_updateSavedSearchQueryByIdMemberByIdSavedSearch
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: idSavedSearch
        explode: false
        in: path
        name: idSavedSearch
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_savedSearches_query'
        description: Attributes of "Members Saved Searches Query" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-savedSearches-idSavedSearch-query
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/tokens:
    get:
      operationId: Member_getTokensByIdMember
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: all or none"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-tokens-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getMembersTokensByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-tokens
      x-accepts: application/json
  /members/{idMember}/username:
    put:
      operationId: Member_updateUsernameById
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_username'
        description: Attributes of "Members Username" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateMembersUsernameByIdMember()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--members-idMember-username
      x-content-type: application/json
      x-accepts: application/json
  /members/{idMember}/{field}:
    get:
      operationId: Member_getByField
      parameters:
      - description: idMember or username
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getMembersByIdMemberByField()
      tags:
      - member
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--members-idMember-field
      x-accepts: application/json
  /notifications/all/read:
    post:
      operationId: Notification_markAllAsRead
      parameters: []
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addNotificationsAllRead()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--notifications-all-read
      x-accepts: application/json
  /notifications/{idNotification}:
    get:
      operationId: Notification_getById
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: ' true or false'
        explode: true
        in: query
        name: display
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: entities
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator,\
          \ type or unread"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-3-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: memberCreator
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-5-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: board
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: board_fields
        required: false
        schema:
          default: name
          example: name
          type: string
          x-konfig-original-example: name
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-7-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: card
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: card_fields
        required: false
        schema:
          default: name
          example: name
          type: string
          x-konfig-original-example: name
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-10-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: organization
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: organization_fields
        required: false
        schema:
          default: displayName
          example: displayName
          type: string
          x-konfig-original-example: displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-12-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-14-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification
      x-accepts: application/json
    put:
      operationId: Notification_updateByIdNotification
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notifications'
        description: Attributes of "Notifications" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateNotificationsByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--notifications-idNotification
      x-content-type: application/json
      x-accepts: application/json
  /notifications/{idNotification}/board:
    get:
      operationId: Notification_getBoardById
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-board-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsBoardByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-board
      x-accepts: application/json
  /notifications/{idNotification}/board/{field}:
    get:
      operationId: Notification_getBoardByField
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsBoardByIdNotificationByField()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-board-field
      x-accepts: application/json
  /notifications/{idNotification}/card:
    get:
      operationId: Notification_getCardById
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-card-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsCardByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-card
      x-accepts: application/json
  /notifications/{idNotification}/card/{field}:
    get:
      operationId: Notification_getCardByIdNotificationByField
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsCardByIdNotificationByField()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-card-field
      x-accepts: application/json
  /notifications/{idNotification}/display:
    get:
      operationId: Notification_getDisplayByIdNotification
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsDisplayByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-display
      x-accepts: application/json
  /notifications/{idNotification}/entities:
    get:
      operationId: Notification_getEntitiesByIdNotification
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsEntitiesByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-entities
      x-accepts: application/json
  /notifications/{idNotification}/list:
    get:
      operationId: Notification_getListByIdNotification
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-list-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsListByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-list
      x-accepts: application/json
  /notifications/{idNotification}/list/{field}:
    get:
      operationId: Notification_getListByIdNotificationByField
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsListByIdNotificationByField()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-list-field
      x-accepts: application/json
  /notifications/{idNotification}/member:
    get:
      operationId: Notification_getMemberByNotification
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-member-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsMemberByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-member
      x-accepts: application/json
  /notifications/{idNotification}/member/{field}:
    get:
      operationId: Notification_getMemberByIdField
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsMemberByIdNotificationByField()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-member-field
      x-accepts: application/json
  /notifications/{idNotification}/memberCreator:
    get:
      operationId: Notification_getMemberCreatorById
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-memberCreator-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsMemberCreatorByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-memberCreator
      x-accepts: application/json
  /notifications/{idNotification}/memberCreator/{field}:
    get:
      operationId: Notification_getMemberByIdNotificationByField
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsMemberCreatorByIdNotificationByField()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-memberCreator-field
      x-accepts: application/json
  /notifications/{idNotification}/organization:
    get:
      operationId: Notification_getOrganizationByIdNotification
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-organization-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsOrganizationByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-organization
      x-accepts: application/json
  /notifications/{idNotification}/organization/{field}:
    get:
      operationId: Notification_getOrganizationByIdNotificationByField
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getNotificationsOrganizationByIdNotificationByField()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-organization-field
      x-accepts: application/json
  /notifications/{idNotification}/unread:
    put:
      operationId: Notification_updateUnreadByIdNotification
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notifications_unread'
        description: Attributes of "Notifications Unread" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateNotificationsUnreadByIdNotification()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--notifications-idNotification-unread
      x-content-type: application/json
      x-accepts: application/json
  /notifications/{idNotification}/{field}:
    get:
      operationId: Notification_getByIdField
      parameters:
      - description: idNotification
        explode: false
        in: path
        name: idNotification
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getNotificationsByIdNotificationByField()
      tags:
      - notification
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-field
      x-accepts: application/json
  /organizations:
    post:
      operationId: Organization_create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations'
        description: Attributes of "Organizations" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addOrganizations()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--organizations
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}:
    delete:
      operationId: Organization_removeByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteOrganizationsByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg
      x-accepts: application/json
    get:
      operationId: Organization_getByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_display
        required: false
        schema:
          type: string
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: actions_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-4-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: action_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-5-schema
        style: form
      - description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        explode: true
        in: query
        name: memberships
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-6-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: memberships_member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberships_member_fields
        required: false
        schema:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-8-schema
        style: form
      - description: "One of: admins, all, none, normal or owners"
        explode: true
        in: query
        name: members
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-9-schema
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials, username and confirmed"
          example: "avatarHash, fullName, initials, username and confirmed"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials, username and\
            \ confirmed"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-10-schema
        style: form
      - description: true or false ; works for premium organizations only.
        explode: true
        in: query
        name: member_activity
        required: false
        schema:
          type: string
        style: form
      - description: "One of: admins, all, none, normal or owners"
        explode: true
        in: query
        name: membersInvited
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-12-schema
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: membersInvited_fields
        required: false
        schema:
          default: "avatarHash, initials, fullName and username"
          example: "avatarHash, initials, fullName and username"
          type: string
          x-konfig-original-example: "avatarHash, initials, fullName and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-13-schema
        style: form
      - description: "all or a comma-separated list of: closed, members, open, organization,\
          \ pinned, public, starred or unpinned"
        explode: true
        in: query
        name: boards
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-14-schema
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: board_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-15-schema
        style: form
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: board_actions
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: board_actions_entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: board_actions_display
        required: false
        schema:
          type: string
        style: form
      - description: "One of: count, list or minimal"
        explode: true
        in: query
        name: board_actions_format
        required: false
        schema:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-19-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: board_actions_since
        required: false
        schema:
          type: string
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: board_actions_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-21-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: board_action_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-22-schema
        style: form
      - description: "One of: all, closed, none or open"
        explode: true
        in: query
        name: board_lists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-23-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: paid_account
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: "name, displayName, desc, descData, url, website, logoHash, products\
            \ and powerUps"
          example: "name, displayName, desc, descData, url, website, logoHash, products\
            \ and powerUps"
          type: string
          x-konfig-original-example: "name, displayName, desc, descData, url, website,\
            \ logoHash, products and powerUps"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-25-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getOrganizationsByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg
      x-accepts: application/json
    put:
      operationId: Organization_updateByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations'
        description: Attributes of "Organizations" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/actions:
    get:
      operationId: Organization_getActionsByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: ' true or false'
        explode: true
        in: query
        name: entities
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: display
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-3-schema
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-4-schema
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-5-schema
        style: form
      - description: "One of: count, list or minimal"
        explode: true
        in: query
        name: format
        required: false
        schema:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-6-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: since
        required: false
        schema:
          type: string
        style: form
      - description: "A date, or null"
        explode: true
        in: query
        name: before
        required: false
        schema:
          type: string
        style: form
      - description: Page * limit must be less than 1000
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-9-schema
        style: form
      - description: Only return actions related to these model ids
        explode: true
        in: query
        name: idModels
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-12-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: memberCreator
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: memberCreator_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-14-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getOrganizationsActionsByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-actions
      x-accepts: application/json
  /organizations/{idOrg}/boards:
    get:
      operationId: Organization_getBoardsByOrgId
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: closed, members, open, organization,\
          \ pinned, public, starred or unpinned"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-2-schema
        style: form
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: actions_entities
        required: false
        schema:
          type: string
        style: form
      - description: a number from 0 to 1000
        explode: true
        in: query
        name: actions_limit
        required: false
        schema:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-5-schema
        style: form
      - description: "One of: count, list or minimal"
        explode: true
        in: query
        name: actions_format
        required: false
        schema:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-6-schema
        style: form
      - description: "A date, null or lastView"
        explode: true
        in: query
        name: actions_since
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: data, date, idMemberCreator\
          \ or type"
        explode: true
        in: query
        name: action_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-8-schema
        style: form
      - description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        explode: true
        in: query
        name: memberships
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-9-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: organization
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: organization_fields
        required: false
        schema:
          default: name and displayName
          example: name and displayName
          type: string
          x-konfig-original-example: name and displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-11-schema
        style: form
      - description: "One of: all, closed, none or open"
        explode: true
        in: query
        name: lists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-12-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getOrganizationsBoardsByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-boards
      x-accepts: application/json
  /organizations/{idOrg}/boards/{filter}:
    get:
      operationId: Organization_getBoardsByIdOrgByFilter
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getOrganizationsBoardsByIdOrgByFilter()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-boards-filter
      x-accepts: application/json
  /organizations/{idOrg}/deltas:
    get:
      operationId: Organization_getOrganizationDeltas
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: A valid tag for subscribing
        explode: true
        in: query
        name: tags
        required: true
        schema:
          type: string
        style: form
      - description: a number from -1 to Infinity
        explode: true
        in: query
        name: ixLastUpdate
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getOrganizationsDeltasByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-deltas
      x-accepts: application/json
  /organizations/{idOrg}/desc:
    put:
      operationId: Organization_updateDescriptionByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_desc'
        description: Attributes of "Organizations Desc" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsDescByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-desc
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/displayName:
    put:
      operationId: Organization_updateDisplayNameByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_displayName'
        description: Attributes of "Organizations Display Name" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsDisplayNameByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-displayName
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/logo:
    delete:
      operationId: Organization_removeLogoByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteOrganizationsLogoByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg-logo
      x-accepts: application/json
    post:
      operationId: Organization_uploadLogoByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_logo'
        description: Attributes of "Organizations Logo" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addOrganizationsLogoByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--organizations-idOrg-logo
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/members:
    get:
      operationId: Organization_getMembersByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: "One of: admins, all, none, normal or owners"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-get-parameters-1-schema
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-get-parameters-2-schema
        style: form
      - description: true or false ; works for premium organizations only.
        explode: true
        in: query
        name: activity
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getOrganizationsMembersByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-members
      x-accepts: application/json
    put:
      operationId: Organization_updateMembersByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/organizations_members'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsMembersByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-members
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/members/{filter}:
    get:
      operationId: Organization_listMembersByIdOrgByFilter
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: filter
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getOrganizationsMembersByIdOrgByFilter()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-members-filter
      x-accepts: application/json
  /organizations/{idOrg}/members/{idMember}:
    delete:
      operationId: Organization_removeMemberByIdOrgByIdMember
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: idMember
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteOrganizationsMembersByIdOrgByIdMember()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg-members-idMember
      x-accepts: application/json
    put:
      operationId: Organization_updateMembersByIdOrgByIdMember
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: idMember
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/organizations_members'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsMembersByIdOrgByIdMember()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-members-idMember
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/members/{idMember}/all:
    delete:
      operationId: Organization_removeMemberAll
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: idMember
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteOrganizationsMembersAllByIdOrgByIdMember()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg-members-idMember-all
      x-accepts: application/json
  /organizations/{idOrg}/members/{idMember}/cards:
    get:
      operationId: Organization_listMembersCardsByIdOrgByIdMember
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: idMember
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: addAttachmentToCard, addChecklistToCard,\
          \ addMemberToBoard, addMemberToCard, addMemberToOrganization, addToOrganizationBoard,\
          \ commentCard, convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,\
          \ createBoard, createCard, createList, createOrganization, deleteAttachmentFromCard,\
          \ deleteBoardInvitation, deleteCard, deleteOrganizationInvitation, disablePowerUp,\
          \ emailCard, enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard, makeNormalMemberOfOrganization,\
          \ makeObserverOfBoard, memberJoinedTrello, moveCardFromBoard, moveCardToBoard,\
          \ moveListFromBoard, moveListToBoard, removeChecklistFromCard, removeFromOrganizationBoard,\
          \ removeMemberFromCard, unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,\
          \ updateBoard, updateCard, updateCard:closed, updateCard:desc, updateCard:idList,\
          \ updateCard:name, updateCheckItemStateOnCard, updateChecklist, updateList,\
          \ updateList:closed, updateList:name, updateMember or updateOrganization"
        explode: true
        in: query
        name: actions
        required: false
        schema:
          type: string
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: bytes, date, edgeColor, idMember,\
          \ isUpload, mimeType, name, previews or url"
        explode: true
        in: query
        name: attachment_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-4-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: members
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-6-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: checkItemStates
        required: false
        schema:
          type: string
        style: form
      - description: "One of: all or none"
        explode: true
        in: query
        name: checklists
        required: false
        schema:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-8-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: board
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: board_fields
        required: false
        schema:
          default: "name, desc, closed, idOrganization, pinned, url and prefs"
          example: "name, desc, closed, idOrganization, pinned, url and prefs"
          type: string
          x-konfig-original-example: "name, desc, closed, idOrganization, pinned,\
            \ url and prefs"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-10-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: closed, idBoard, name, pos\
          \ or subscribed"
        explode: true
        in: query
        name: list_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-12-schema
        style: form
      - description: "One of: all, closed, none, open or visible"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: visible
          example: visible
          type: string
          x-konfig-original-example: visible
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-13-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-14-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getOrganizationsMembersCardsByIdOrgByIdMember()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-members-idMember-cards
      x-accepts: application/json
  /organizations/{idOrg}/members/{idMember}/deactivated:
    put:
      operationId: Organization_updateMembersDeactivatedByIdOrgByIdMember
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: idMember
        explode: false
        in: path
        name: idMember
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_members_deactivated'
        description: Attributes of "Organizations Members Deactivated" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsMembersDeactivatedByIdOrgByIdMember()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-members-idMember-deactivated
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/membersInvited:
    get:
      operationId: Organization_getMembersInvitedByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-membersInvited-get-parameters-1-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getOrganizationsMembersInvitedByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-membersInvited
      x-accepts: application/json
  /organizations/{idOrg}/membersInvited/{field}:
    get:
      operationId: Organization_getMembersInvitedByIdOrgByField
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getOrganizationsMembersInvitedByIdOrgByField()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-membersInvited-field
      x-accepts: application/json
  /organizations/{idOrg}/memberships:
    get:
      operationId: Organization_listMembershipsByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: "all or a comma-separated list of: active, admin, deactivated,\
          \ me or normal"
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-memberships-get-parameters-1-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-memberships-get-parameters-3-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getOrganizationsMembershipsByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-memberships
      x-accepts: application/json
  /organizations/{idOrg}/memberships/{idMembership}:
    get:
      operationId: Organization_getMembershipsByIdOrgByIdMembership
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: idMembership
        explode: false
        in: path
        name: idMembership
        required: true
        schema:
          type: string
        style: simple
      - description: ' true or false'
        explode: true
        in: query
        name: member
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-memberships-idMembership-get-parameters-3-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getOrganizationsMembershipsByIdOrgByIdMembership()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-memberships-idMembership
      x-accepts: application/json
    put:
      operationId: Organization_updateMembershipByIdOrgByIdMembership
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: idMembership
        explode: false
        in: path
        name: idMembership
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_memberships'
        description: Attributes of "Organizations Memberships" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsMembershipsByIdOrgByIdMembership()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-memberships-idMembership
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/name:
    put:
      operationId: Organization_updateNameByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_name'
        description: Attributes of "Organizations Name" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsNameByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-name
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/prefs/associatedDomain:
    delete:
      operationId: Organization_deletePrefsAssociatedDomainByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteOrganizationsPrefsAssociatedDomainByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg-prefs-associatedDomain
      x-accepts: application/json
    put:
      operationId: Organization_updatePrefsAssociatedDomainByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_associatedDomain'
        description: Attributes of "Prefs Associated Domain" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsPrefsAssociatedDomainByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-associatedDomain
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/prefs/boardVisibilityRestrict/org:
    put:
      operationId: Organization_updatePrefsBoardVisibilityRestrictByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/prefs_boardVisibilityRestrict'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-boardVisibilityRestrict-org
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/prefs/boardVisibilityRestrict/private:
    put:
      operationId: Organization_updatePrefsVisibilityByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/prefs_boardVisibilityRestrict'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-boardVisibilityRestrict-private
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/prefs/boardVisibilityRestrict/public:
    put:
      operationId: Organization_updatePrefsBoardVisibilityRestrictPublicByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/prefs_boardVisibilityRestrict'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-boardVisibilityRestrict-public
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/prefs/externalMembersDisabled:
    put:
      operationId: Organization_updatePrefsExternalMembersDisabledByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_externalMembersDisabled'
        description: Attributes of "Prefs External Members Disabled" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsPrefsExternalMembersDisabledByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-externalMembersDisabled
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/prefs/googleAppsVersion:
    put:
      operationId: Organization_updatePrefsGoogleAppsVersionByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_googleAppsVersion'
        description: Attributes of "Prefs Google Apps Version" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsPrefsGoogleAppsVersionByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-googleAppsVersion
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/prefs/orgInviteRestrict:
    delete:
      operationId: Organization_removeInviteRestrictByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: An email address with optional expansion tokens
        explode: true
        in: query
        name: value
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteOrganizationsPrefsOrgInviteRestrictByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg-prefs-orgInviteRestrict
      x-accepts: application/json
    put:
      operationId: Organization_updatePrefsOrgInviteRestrictByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_orgInviteRestrict'
        description: Attributes of "Prefs Org Invite Restrict" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsPrefsOrgInviteRestrictByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-orgInviteRestrict
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/prefs/permissionLevel:
    put:
      operationId: Organization_updatePrefsPermissionLevelByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/prefs_permissionLevel'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsPrefsPermissionLevelByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-permissionLevel
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/website:
    put:
      operationId: Organization_updateWebsiteByIdOrg
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_website'
        description: Attributes of "Organizations Website" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateOrganizationsWebsiteByIdOrg()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-website
      x-content-type: application/json
      x-accepts: application/json
  /organizations/{idOrg}/{field}:
    get:
      operationId: Organization_getByIdAndField
      parameters:
      - description: idOrg or name
        explode: false
        in: path
        name: idOrg
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getOrganizationsByIdOrgByField()
      tags:
      - organization
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-field
      x-accepts: application/json
  /search:
    get:
      operationId: Search_getResults
      parameters:
      - description: a string with a length from 1 to 16384
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - description: "A comma-separated list of objectIds, 24-character hex strings"
        explode: true
        in: query
        name: idBoards
        required: false
        schema:
          default: mine
          example: mine
          type: string
          x-konfig-original-example: mine
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-1-schema
        style: form
      - description: "A comma-separated list of objectIds, 24-character hex strings"
        explode: true
        in: query
        name: idOrganizations
        required: true
        schema:
          type: string
        style: form
      - description: "A comma-separated list of objectIds, 24-character hex strings"
        explode: true
        in: query
        name: idCards
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: actions, boards, cards, members\
          \ or organizations"
        explode: true
        in: query
        name: modelTypes
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-4-schema
        style: form
      - description: "all or a comma-separated list of: closed, dateLastActivity,\
          \ dateLastView, desc, descData, idOrganization, invitations, invited, labelNames,\
          \ memberships, name, pinned, powerUps, prefs, shortLink, shortUrl, starred,\
          \ subscribed or url"
        explode: true
        in: query
        name: board_fields
        required: false
        schema:
          default: name and idOrganization
          example: name and idOrganization
          type: string
          x-konfig-original-example: name and idOrganization
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-5-schema
        style: form
      - description: a number from 1 to 1000
        explode: true
        in: query
        name: boards_limit
        required: false
        schema:
          default: "10"
          example: "10"
          type: string
          x-konfig-original-example: "10"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-6-schema
        style: form
      - description: "all or a comma-separated list of: badges, checkItemStates, closed,\
          \ dateLastActivity, desc, descData, due, email, idAttachmentCover, idBoard,\
          \ idChecklists, idLabels, idList, idMembers, idMembersVoted, idShort, labels,\
          \ manualCoverAttachment, name, pos, shortLink, shortUrl, subscribed or url"
        explode: true
        in: query
        name: card_fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-7-schema
        style: form
      - description: a number from 1 to 1000
        explode: true
        in: query
        name: cards_limit
        required: false
        schema:
          default: "10"
          example: "10"
          type: string
          x-konfig-original-example: "10"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-8-schema
        style: form
      - description: a number from 0 to 100
        explode: true
        in: query
        name: cards_page
        required: false
        schema:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-9-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: card_board
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: card_list
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: card_members
        required: false
        schema:
          type: string
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: card_stickers
        required: false
        schema:
          type: string
        style: form
      - description: A boolean value or &quot;cover&quot; for only card cover attachments
        explode: true
        in: query
        name: card_attachments
        required: false
        schema:
          type: string
        style: form
      - description: "all or a comma-separated list of: billableMemberCount, desc,\
          \ descData, displayName, idBoards, invitations, invited, logoHash, memberships,\
          \ name, powerUps, prefs, premiumFeatures, products, url or website"
        explode: true
        in: query
        name: organization_fields
        required: false
        schema:
          default: name and displayName
          example: name and displayName
          type: string
          x-konfig-original-example: name and displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-15-schema
        style: form
      - description: a number from 1 to 1000
        explode: true
        in: query
        name: organizations_limit
        required: false
        schema:
          default: "10"
          example: "10"
          type: string
          x-konfig-original-example: "10"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-16-schema
        style: form
      - description: "all or a comma-separated list of: avatarHash, bio, bioData,\
          \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
          \ status, url or username"
        explode: true
        in: query
        name: member_fields
        required: false
        schema:
          default: "avatarHash, fullName, initials, username and confirmed"
          example: "avatarHash, fullName, initials, username and confirmed"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials, username and\
            \ confirmed"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-17-schema
        style: form
      - description: a number from 1 to 1000
        explode: true
        in: query
        name: members_limit
        required: false
        schema:
          default: "10"
          example: "10"
          type: string
          x-konfig-original-example: "10"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-18-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: partial
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getSearch()
      tags:
      - search
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--search
      x-accepts: application/json
  /search/members:
    get:
      operationId: Search_findMembers
      parameters:
      - description: a string with a length from 1 to 16384
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - description: a number from 1 to 20
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "8"
          example: "8"
          type: string
          x-konfig-original-example: "8"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-members-get-parameters-1-schema
        style: form
      - description: "An id, or null"
        explode: true
        in: query
        name: idBoard
        required: false
        schema:
          type: string
        style: form
      - description: "An id, or null"
        explode: true
        in: query
        name: idOrganization
        required: false
        schema:
          type: string
        style: form
      - description: A boolean
        explode: true
        in: query
        name: onlyOrgMembers
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getSearchMembers()
      tags:
      - search
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--search-members
      x-accepts: application/json
  /sessions:
    post:
      operationId: Session_createAndUpdate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sessions'
        description: Attributes of "Sessions" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addSessions()
      tags:
      - session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--sessions
      x-content-type: application/json
      x-accepts: application/json
  /sessions/socket:
    get:
      description: This is the route for WebSocket requests.  See the socket API reference
        for a description of WebSocket usage.
      operationId: Session_getSocketSessions
      parameters: []
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getSessionsSocket()
      tags:
      - session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--sessions-socket
      x-accepts: application/json
  /sessions/{idSession}:
    put:
      operationId: Session_updateStatusByIdSession
      parameters:
      - description: idSession
        explode: false
        in: path
        name: idSession
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sessions'
        description: Attributes of "Sessions" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateSessionsByIdSession()
      tags:
      - session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--sessions-idSession
      x-content-type: application/json
      x-accepts: application/json
  /sessions/{idSession}/status:
    put:
      operationId: Session_updateStatusByIdSession
      parameters:
      - description: idSession
        explode: false
        in: path
        name: idSession
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sessions_status'
        description: Attributes of "Sessions Status" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateSessionsStatusByIdSession()
      tags:
      - session
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--sessions-idSession-status
      x-content-type: application/json
      x-accepts: application/json
  /tokens/{token}:
    delete:
      operationId: Token_deleteByToken
      parameters: []
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteTokensByToken()
      tags:
      - token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--tokens-token
      x-accepts: application/json
    get:
      operationId: Token_getByToken
      parameters:
      - description: "all or a comma-separated list of: dateCreated, dateExpires,\
          \ idMember, identifier or permissions"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--tokens-token-get-parameters-0-schema
        style: form
      - description: ' true or false'
        explode: true
        in: query
        name: webhooks
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getTokensByToken()
      tags:
      - token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tokens-token
      x-accepts: application/json
  /tokens/{token}/member:
    get:
      operationId: Token_getMemberByToken
      parameters:
      - description: "all or a comma-separated list of: avatarHash, avatarSource,\
          \ bio, bioData, confirmed, email, fullName, gravatarHash, idBoards, idBoardsPinned,\
          \ idOrganizations, idPremOrgsAdmin, initials, loginTypes, memberType, oneTimeMessagesDismissed,\
          \ prefs, premiumFeatures, products, status, status, trophies, uploadedAvatarHash,\
          \ url or username"
        explode: true
        in: query
        name: fields
        required: false
        schema:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--tokens-token-member-get-parameters-0-schema
        style: form
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getTokensMemberByToken()
      tags:
      - token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tokens-token-member
      x-accepts: application/json
  /tokens/{token}/member/{field}:
    get:
      operationId: Token_getMemberByField
      parameters:
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getTokensMemberByTokenByField()
      tags:
      - token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tokens-token-member-field
      x-accepts: application/json
  /tokens/{token}/webhooks:
    get:
      operationId: Token_getWebhooks
      parameters: []
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getTokensWebhooksByToken()
      tags:
      - token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tokens-token-webhooks
      x-accepts: application/json
    post:
      operationId: Token_registerWebhook
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tokens_webhooks'
        description: Attributes of "Tokens Webhooks" to be added.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: addTokensWebhooksByToken()
      tags:
      - token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--tokens-token-webhooks
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Token_updateWebhooksByToken
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tokens_webhooks'
        description: Attributes of "Tokens Webhooks" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateTokensWebhooksByToken()
      tags:
      - token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--tokens-token-webhooks
      x-content-type: application/json
      x-accepts: application/json
  /tokens/{token}/webhooks/{idWebhook}:
    delete:
      operationId: Token_removeByTokenByIdWebhook
      parameters:
      - description: idWebhook
        explode: false
        in: path
        name: idWebhook
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteTokensWebhooksByTokenByIdWebhook()
      tags:
      - token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--tokens-token-webhooks-idWebhook
      x-accepts: application/json
    get:
      operationId: Token_getWebhookById
      parameters:
      - description: idWebhook
        explode: false
        in: path
        name: idWebhook
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getTokensWebhooksByTokenByIdWebhook()
      tags:
      - token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tokens-token-webhooks-idWebhook
      x-accepts: application/json
  /tokens/{token}/{field}:
    get:
      operationId: Token_getByTokenByField
      parameters:
      - description: token
        explode: false
        in: path
        name: token
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getTokensByTokenByField()
      tags:
      - token
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--tokens-token-field
      x-accepts: application/json
  /types/{id}:
    get:
      operationId: Type_getById
      parameters:
      - description: id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getTypesById()
      tags:
      - type
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--types-id
      x-accepts: application/json
  /webhooks:
    put:
      operationId: Webhook_update
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/webhooks'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateWebhooks()
      tags:
      - webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--webhooks
      x-content-type: application/json
      x-accepts: application/json
  /webhooks/{idWebhook}:
    delete:
      operationId: Webhook_removeById
      parameters:
      - description: idWebhook
        explode: false
        in: path
        name: idWebhook
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: deleteWebhooksByIdWebhook()
      tags:
      - webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--webhooks-idWebhook
      x-accepts: application/json
    get:
      operationId: Webhook_getById
      parameters:
      - description: idWebhook
        explode: false
        in: path
        name: idWebhook
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: getWebhooksByIdWebhook()
      tags:
      - webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--webhooks-idWebhook
      x-accepts: application/json
    put:
      operationId: Webhook_updateByIdWebhook
      parameters:
      - description: idWebhook
        explode: false
        in: path
        name: idWebhook
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/webhooks'
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateWebhooksByIdWebhook()
      tags:
      - webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--webhooks-idWebhook
      x-content-type: application/json
      x-accepts: application/json
  /webhooks/{idWebhook}/active:
    put:
      operationId: Webhook_updateActiveById
      parameters:
      - description: idWebhook
        explode: false
        in: path
        name: idWebhook
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_active'
        description: Attributes of "Webhooks Active" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateWebhooksActiveByIdWebhook()
      tags:
      - webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--webhooks-idWebhook-active
      x-content-type: application/json
      x-accepts: application/json
  /webhooks/{idWebhook}/callbackURL:
    put:
      operationId: Webhook_updateCallbackUrlById
      parameters:
      - description: idWebhook
        explode: false
        in: path
        name: idWebhook
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_callbackURL'
        description: Attributes of "Webhooks Callback Url" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateWebhooksCallbackURLByIdWebhook()
      tags:
      - webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--webhooks-idWebhook-callbackURL
      x-content-type: application/json
      x-accepts: application/json
  /webhooks/{idWebhook}/description:
    put:
      operationId: Webhook_updateDescriptionByIdWebhook
      parameters:
      - description: idWebhook
        explode: false
        in: path
        name: idWebhook
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_description'
        description: Attributes of "Webhooks Description" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateWebhooksDescriptionByIdWebhook()
      tags:
      - webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--webhooks-idWebhook-description
      x-content-type: application/json
      x-accepts: application/json
  /webhooks/{idWebhook}/idModel:
    put:
      operationId: Webhook_updateModelById
      parameters:
      - description: idWebhook
        explode: false
        in: path
        name: idWebhook
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_idModel'
        description: Attributes of "Webhooks Id Model" to be updated.
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
      - api_token: []
      summary: updateWebhooksIdModelByIdWebhook()
      tags:
      - webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--webhooks-idWebhook-idModel
      x-content-type: application/json
      x-accepts: application/json
  /webhooks/{idWebhook}/{field}:
    get:
      operationId: Webhook_getByIdField
      parameters:
      - description: idWebhook
        explode: false
        in: path
        name: idWebhook
        required: true
        schema:
          type: string
        style: simple
      - description: field
        explode: false
        in: path
        name: field
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "400":
          description: Server rejection
      security:
      - api_key: []
        api_token: []
      summary: getWebhooksByIdWebhookByField()
      tags:
      - webhook
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--webhooks-idWebhook-field
      x-accepts: application/json
components:
  requestBodies:
    boards_members:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/boards_members'
      description: Attributes of "Boards Members" to be updated.
      required: true
    organizations_members:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/organizations_members'
      description: Attributes of "Organizations Members" to be updated.
      required: true
    prefs_boardVisibilityRestrict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/prefs_boardVisibilityRestrict'
      description: Attributes of "Prefs Board Visibility Restrict" to be updated.
      required: true
    prefs_permissionLevel:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/prefs_permissionLevel'
      description: Attributes of "Prefs Permission Level" to be updated.
      required: true
    webhooks:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webhooks'
      description: Attributes of "Webhooks" to be updated.
      required: true
  schemas:
    actions:
      properties:
        text:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: action
    actions_comments:
      properties:
        text:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    actions_text:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: action
    boards:
      properties:
        closed:
          description: ' true or false'
          type: string
        desc:
          description: a string with a length from 0 to 16384
          type: string
        idBoardSource:
          description: The id of the board to copy into the new board
          type: string
        idOrganization:
          description: The id or name of the organization to add the board to.
          type: string
        keepFromSource:
          description: Components of the source board to copy.
          type: string
        labelNames/blue:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/green:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/orange:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/purple:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/red:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/yellow:
          description: a string with a length from 0 to 16384
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        powerUps:
          description: "all or a comma-separated list of: calendar, cardAging, recap\
            \ or voting"
          type: string
        prefs/background:
          description: "A standard background name, or the id of a custom background"
          type: string
        prefs/calendarFeedEnabled:
          description: ' true or false'
          type: string
        prefs/cardAging:
          description: "One of: pirate or regular"
          type: string
        prefs/cardCovers:
          description: ' true or false'
          type: string
        prefs/comments:
          description: "One of: disabled, members, observers, org or public"
          type: string
        prefs/invitations:
          description: "One of: admins or members"
          type: string
        prefs/permissionLevel:
          description: "One of: org, private or public"
          type: string
        prefs/selfJoin:
          description: ' true or false'
          type: string
        prefs/voting:
          description: "One of: disabled, members, observers, org or public"
          type: string
        prefs_background:
          description: a string with a length from 0 to 16384
          type: string
        prefs_cardAging:
          description: "One of: pirate or regular"
          type: string
        prefs_cardCovers:
          description: ' true or false'
          type: string
        prefs_comments:
          description: "One of: disabled, members, observers, org or public"
          type: string
        prefs_invitations:
          description: "One of: admins or members"
          type: string
        prefs_permissionLevel:
          description: "One of: org, private or public"
          type: string
        prefs_selfJoin:
          description: ' true or false'
          type: string
        prefs_voting:
          description: "One of: disabled, members, observers, org or public"
          type: string
        subscribed:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    boards_checklists:
      properties:
        name:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_closed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    boards_desc:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_idOrganization:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_labels:
      properties:
        color:
          description: A valid label color or null
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_lists:
      properties:
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: board
    boards_members:
      properties:
        email:
          description: An email address
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      type: object
      xml:
        name: board
    boards_memberships:
      properties:
        member_fields:
          description: "all or a comma-separated list of: avatarHash, bio, bioData,\
            \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
            \ status, url or username"
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      type: object
      xml:
        name: board
    boards_name:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_powerUps:
      properties:
        value:
          description: "One of: calendar, cardAging, recap or voting"
          type: string
      type: object
      xml:
        name: board
    boards_subscribed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    cards:
      properties:
        closed:
          description: ' true or false'
          type: string
        desc:
          description: a string with a length from 0 to 16384
          type: string
        due:
          description: "A date, or null"
          type: string
        fileSource:
          description: A file
          type: string
        idAttachmentCover:
          description: "Id of the image attachment of this card to use as its cover,\
            \ or null for no cover"
          type: string
        idBoard:
          description: id of the board the card should be moved to
          type: string
        idCardSource:
          description: The id of the card to copy into a new card.
          type: string
        idLabels:
          description: "A comma-separated list of objectIds, 24-character hex strings"
          type: string
        idList:
          description: id of the list that the card should be added to
          type: string
        idMembers:
          description: "A comma-separated list of objectIds, 24-character hex strings"
          type: string
        keepFromSource:
          description: Properties of the card to copy over from the source.
          type: string
        labels:
          description: "all or a comma-separated list of: blue, green, orange, purple,\
            \ red or yellow"
          type: string
        name:
          description: "The name of the new card.  It isn&#39;t required if the name\
            \ is being copied from provided by a URL, file or card that is being copied."
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        subscribed:
          description: ' true or false'
          type: string
        urlSource:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: card
    cards_actions_comments:
      properties:
        text:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_attachments:
      properties:
        file:
          description: A file
          type: string
        mimeType:
          description: a string with a length from 0 to 256
          type: string
        name:
          description: a string with a length from 0 to 256
          type: string
        url:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem:
      properties:
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem_name:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem_pos:
      properties:
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem_state:
      properties:
        value:
          description: "One of: complete, false, incomplete or true"
          type: string
      type: object
      xml:
        name: card
    cards_checklist_idChecklistCurrent_checkItem:
      properties:
        idChecklist:
          description: "An id, or null"
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        state:
          description: "One of: complete, false, incomplete or true"
          type: string
      type: object
      xml:
        name: card
    cards_checklists:
      properties:
        idChecklistSource:
          description: The id of the source checklist to copy into a new checklist.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        value:
          description: "The id of the checklist to add to the card, or null to create\
            \ a new one."
          type: string
      type: object
      xml:
        name: card
    cards_closed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: card
    cards_desc:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_due:
      properties:
        value:
          description: "A date, or null"
          type: string
      type: object
      xml:
        name: card
    cards_idAttachmentCover:
      properties:
        value:
          description: "Id of the image attachment of this card to use as its cover,\
            \ or null for no cover"
          type: string
      type: object
      xml:
        name: card
    cards_idBoard:
      properties:
        idList:
          description: id of the list that the card should be moved to on the new
            board
          type: string
        value:
          description: id of the board the card should be moved to
          type: string
      type: object
      xml:
        name: card
    cards_idLabels:
      properties:
        value:
          description: The id of the label to add
          type: string
      type: object
      xml:
        name: card
    cards_idList:
      properties:
        value:
          description: id of the list the card should be moved to
          type: string
      type: object
      xml:
        name: card
    cards_idMembers:
      properties:
        value:
          description: The id of the member to add to the card
          type: string
      type: object
      xml:
        name: card
    cards_labels:
      properties:
        color:
          description: A valid label color or null
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        value:
          description: "all or a comma-separated list of: blue, green, orange, purple,\
            \ red or yellow"
          type: string
      type: object
      xml:
        name: card
    cards_membersVoted:
      properties:
        value:
          description: The id of the member to vote &#39;yes&#39; on the card
          type: string
      type: object
      xml:
        name: card
    cards_name:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_pos:
      properties:
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: card
    cards_stickers:
      properties:
        image:
          description: a string with a length from 0 to 16384
          type: string
        left:
          description: undefined
          type: string
        rotate:
          description: undefined
          type: string
        top:
          description: undefined
          type: string
        zIndex:
          description: "Valid Z values for stickers, must be an integer"
          type: string
      type: object
      xml:
        name: card
    cards_subscribed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: card
    checklists:
      properties:
        idBoard:
          description: id of the board that the checklist should be added to
          type: string
        idCard:
          description: id of the card that the checklist should be added to
          type: string
        idChecklistSource:
          description: The id of the source checklist to copy into a new checklist.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: checklist
    checklists_checkItems:
      properties:
        checked:
          description: ' true or false'
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: checklist
    checklists_idCard:
      properties:
        value:
          description: The id of the card that the checklist is on
          type: string
      type: object
      xml:
        name: checklist
    checklists_name:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: checklist
    checklists_pos:
      properties:
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: checklist
    labelNames_blue:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_green:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_orange:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_purple:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_red:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_yellow:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labels:
      properties:
        color:
          description: A valid label color or null
          type: string
        idBoard:
          description: An id
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: label
    labels_color:
      properties:
        value:
          description: A valid label color or null
          type: string
      type: object
      xml:
        name: label
    labels_name:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: label
    lists:
      properties:
        closed:
          description: ' true or false'
          type: string
        idBoard:
          description: id of the board that the list should be added to
          type: string
        idListSource:
          description: The id of the list to copy into a new list.
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        subscribed:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: list
    lists_cards:
      properties:
        desc:
          description: a string with a length from 0 to 16384
          type: string
        due:
          description: "A date, or null"
          type: string
        idMembers:
          description: "A comma-separated list of objectIds, 24-character hex strings"
          type: string
        labels:
          description: "all or a comma-separated list of: blue, green, orange, purple,\
            \ red or yellow"
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: list
    lists_closed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: list
    lists_idBoard:
      properties:
        pos:
          description: position of the list on the new board
          type: string
        value:
          description: id of the board the list should be moved to
          type: string
      type: object
      xml:
        name: list
    lists_moveAllCards:
      properties:
        idBoard:
          description: id of the board that the cards should be moved to
          type: string
      type: object
      xml:
        name: list
    lists_name:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: list
    lists_pos:
      properties:
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: list
    lists_subscribed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: list
    members:
      properties:
        avatarSource:
          description: "One of: gravatar, none or upload"
          type: string
        bio:
          description: a string with a length from 0 to 16384
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        initials:
          description: A string with a length from 1 to 4.  Cannot begin or end with
            a space
          type: string
        prefs/colorBlind:
          description: ' true or false'
          type: string
        prefs/locale:
          description: a string with a length from 0 to 255
          type: string
        prefs/minutesBetweenSummaries:
          description: "-1 (disabled), 1 or 60"
          type: string
        username:
          description: "A string with a length of at least 3.  Only lowercase letters,\
            \ underscores, and numbers are allowed.  Must be unique."
          type: string
      type: object
      xml:
        name: member
    members_avatar:
      properties:
        file:
          description: A file
          type: string
      type: object
      xml:
        name: member
    members_avatarSource:
      properties:
        value:
          description: "One of: gravatar, none or upload"
          type: string
      type: object
      xml:
        name: member
    members_bio:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: member
    members_boardBackgrounds:
      properties:
        brightness:
          description: "One of: dark, light or unknown"
          type: string
        file:
          description: A file
          type: string
        tile:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: member
    members_boardStars:
      properties:
        idBoard:
          description: The id of the board to star
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: member
    members_boardStars_idBoard:
      properties:
        value:
          description: An id
          type: string
      type: object
      xml:
        name: member
    members_boardStars_pos:
      properties:
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: member
    members_customBoardBackgrounds:
      properties:
        brightness:
          description: "One of: dark, light or unknown"
          type: string
        file:
          description: A file
          type: string
        tile:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: member
    members_customEmoji:
      properties:
        file:
          description: A file
          type: string
        name:
          description: a string with a length from 2 to 64
          type: string
      type: object
      xml:
        name: member
    members_customStickers:
      properties:
        file:
          description: A file
          type: string
      type: object
      xml:
        name: member
    members_fullName:
      properties:
        value:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
      type: object
      xml:
        name: member
    members_initials:
      properties:
        value:
          description: A string with a length from 1 to 4.  Cannot begin or end with
            a space
          type: string
      type: object
      xml:
        name: member
    members_oneTimeMessagesDismissed:
      properties:
        value:
          description: Type of message dismissed
          type: string
      type: object
      xml:
        name: member
    members_savedSearches:
      properties:
        name:
          description: A non-empty string with at least one non-space character
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        query:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: member
    members_savedSearches_name:
      properties:
        value:
          description: A non-empty string with at least one non-space character
          type: string
      type: object
      xml:
        name: member
    members_savedSearches_pos:
      properties:
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      xml:
        name: member
    members_savedSearches_query:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: member
    members_username:
      properties:
        value:
          description: "A string with a length of at least 3.  Only lowercase letters,\
            \ underscores, and numbers are allowed.  Must be unique."
          type: string
      type: object
      xml:
        name: member
    myPrefs_emailPosition:
      properties:
        value:
          description: "One of: bottom or top"
          type: string
      type: object
      xml:
        name: board
    myPrefs_idEmailList:
      properties:
        value:
          description: An id
          type: string
      type: object
      xml:
        name: board
    myPrefs_showListGuide:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebar:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebarActivity:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebarBoardActions:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebarMembers:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    notifications:
      properties:
        unread:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: notification
    notifications_unread:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: notification
    organizations:
      properties:
        desc:
          description: a string with a length from 0 to 16384
          type: string
        displayName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        prefs/associatedDomain:
          description: The google apps domain to link this org to.
          type: string
        prefs/boardVisibilityRestrict/org:
          description: "One of: admin, none or org"
          type: string
        prefs/boardVisibilityRestrict/private:
          description: "One of: admin, none or org"
          type: string
        prefs/boardVisibilityRestrict/public:
          description: "One of: admin, none or org"
          type: string
        prefs/externalMembersDisabled:
          description: ' true or false'
          type: string
        prefs/googleAppsVersion:
          description: a number from 1 to 2
          type: string
        prefs/orgInviteRestrict:
          description: An email address with optional expansion tokens
          type: string
        prefs/permissionLevel:
          description: "One of: private or public"
          type: string
        website:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: organization
    organizations_desc:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: organization
    organizations_displayName:
      properties:
        value:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
      type: object
      xml:
        name: organization
    organizations_logo:
      properties:
        file:
          description: A file
          type: string
      type: object
      xml:
        name: organization
    organizations_members:
      properties:
        email:
          description: An email address
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      type: object
      xml:
        name: organization
    organizations_members_deactivated:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: organization
    organizations_memberships:
      properties:
        member_fields:
          description: "all or a comma-separated list of: avatarHash, bio, bioData,\
            \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
            \ status, url or username"
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      type: object
      xml:
        name: organization
    organizations_name:
      properties:
        value:
          description: "A string with a length of at least 3.  Only lowercase letters,\
            \ underscores, and numbers are allowed.  Must be unique."
          type: string
      type: object
      xml:
        name: organization
    organizations_website:
      properties:
        value:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: organization
    prefs_associatedDomain:
      properties:
        value:
          description: The google apps domain to link this org to.
          type: string
      type: object
      xml:
        name: organization
    prefs_background:
      properties:
        value:
          description: "A standard background name, or the id of a custom background"
          type: string
      type: object
      xml:
        name: board
    prefs_boardVisibilityRestrict:
      properties:
        value:
          description: "One of: admin, none or org"
          type: string
      type: object
      xml:
        name: organization
    prefs_calendarFeedEnabled:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    prefs_cardAging:
      properties:
        value:
          description: "One of: pirate or regular"
          type: string
      type: object
      xml:
        name: board
    prefs_cardCovers:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    prefs_colorBlind:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: member
    prefs_comments:
      properties:
        value:
          description: "One of: disabled, members, observers, org or public"
          type: string
      type: object
      xml:
        name: board
    prefs_externalMembersDisabled:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: organization
    prefs_googleAppsVersion:
      properties:
        value:
          description: a number from 1 to 2
          type: string
      type: object
      xml:
        name: organization
    prefs_invitations:
      properties:
        value:
          description: "One of: admins or members"
          type: string
      type: object
      xml:
        name: board
    prefs_locale:
      properties:
        value:
          description: a string with a length from 0 to 255
          type: string
      type: object
      xml:
        name: member
    prefs_minutesBetweenSummaries:
      properties:
        value:
          description: "-1 (disabled), 1 or 60"
          type: string
      type: object
      xml:
        name: member
    prefs_orgInviteRestrict:
      properties:
        value:
          description: An email address with optional expansion tokens
          type: string
      type: object
      xml:
        name: organization
    prefs_permissionLevel:
      properties:
        value:
          description: "One of: private or public"
          type: string
      type: object
      xml:
        name: board
    prefs_selfJoin:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    prefs_voting:
      properties:
        value:
          description: "One of: disabled, members, observers, org or public"
          type: string
      type: object
      xml:
        name: board
    sessions:
      properties:
        idBoard:
          description: The id of the board you&#39;re viewing.  Boards with no viewers
            will not get updates about members&#39; statuses.
          type: string
        status:
          description: "One of: active, disconnected or idle"
          type: string
      type: object
      xml:
        name: session
    sessions_status:
      properties:
        value:
          description: "One of: active, disconnected or idle"
          type: string
      type: object
      xml:
        name: session
    tokens_webhooks:
      properties:
        description:
          description: a string with a length from 0 to 16384
          type: string
        callbackURL:
          description: A valid URL that is reachable with a HEAD request
          type: string
        idModel:
          description: id of the model to be monitored
          type: string
      type: object
      xml:
        name: token
    webhooks:
      properties:
        description:
          description: a string with a length from 0 to 16384
          type: string
        active:
          description: ' true or false'
          type: string
        callbackURL:
          description: A valid URL that is reachable with a HEAD request
          type: string
        idModel:
          description: id of the model that should be hooked
          type: string
      type: object
      xml:
        name: webhook
    webhooks_active:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: webhook
    webhooks_callbackURL:
      properties:
        value:
          description: A valid URL that is reachable with a HEAD request
          type: string
      type: object
      xml:
        name: webhook
    webhooks_description:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: webhook
    webhooks_idModel:
      properties:
        value:
          description: id of the model to be monitored
          type: string
      type: object
      xml:
        name: webhook
    konfig-generated-schema-paths--actions-idAction-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--actions-idAction-get-parameters-5-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--actions-idAction-get-parameters-7-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--actions-idAction-board-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--actions-idAction-card-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--actions-idAction-list-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--actions-idAction-member-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--actions-idAction-memberCreator-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--actions-idAction-organization-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-4-schema:
      example: list
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-6-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-7-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-9-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-11-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-12-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-13-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-15-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-16-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-18-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-19-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-20-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-21-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-22-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-23-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-24-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-26-schema:
      example: fullName and username
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-27-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-28-schema:
      example: "avatarHash, initials, fullName, username and confirmed"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-29-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-30-schema:
      example: "avatarHash, initials, fullName and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-31-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-32-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-34-schema:
      example: name and displayName
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-35-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-get-parameters-37-schema:
      example: "name, desc, descData, closed, idOrganization, pinned, url, shortUrl,\
        \ prefs and labelNames"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-4-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-5-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-6-schema:
      example: list
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-9-schema:
      example: "0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-12-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-14-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-boardStars-get-parameters-1-schema:
      example: mine
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-6-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-8-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-12-schema:
      example: visible
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-13-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-7-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-8-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-9-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-11-schema:
      example: "avatarHash, initials, fullName and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-13-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-15-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-16-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-17-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-1-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-4-schema:
      example: "name, nameData, pos and state"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-5-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-6-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-labels-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-labels-get-parameters-2-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-labels-idLabel-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-1-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-3-schema:
      example: open
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-4-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-members-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-members-get-parameters-2-schema:
      example: fullName and username
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-4-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-6-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-8-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-10-schema:
      example: "name, desc, closed, idOrganization, pinned, url and prefs"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-12-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-13-schema:
      example: visible
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-14-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-membersInvited-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-memberships-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-memberships-get-parameters-3-schema:
      example: fullName and username
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-memberships-idMembership-get-parameters-3-schema:
      example: fullName and username
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--boards-idBoard-organization-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-4-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-5-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-6-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-8-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-10-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-12-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-14-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-15-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-16-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-18-schema:
      example: "name, desc, descData, closed, idOrganization, pinned, url and prefs"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-20-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-22-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-get-parameters-23-schema:
      example: "badges, checkItemStates, closed, dateLastActivity, desc, descData,\
        \ due, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort,\
        \ idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl and\
        \ url"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-actions-get-parameters-3-schema:
      example: commentCard and updateCard:idList
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-actions-get-parameters-4-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-actions-get-parameters-5-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-actions-get-parameters-6-schema:
      example: list
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-actions-get-parameters-9-schema:
      example: "0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-actions-get-parameters-12-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-actions-get-parameters-14-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-attachments-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-attachments-idAttachment-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-board-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-checkItemStates-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-1-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-4-schema:
      example: "name, nameData, pos and state"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-5-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-6-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-list-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-members-get-parameters-1-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-membersVoted-get-parameters-1-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-stickers-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--cards-idCard-stickers-idSticker-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-get-parameters-1-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-get-parameters-4-schema:
      example: "name, nameData, pos and state"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-get-parameters-5-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-board-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-6-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-8-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-12-schema:
      example: open
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-13-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-checkItems-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-checkItems-get-parameters-2-schema:
      example: "name, nameData, pos and state"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--checklists-idChecklist-checkItems-idCheckItem-get-parameters-2-schema:
      example: "name, nameData, pos and state"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--labels-idLabel-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--labels-idLabel-board-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-get-parameters-1-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-get-parameters-4-schema:
      example: "name, desc, descData, closed, idOrganization, pinned, url and prefs"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-get-parameters-5-schema:
      example: "name, closed, idBoard and pos"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-actions-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-actions-get-parameters-4-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-actions-get-parameters-5-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-actions-get-parameters-6-schema:
      example: list
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-actions-get-parameters-9-schema:
      example: "0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-actions-get-parameters-12-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-actions-get-parameters-14-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-board-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-cards-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-cards-get-parameters-6-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-cards-get-parameters-8-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-cards-get-parameters-12-schema:
      example: open
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--lists-idList-cards-get-parameters-13-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-4-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-5-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-8-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-9-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-11-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-13-schema:
      example: url and previews
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-16-schema:
      example: "name, closed, idOrganization and pinned"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-20-schema:
      example: list
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-22-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-23-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-24-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-25-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-27-schema:
      example: name and displayName
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-29-schema:
      example: "name, closed, idOrganization and pinned"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-32-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-33-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-35-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-36-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-40-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-41-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-43-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-46-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-48-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-49-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-50-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-51-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-get-parameters-52-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-actions-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-actions-get-parameters-4-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-actions-get-parameters-5-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-actions-get-parameters-6-schema:
      example: list
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-actions-get-parameters-9-schema:
      example: "0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-actions-get-parameters-12-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-actions-get-parameters-14-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boardBackgrounds-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boardBackgrounds-idBoardBackground-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boards-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boards-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boards-get-parameters-5-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boards-get-parameters-6-schema:
      example: list
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boards-get-parameters-8-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boards-get-parameters-9-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boards-get-parameters-11-schema:
      example: name and displayName
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boards-get-parameters-12-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-boardsInvited-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-cards-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-cards-get-parameters-6-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-cards-get-parameters-8-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-cards-get-parameters-12-schema:
      example: visible
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-cards-get-parameters-13-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-customBoardBackgrounds-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-customBoardBackgrounds-idBoardBackground-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-customEmoji-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-customEmoji-idCustomEmoji-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-customStickers-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-customStickers-idCustomSticker-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-notifications-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-notifications-get-parameters-4-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-notifications-get-parameters-5-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-notifications-get-parameters-6-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-notifications-get-parameters-7-schema:
      example: "0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-notifications-get-parameters-11-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-organizations-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-organizations-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-organizationsInvited-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--members-idMember-tokens-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-get-parameters-5-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-get-parameters-7-schema:
      example: name
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-get-parameters-10-schema:
      example: name
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-get-parameters-12-schema:
      example: displayName
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-get-parameters-14-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-board-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-card-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-list-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-member-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-memberCreator-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--notifications-idNotification-organization-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-4-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-5-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-6-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-8-schema:
      example: fullName and username
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-9-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-10-schema:
      example: "avatarHash, fullName, initials, username and confirmed"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-12-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-13-schema:
      example: "avatarHash, initials, fullName and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-14-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-15-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-19-schema:
      example: list
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-21-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-22-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-23-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-get-parameters-25-schema:
      example: "name, displayName, desc, descData, url, website, logoHash, products\
        \ and powerUps"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-3-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-4-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-5-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-6-schema:
      example: list
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-9-schema:
      example: "0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-12-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-14-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-2-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-5-schema:
      example: "50"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-6-schema:
      example: list
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-8-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-9-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-11-schema:
      example: name and displayName
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-12-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-members-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-members-get-parameters-2-schema:
      example: fullName and username
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-4-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-6-schema:
      example: "avatarHash, fullName, initials and username"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-8-schema:
      example: none
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-10-schema:
      example: "name, desc, closed, idOrganization, pinned, url and prefs"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-12-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-13-schema:
      example: visible
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-14-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-membersInvited-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-memberships-get-parameters-1-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-memberships-get-parameters-3-schema:
      example: fullName and username
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--organizations-idOrg-memberships-idMembership-get-parameters-3-schema:
      example: fullName and username
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-1-schema:
      example: mine
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-4-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-5-schema:
      example: name and idOrganization
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-6-schema:
      example: "10"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-7-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-8-schema:
      example: "10"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-9-schema:
      example: "0"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-15-schema:
      example: name and displayName
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-16-schema:
      example: "10"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-17-schema:
      example: "avatarHash, fullName, initials, username and confirmed"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-get-parameters-18-schema:
      example: "10"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--search-members-get-parameters-1-schema:
      example: "8"
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--tokens-token-get-parameters-0-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-paths--tokens-token-member-get-parameters-0-schema:
      example: all
      type: string
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-delete--actions-idAction:
      properties:
        idAction:
          type: string
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
    konfig-generated-schema-single-parameter-schema-get--actions-idAction:
      properties:
        idAction:
          type: string
        display:
          type: string
        entities:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-get-parameters-3-schema
        member:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-get-parameters-5-schema
        memberCreator:
          type: string
        memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-get-parameters-7-schema
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - display
      - entities
      - fields
      - member
      - member_fields
      - memberCreator
      - memberCreator_fields
    konfig-generated-schema-single-parameter-schema-put--actions-idAction:
      properties:
        idAction:
          type: string
        text:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-board:
      properties:
        idAction:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-board-get-parameters-1-schema
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - fields
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-board-field:
      properties:
        idAction:
          type: string
        field:
          type: string
      required:
      - field
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - field
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-card:
      properties:
        idAction:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-card-get-parameters-1-schema
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - fields
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-card-field:
      properties:
        idAction:
          type: string
        field:
          type: string
      required:
      - field
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - field
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-display:
      properties:
        idAction:
          type: string
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-entities:
      properties:
        idAction:
          type: string
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-list:
      properties:
        idAction:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-list-get-parameters-1-schema
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - fields
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-list-field:
      properties:
        idAction:
          type: string
        field:
          type: string
      required:
      - field
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - field
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-member:
      properties:
        idAction:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-member-get-parameters-1-schema
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - fields
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-member-field:
      properties:
        idAction:
          type: string
        field:
          type: string
      required:
      - field
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - field
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-memberCreator:
      properties:
        idAction:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-memberCreator-get-parameters-1-schema
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - fields
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-memberCreator-field:
      properties:
        idAction:
          type: string
        field:
          type: string
      required:
      - field
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - field
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-organization:
      properties:
        idAction:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--actions-idAction-organization-get-parameters-1-schema
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - fields
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-organization-field:
      properties:
        idAction:
          type: string
        field:
          type: string
      required:
      - field
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - field
    konfig-generated-schema-single-parameter-schema-put--actions-idAction-text:
      properties:
        idAction:
          type: string
        value:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
    konfig-generated-schema-single-parameter-schema-get--actions-idAction-field:
      properties:
        idAction:
          type: string
        field:
          type: string
      required:
      - field
      - idAction
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idAction
      - field
    konfig-generated-schema-single-parameter-schema-get--batch:
      properties:
        urls:
          type: string
      required:
      - urls
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - urls
    konfig-generated-schema-single-parameter-schema-post--boards:
      properties:
        closed:
          description: ' true or false'
          type: string
        desc:
          description: a string with a length from 0 to 16384
          type: string
        idBoardSource:
          description: The id of the board to copy into the new board
          type: string
        idOrganization:
          description: The id or name of the organization to add the board to.
          type: string
        keepFromSource:
          description: Components of the source board to copy.
          type: string
        labelNames/blue:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/green:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/orange:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/purple:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/red:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/yellow:
          description: a string with a length from 0 to 16384
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        powerUps:
          description: "all or a comma-separated list of: calendar, cardAging, recap\
            \ or voting"
          type: string
        prefs/background:
          description: "A standard background name, or the id of a custom background"
          type: string
        prefs/calendarFeedEnabled:
          description: ' true or false'
          type: string
        prefs/cardAging:
          description: "One of: pirate or regular"
          type: string
        prefs/cardCovers:
          description: ' true or false'
          type: string
        prefs/comments:
          description: "One of: disabled, members, observers, org or public"
          type: string
        prefs/invitations:
          description: "One of: admins or members"
          type: string
        prefs/permissionLevel:
          description: "One of: org, private or public"
          type: string
        prefs/selfJoin:
          description: ' true or false'
          type: string
        prefs/voting:
          description: "One of: disabled, members, observers, org or public"
          type: string
        prefs_background:
          description: a string with a length from 0 to 16384
          type: string
        prefs_cardAging:
          description: "One of: pirate or regular"
          type: string
        prefs_cardCovers:
          description: ' true or false'
          type: string
        prefs_comments:
          description: "One of: disabled, members, observers, org or public"
          type: string
        prefs_invitations:
          description: "One of: admins or members"
          type: string
        prefs_permissionLevel:
          description: "One of: org, private or public"
          type: string
        prefs_selfJoin:
          description: ' true or false'
          type: string
        prefs_voting:
          description: "One of: disabled, members, observers, org or public"
          type: string
        subscribed:
          description: ' true or false'
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard:
      properties:
        idBoard:
          type: string
        actions:
          type: string
        actions_entities:
          type: string
        actions_display:
          type: string
        actions_format:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-4-schema
        actions_since:
          type: string
        actions_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-6-schema
        action_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-7-schema
        action_member:
          type: string
        action_member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-9-schema
        action_memberCreator:
          type: string
        action_memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-11-schema
        cards:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-12-schema
        card_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-13-schema
        card_attachments:
          type: string
        card_attachment_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-15-schema
        card_checklists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-16-schema
        card_stickers:
          type: string
        boardStars:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-18-schema
        labels:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-19-schema
        label_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-20-schema
        labels_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-21-schema
        lists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-22-schema
        list_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-23-schema
        memberships:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-24-schema
        memberships_member:
          type: string
        memberships_member_fields:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-26-schema
        members:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-27-schema
        member_fields:
          default: "avatarHash, initials, fullName, username and confirmed"
          example: "avatarHash, initials, fullName, username and confirmed"
          type: string
          x-konfig-original-example: "avatarHash, initials, fullName, username and\
            \ confirmed"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-28-schema
        membersInvited:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-29-schema
        membersInvited_fields:
          default: "avatarHash, initials, fullName and username"
          example: "avatarHash, initials, fullName and username"
          type: string
          x-konfig-original-example: "avatarHash, initials, fullName and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-30-schema
        checklists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-31-schema
        checklist_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-32-schema
        organization:
          type: string
        organization_fields:
          default: name and displayName
          example: name and displayName
          type: string
          x-konfig-original-example: name and displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-34-schema
        organization_memberships:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-35-schema
        myPrefs:
          type: string
        fields:
          default: "name, desc, descData, closed, idOrganization, pinned, url, shortUrl,\
            \ prefs and labelNames"
          example: "name, desc, descData, closed, idOrganization, pinned, url, shortUrl,\
            \ prefs and labelNames"
          type: string
          x-konfig-original-example: "name, desc, descData, closed, idOrganization,\
            \ pinned, url, shortUrl, prefs and labelNames"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-get-parameters-37-schema
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - actions
      - actions_entities
      - actions_display
      - actions_format
      - actions_since
      - actions_limit
      - action_fields
      - action_member
      - action_member_fields
      - action_memberCreator
      - action_memberCreator_fields
      - cards
      - card_fields
      - card_attachments
      - card_attachment_fields
      - card_checklists
      - card_stickers
      - boardStars
      - labels
      - label_fields
      - labels_limit
      - lists
      - list_fields
      - memberships
      - memberships_member
      - memberships_member_fields
      - members
      - member_fields
      - membersInvited
      - membersInvited_fields
      - checklists
      - checklist_fields
      - organization
      - organization_fields
      - organization_memberships
      - myPrefs
      - fields
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard:
      properties:
        idBoard:
          type: string
        closed:
          description: ' true or false'
          type: string
        desc:
          description: a string with a length from 0 to 16384
          type: string
        idBoardSource:
          description: The id of the board to copy into the new board
          type: string
        idOrganization:
          description: The id or name of the organization to add the board to.
          type: string
        keepFromSource:
          description: Components of the source board to copy.
          type: string
        labelNames/blue:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/green:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/orange:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/purple:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/red:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/yellow:
          description: a string with a length from 0 to 16384
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        powerUps:
          description: "all or a comma-separated list of: calendar, cardAging, recap\
            \ or voting"
          type: string
        prefs/background:
          description: "A standard background name, or the id of a custom background"
          type: string
        prefs/calendarFeedEnabled:
          description: ' true or false'
          type: string
        prefs/cardAging:
          description: "One of: pirate or regular"
          type: string
        prefs/cardCovers:
          description: ' true or false'
          type: string
        prefs/comments:
          description: "One of: disabled, members, observers, org or public"
          type: string
        prefs/invitations:
          description: "One of: admins or members"
          type: string
        prefs/permissionLevel:
          description: "One of: org, private or public"
          type: string
        prefs/selfJoin:
          description: ' true or false'
          type: string
        prefs/voting:
          description: "One of: disabled, members, observers, org or public"
          type: string
        prefs_background:
          description: a string with a length from 0 to 16384
          type: string
        prefs_cardAging:
          description: "One of: pirate or regular"
          type: string
        prefs_cardCovers:
          description: ' true or false'
          type: string
        prefs_comments:
          description: "One of: disabled, members, observers, org or public"
          type: string
        prefs_invitations:
          description: "One of: admins or members"
          type: string
        prefs_permissionLevel:
          description: "One of: org, private or public"
          type: string
        prefs_selfJoin:
          description: ' true or false'
          type: string
        prefs_voting:
          description: "One of: disabled, members, observers, org or public"
          type: string
        subscribed:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-actions:
      properties:
        idBoard:
          type: string
        entities:
          type: string
        display:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-3-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-4-schema
        limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-5-schema
        format:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-6-schema
        since:
          type: string
        before:
          type: string
        page:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-9-schema
        idModels:
          type: string
        member:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-12-schema
        memberCreator:
          type: string
        memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-actions-get-parameters-14-schema
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - entities
      - display
      - filter
      - fields
      - limit
      - format
      - since
      - before
      - page
      - idModels
      - member
      - member_fields
      - memberCreator
      - memberCreator_fields
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-boardStars:
      properties:
        idBoard:
          type: string
        filter:
          default: mine
          example: mine
          type: string
          x-konfig-original-example: mine
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-boardStars-get-parameters-1-schema
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - filter
    konfig-generated-schema-single-parameter-schema-post--boards-idBoard-calendarKey-generate:
      properties:
        idBoard:
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-cards:
      properties:
        idBoard:
          type: string
        actions:
          type: string
        attachments:
          type: string
        attachment_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-3-schema
        stickers:
          type: string
        members:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-6-schema
        checkItemStates:
          type: string
        checklists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-8-schema
        limit:
          type: string
        since:
          type: string
        before:
          type: string
        filter:
          default: visible
          example: visible
          type: string
          x-konfig-original-example: visible
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-12-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-get-parameters-13-schema
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - actions
      - attachments
      - attachment_fields
      - stickers
      - members
      - member_fields
      - checkItemStates
      - checklists
      - limit
      - since
      - before
      - filter
      - fields
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-cards-filter:
      properties:
        idBoard:
          type: string
        filter:
          type: string
      required:
      - filter
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - filter
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-cards-idCard:
      properties:
        idBoard:
          type: string
        idCard:
          type: string
        attachments:
          type: string
        attachment_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-3-schema
        actions:
          type: string
        actions_entities:
          type: string
        actions_display:
          type: string
        actions_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-7-schema
        action_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-8-schema
        action_memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-9-schema
        members:
          type: string
        member_fields:
          default: "avatarHash, initials, fullName and username"
          example: "avatarHash, initials, fullName and username"
          type: string
          x-konfig-original-example: "avatarHash, initials, fullName and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-11-schema
        checkItemStates:
          type: string
        checkItemState_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-13-schema
        labels:
          type: string
        checklists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-15-schema
        checklist_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-16-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-cards-idCard-get-parameters-17-schema
      required:
      - idBoard
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - idCard
      - attachments
      - attachment_fields
      - actions
      - actions_entities
      - actions_display
      - actions_limit
      - action_fields
      - action_memberCreator_fields
      - members
      - member_fields
      - checkItemStates
      - checkItemState_fields
      - labels
      - checklists
      - checklist_fields
      - fields
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-checklists:
      properties:
        idBoard:
          type: string
        cards:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-1-schema
        card_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-2-schema
        checkItems:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-3-schema
        checkItem_fields:
          default: "name, nameData, pos and state"
          example: "name, nameData, pos and state"
          type: string
          x-konfig-original-example: "name, nameData, pos and state"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-4-schema
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-5-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-checklists-get-parameters-6-schema
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - cards
      - card_fields
      - checkItems
      - checkItem_fields
      - filter
      - fields
    konfig-generated-schema-single-parameter-schema-post--boards-idBoard-checklists:
      properties:
        idBoard:
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-closed:
      properties:
        idBoard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-deltas:
      properties:
        idBoard:
          type: string
        tags:
          type: string
        ixLastUpdate:
          type: string
      required:
      - idBoard
      - ixLastUpdate
      - tags
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - tags
      - ixLastUpdate
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-desc:
      properties:
        idBoard:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-post--boards-idBoard-emailKey-generate:
      properties:
        idBoard:
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-idOrganization:
      properties:
        idBoard:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-blue:
      properties:
        idBoard:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-green:
      properties:
        idBoard:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-orange:
      properties:
        idBoard:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-purple:
      properties:
        idBoard:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-red:
      properties:
        idBoard:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-labelNames-yellow:
      properties:
        idBoard:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-labels:
      properties:
        idBoard:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-labels-get-parameters-1-schema
        limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-labels-get-parameters-2-schema
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - fields
      - limit
    konfig-generated-schema-single-parameter-schema-post--boards-idBoard-labels:
      properties:
        idBoard:
          type: string
        color:
          description: A valid label color or null
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-labels-idLabel:
      properties:
        idBoard:
          type: string
        idLabel:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-labels-idLabel-get-parameters-2-schema
      required:
      - idBoard
      - idLabel
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - idLabel
      - fields
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-lists:
      properties:
        idBoard:
          type: string
        cards:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-1-schema
        card_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-2-schema
        filter:
          default: open
          example: open
          type: string
          x-konfig-original-example: open
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-3-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-lists-get-parameters-4-schema
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - cards
      - card_fields
      - filter
      - fields
    konfig-generated-schema-single-parameter-schema-post--boards-idBoard-lists:
      properties:
        idBoard:
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-lists-filter:
      properties:
        idBoard:
          type: string
        filter:
          type: string
      required:
      - filter
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - filter
    konfig-generated-schema-single-parameter-schema-post--boards-idBoard-markAsViewed:
      properties:
        idBoard:
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-members:
      properties:
        idBoard:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-get-parameters-1-schema
        fields:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-get-parameters-2-schema
        activity:
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - filter
      - fields
      - activity
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-members:
      properties:
        idBoard:
          type: string
        email:
          description: An email address
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-members-filter:
      properties:
        idBoard:
          type: string
        filter:
          type: string
      required:
      - filter
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - filter
    konfig-generated-schema-single-parameter-schema-delete--boards-idBoard-members-idMember:
      properties:
        idBoard:
          type: string
        idMember:
          type: string
      required:
      - idBoard
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - idMember
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-members-idMember:
      properties:
        idBoard:
          type: string
        idMember:
          type: string
        email:
          description: An email address
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      required:
      - idBoard
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - idMember
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-members-idMember-cards:
      properties:
        idBoard:
          type: string
        idMember:
          type: string
        actions:
          type: string
        attachments:
          type: string
        attachment_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-4-schema
        members:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-6-schema
        checkItemStates:
          type: string
        checklists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-8-schema
        board:
          type: string
        board_fields:
          default: "name, desc, closed, idOrganization, pinned, url and prefs"
          example: "name, desc, closed, idOrganization, pinned, url and prefs"
          type: string
          x-konfig-original-example: "name, desc, closed, idOrganization, pinned,\
            \ url and prefs"
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-10-schema
        list:
          type: string
        list_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-12-schema
        filter:
          default: visible
          example: visible
          type: string
          x-konfig-original-example: visible
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-13-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-members-idMember-cards-get-parameters-14-schema
      required:
      - idBoard
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - idMember
      - actions
      - attachments
      - attachment_fields
      - members
      - member_fields
      - checkItemStates
      - checklists
      - board
      - board_fields
      - list
      - list_fields
      - filter
      - fields
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-membersInvited:
      properties:
        idBoard:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-membersInvited-get-parameters-1-schema
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - fields
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-membersInvited-field:
      properties:
        idBoard:
          type: string
        field:
          type: string
      required:
      - field
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - field
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-memberships:
      properties:
        idBoard:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-memberships-get-parameters-1-schema
        member:
          type: string
        member_fields:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-memberships-get-parameters-3-schema
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - filter
      - member
      - member_fields
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-memberships-idMembership:
      properties:
        idBoard:
          type: string
        idMembership:
          type: string
        member:
          type: string
        member_fields:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-memberships-idMembership-get-parameters-3-schema
      required:
      - idBoard
      - idMembership
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - idMembership
      - member
      - member_fields
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-memberships-idMembership:
      properties:
        idBoard:
          type: string
        idMembership:
          type: string
        member_fields:
          description: "all or a comma-separated list of: avatarHash, bio, bioData,\
            \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
            \ status, url or username"
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      required:
      - idBoard
      - idMembership
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - idMembership
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-myPrefs:
      properties:
        idBoard:
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-emailPosition:
      properties:
        idBoard:
          type: string
        value:
          description: "One of: bottom or top"
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-idEmailList:
      properties:
        idBoard:
          type: string
        value:
          description: An id
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-showListGuide:
      properties:
        idBoard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-showSidebar:
      properties:
        idBoard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-showSidebarActivity:
      properties:
        idBoard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-showSidebarBoardActions:
      properties:
        idBoard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-myPrefs-showSidebarMembers:
      properties:
        idBoard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-name:
      properties:
        idBoard:
          type: string
        value:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-organization:
      properties:
        idBoard:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--boards-idBoard-organization-get-parameters-1-schema
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - fields
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-organization-field:
      properties:
        idBoard:
          type: string
        field:
          type: string
      required:
      - field
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - field
    konfig-generated-schema-single-parameter-schema-post--boards-idBoard-powerUps:
      properties:
        idBoard:
          type: string
        value:
          description: "One of: calendar, cardAging, recap or voting"
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-delete--boards-idBoard-powerUps-powerUp:
      properties:
        idBoard:
          type: string
        powerUp:
          type: string
      required:
      - idBoard
      - powerUp
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - powerUp
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-background:
      properties:
        idBoard:
          type: string
        value:
          description: "A standard background name, or the id of a custom background"
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-calendarFeedEnabled:
      properties:
        idBoard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-cardAging:
      properties:
        idBoard:
          type: string
        value:
          description: "One of: pirate or regular"
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-cardCovers:
      properties:
        idBoard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-comments:
      properties:
        idBoard:
          type: string
        value:
          description: "One of: disabled, members, observers, org or public"
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-invitations:
      properties:
        idBoard:
          type: string
        value:
          description: "One of: admins or members"
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-permissionLevel:
      properties:
        idBoard:
          type: string
        value:
          description: "One of: private or public"
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-selfJoin:
      properties:
        idBoard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-prefs-voting:
      properties:
        idBoard:
          type: string
        value:
          description: "One of: disabled, members, observers, org or public"
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-put--boards-idBoard-subscribed:
      properties:
        idBoard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
    konfig-generated-schema-single-parameter-schema-get--boards-idBoard-field:
      properties:
        idBoard:
          type: string
        field:
          type: string
      required:
      - field
      - idBoard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idBoard
      - field
    konfig-generated-schema-single-parameter-schema-post--cards:
      properties:
        closed:
          description: ' true or false'
          type: string
        desc:
          description: a string with a length from 0 to 16384
          type: string
        due:
          description: "A date, or null"
          type: string
        fileSource:
          description: A file
          type: string
        idAttachmentCover:
          description: "Id of the image attachment of this card to use as its cover,\
            \ or null for no cover"
          type: string
        idBoard:
          description: id of the board the card should be moved to
          type: string
        idCardSource:
          description: The id of the card to copy into a new card.
          type: string
        idLabels:
          description: "A comma-separated list of objectIds, 24-character hex strings"
          type: string
        idList:
          description: id of the list that the card should be added to
          type: string
        idMembers:
          description: "A comma-separated list of objectIds, 24-character hex strings"
          type: string
        keepFromSource:
          description: Properties of the card to copy over from the source.
          type: string
        labels:
          description: "all or a comma-separated list of: blue, green, orange, purple,\
            \ red or yellow"
          type: string
        name:
          description: "The name of the new card.  It isn&#39;t required if the name\
            \ is being copied from provided by a URL, file or card that is being copied."
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        subscribed:
          description: ' true or false'
          type: string
        urlSource:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--cards-idCard:
      properties:
        idCard:
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-get--cards-idCard:
      properties:
        idCard:
          type: string
        actions:
          type: string
        actions_entities:
          type: string
        actions_display:
          type: string
        actions_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-4-schema
        action_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-5-schema
        action_memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-6-schema
        attachments:
          type: string
        attachment_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-8-schema
        members:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-10-schema
        membersVoted:
          type: string
        memberVoted_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-12-schema
        checkItemStates:
          type: string
        checkItemState_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-14-schema
        checklists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-15-schema
        checklist_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-16-schema
        board:
          type: string
        board_fields:
          default: "name, desc, descData, closed, idOrganization, pinned, url and\
            \ prefs"
          example: "name, desc, descData, closed, idOrganization, pinned, url and\
            \ prefs"
          type: string
          x-konfig-original-example: "name, desc, descData, closed, idOrganization,\
            \ pinned, url and prefs"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-18-schema
        list:
          type: string
        list_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-20-schema
        stickers:
          type: string
        sticker_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-22-schema
        fields:
          default: "badges, checkItemStates, closed, dateLastActivity, desc, descData,\
            \ due, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort,\
            \ idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl\
            \ and url"
          example: "badges, checkItemStates, closed, dateLastActivity, desc, descData,\
            \ due, email, idBoard, idChecklists, idLabels, idList, idMembers, idShort,\
            \ idAttachmentCover, manualCoverAttachment, labels, name, pos, shortUrl\
            \ and url"
          type: string
          x-konfig-original-example: "badges, checkItemStates, closed, dateLastActivity,\
            \ desc, descData, due, email, idBoard, idChecklists, idLabels, idList,\
            \ idMembers, idShort, idAttachmentCover, manualCoverAttachment, labels,\
            \ name, pos, shortUrl and url"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-get-parameters-23-schema
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - actions
      - actions_entities
      - actions_display
      - actions_limit
      - action_fields
      - action_memberCreator_fields
      - attachments
      - attachment_fields
      - members
      - member_fields
      - membersVoted
      - memberVoted_fields
      - checkItemStates
      - checkItemState_fields
      - checklists
      - checklist_fields
      - board
      - board_fields
      - list
      - list_fields
      - stickers
      - sticker_fields
      - fields
    konfig-generated-schema-single-parameter-schema-put--cards-idCard:
      properties:
        idCard:
          type: string
        closed:
          description: ' true or false'
          type: string
        desc:
          description: a string with a length from 0 to 16384
          type: string
        due:
          description: "A date, or null"
          type: string
        fileSource:
          description: A file
          type: string
        idAttachmentCover:
          description: "Id of the image attachment of this card to use as its cover,\
            \ or null for no cover"
          type: string
        idBoard:
          description: id of the board the card should be moved to
          type: string
        idCardSource:
          description: The id of the card to copy into a new card.
          type: string
        idLabels:
          description: "A comma-separated list of objectIds, 24-character hex strings"
          type: string
        idList:
          description: id of the list that the card should be added to
          type: string
        idMembers:
          description: "A comma-separated list of objectIds, 24-character hex strings"
          type: string
        keepFromSource:
          description: Properties of the card to copy over from the source.
          type: string
        labels:
          description: "all or a comma-separated list of: blue, green, orange, purple,\
            \ red or yellow"
          type: string
        name:
          description: "The name of the new card.  It isn&#39;t required if the name\
            \ is being copied from provided by a URL, file or card that is being copied."
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        subscribed:
          description: ' true or false'
          type: string
        urlSource:
          description: A URL starting with http:// or https:// or null
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-actions:
      properties:
        idCard:
          type: string
        entities:
          type: string
        display:
          type: string
        filter:
          default: commentCard and updateCard:idList
          example: commentCard and updateCard:idList
          type: string
          x-konfig-original-example: commentCard and updateCard:idList
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-3-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-4-schema
        limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-5-schema
        format:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-6-schema
        since:
          type: string
        before:
          type: string
        page:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-9-schema
        idModels:
          type: string
        member:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-12-schema
        memberCreator:
          type: string
        memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-actions-get-parameters-14-schema
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - entities
      - display
      - filter
      - fields
      - limit
      - format
      - since
      - before
      - page
      - idModels
      - member
      - member_fields
      - memberCreator
      - memberCreator_fields
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-actions-comments:
      properties:
        idCard:
          type: string
        text:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-delete--cards-idCard-actions-idAction-comments:
      properties:
        idCard:
          type: string
        idAction:
          type: string
      required:
      - idAction
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idAction
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-actions-idAction-comments:
      properties:
        idCard:
          type: string
        idAction:
          type: string
        text:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idAction
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idAction
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-attachments:
      properties:
        idCard:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-attachments-get-parameters-1-schema
        filter:
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - fields
      - filter
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-attachments:
      properties:
        idCard:
          type: string
        file:
          description: A file
          type: string
        mimeType:
          description: a string with a length from 0 to 256
          type: string
        name:
          description: a string with a length from 0 to 256
          type: string
        url:
          description: A URL starting with http:// or https:// or null
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-delete--cards-idCard-attachments-idAttachment:
      properties:
        idCard:
          type: string
        idAttachment:
          type: string
      required:
      - idAttachment
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idAttachment
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-attachments-idAttachment:
      properties:
        idCard:
          type: string
        idAttachment:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-attachments-idAttachment-get-parameters-2-schema
      required:
      - idAttachment
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idAttachment
      - fields
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-board:
      properties:
        idCard:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-board-get-parameters-1-schema
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - fields
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-board-field:
      properties:
        idCard:
          type: string
        field:
          type: string
      required:
      - field
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - field
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-checkItemStates:
      properties:
        idCard:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checkItemStates-get-parameters-1-schema
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - fields
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-checklist-idChecklistCurrent-checkItem-idCheckItem:
      properties:
        idCard:
          type: string
        idChecklistCurrent:
          type: string
        idCheckItem:
          type: string
        idChecklist:
          description: "An id, or null"
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        state:
          description: "One of: complete, false, incomplete or true"
          type: string
      required:
      - idCard
      - idCheckItem
      - idChecklistCurrent
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idChecklistCurrent
      - idCheckItem
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-checklist-idChecklist-checkItem:
      properties:
        idCard:
          type: string
        idChecklist:
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idCard
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idChecklist
    konfig-generated-schema-single-parameter-schema-delete--cards-idCard-checklist-idChecklist-checkItem-idCheckItem:
      properties:
        idCard:
          type: string
        idChecklist:
          type: string
        idCheckItem:
          type: string
      required:
      - idCard
      - idCheckItem
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idChecklist
      - idCheckItem
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-checklist-idChecklist-checkItem-idCheckItem-convertToCard:
      properties:
        idCard:
          type: string
        idChecklist:
          type: string
        idCheckItem:
          type: string
      required:
      - idCard
      - idCheckItem
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idChecklist
      - idCheckItem
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-checklist-idChecklist-checkItem-idCheckItem-name:
      properties:
        idCard:
          type: string
        idChecklist:
          type: string
        idCheckItem:
          type: string
        value:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idCard
      - idCheckItem
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idChecklist
      - idCheckItem
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-checklist-idChecklist-checkItem-idCheckItem-pos:
      properties:
        idCard:
          type: string
        idChecklist:
          type: string
        idCheckItem:
          type: string
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idCard
      - idCheckItem
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idChecklist
      - idCheckItem
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-checklist-idChecklist-checkItem-idCheckItem-state:
      properties:
        idCard:
          type: string
        idChecklist:
          type: string
        idCheckItem:
          type: string
        value:
          description: "One of: complete, false, incomplete or true"
          type: string
      required:
      - idCard
      - idCheckItem
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idChecklist
      - idCheckItem
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-checklists:
      properties:
        idCard:
          type: string
        cards:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-1-schema
        card_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-2-schema
        checkItems:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-3-schema
        checkItem_fields:
          default: "name, nameData, pos and state"
          example: "name, nameData, pos and state"
          type: string
          x-konfig-original-example: "name, nameData, pos and state"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-4-schema
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-5-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-checklists-get-parameters-6-schema
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - cards
      - card_fields
      - checkItems
      - checkItem_fields
      - filter
      - fields
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-checklists:
      properties:
        idCard:
          type: string
        idChecklistSource:
          description: The id of the source checklist to copy into a new checklist.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        value:
          description: "The id of the checklist to add to the card, or null to create\
            \ a new one."
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-delete--cards-idCard-checklists-idChecklist:
      properties:
        idCard:
          type: string
        idChecklist:
          type: string
      required:
      - idCard
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idChecklist
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-closed:
      properties:
        idCard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-desc:
      properties:
        idCard:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-due:
      properties:
        idCard:
          type: string
        value:
          description: "A date, or null"
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-idAttachmentCover:
      properties:
        idCard:
          type: string
        value:
          description: "Id of the image attachment of this card to use as its cover,\
            \ or null for no cover"
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-idBoard:
      properties:
        idCard:
          type: string
        idList:
          description: id of the list that the card should be moved to on the new
            board
          type: string
        value:
          description: id of the board the card should be moved to
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-idLabels:
      properties:
        idCard:
          type: string
        value:
          description: The id of the label to add
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-delete--cards-idCard-idLabels-idLabel:
      properties:
        idCard:
          type: string
        idLabel:
          type: string
      required:
      - idCard
      - idLabel
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idLabel
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-idList:
      properties:
        idCard:
          type: string
        value:
          description: id of the list the card should be moved to
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-idMembers:
      properties:
        idCard:
          type: string
        value:
          description: The id of the member to add to the card
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-idMembers:
      properties:
        idCard:
          type: string
        value:
          description: The id of the member to add to the card
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-delete--cards-idCard-idMembers-idMember:
      properties:
        idCard:
          type: string
        idMember:
          type: string
      required:
      - idCard
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idMember
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-labels:
      properties:
        idCard:
          type: string
        color:
          description: A valid label color or null
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        value:
          description: "all or a comma-separated list of: blue, green, orange, purple,\
            \ red or yellow"
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-labels:
      properties:
        idCard:
          type: string
        color:
          description: A valid label color or null
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        value:
          description: "all or a comma-separated list of: blue, green, orange, purple,\
            \ red or yellow"
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-delete--cards-idCard-labels-color:
      properties:
        idCard:
          type: string
        color:
          type: string
      required:
      - color
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - color
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-list:
      properties:
        idCard:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-list-get-parameters-1-schema
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - fields
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-list-field:
      properties:
        idCard:
          type: string
        field:
          type: string
      required:
      - field
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - field
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-markAssociatedNotificationsRead:
      properties:
        idCard:
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-members:
      properties:
        idCard:
          type: string
        fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-members-get-parameters-1-schema
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - fields
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-membersVoted:
      properties:
        idCard:
          type: string
        fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-membersVoted-get-parameters-1-schema
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - fields
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-membersVoted:
      properties:
        idCard:
          type: string
        value:
          description: The id of the member to vote &#39;yes&#39; on the card
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-delete--cards-idCard-membersVoted-idMember:
      properties:
        idCard:
          type: string
        idMember:
          type: string
      required:
      - idCard
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idMember
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-name:
      properties:
        idCard:
          type: string
        value:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-pos:
      properties:
        idCard:
          type: string
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-stickers:
      properties:
        idCard:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-stickers-get-parameters-1-schema
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - fields
    konfig-generated-schema-single-parameter-schema-post--cards-idCard-stickers:
      properties:
        idCard:
          type: string
        image:
          description: a string with a length from 0 to 16384
          type: string
        left:
          description: undefined
          type: string
        rotate:
          description: undefined
          type: string
        top:
          description: undefined
          type: string
        zIndex:
          description: "Valid Z values for stickers, must be an integer"
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-delete--cards-idCard-stickers-idSticker:
      properties:
        idCard:
          type: string
        idSticker:
          type: string
      required:
      - idCard
      - idSticker
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idSticker
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-stickers-idSticker:
      properties:
        idCard:
          type: string
        idSticker:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--cards-idCard-stickers-idSticker-get-parameters-2-schema
      required:
      - idCard
      - idSticker
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idSticker
      - fields
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-stickers-idSticker:
      properties:
        idCard:
          type: string
        idSticker:
          type: string
        image:
          description: a string with a length from 0 to 16384
          type: string
        left:
          description: undefined
          type: string
        rotate:
          description: undefined
          type: string
        top:
          description: undefined
          type: string
        zIndex:
          description: "Valid Z values for stickers, must be an integer"
          type: string
      required:
      - idCard
      - idSticker
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - idSticker
    konfig-generated-schema-single-parameter-schema-put--cards-idCard-subscribed:
      properties:
        idCard:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
    konfig-generated-schema-single-parameter-schema-get--cards-idCard-field:
      properties:
        idCard:
          type: string
        field:
          type: string
      required:
      - field
      - idCard
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idCard
      - field
    konfig-generated-schema-single-parameter-schema-post--checklists:
      properties:
        idBoard:
          description: id of the board that the checklist should be added to
          type: string
        idCard:
          description: id of the card that the checklist should be added to
          type: string
        idChecklistSource:
          description: The id of the source checklist to copy into a new checklist.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--checklists-idChecklist:
      properties:
        idChecklist:
          type: string
      required:
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
    konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist:
      properties:
        idChecklist:
          type: string
        cards:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-get-parameters-1-schema
        card_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-get-parameters-2-schema
        checkItems:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-get-parameters-3-schema
        checkItem_fields:
          default: "name, nameData, pos and state"
          example: "name, nameData, pos and state"
          type: string
          x-konfig-original-example: "name, nameData, pos and state"
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-get-parameters-4-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-get-parameters-5-schema
      required:
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
      - cards
      - card_fields
      - checkItems
      - checkItem_fields
      - fields
    konfig-generated-schema-single-parameter-schema-put--checklists-idChecklist:
      properties:
        idChecklist:
          type: string
        idBoard:
          description: id of the board that the checklist should be added to
          type: string
        idCard:
          description: id of the card that the checklist should be added to
          type: string
        idChecklistSource:
          description: The id of the source checklist to copy into a new checklist.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
    konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-board:
      properties:
        idChecklist:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-board-get-parameters-1-schema
      required:
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
      - fields
    konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-board-field:
      properties:
        idChecklist:
          type: string
        field:
          type: string
      required:
      - field
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
      - field
    konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-cards:
      properties:
        idChecklist:
          type: string
        actions:
          type: string
        attachments:
          type: string
        attachment_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-3-schema
        stickers:
          type: string
        members:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-6-schema
        checkItemStates:
          type: string
        checklists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-8-schema
        limit:
          type: string
        since:
          type: string
        before:
          type: string
        filter:
          default: open
          example: open
          type: string
          x-konfig-original-example: open
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-12-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-cards-get-parameters-13-schema
      required:
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
      - actions
      - attachments
      - attachment_fields
      - stickers
      - members
      - member_fields
      - checkItemStates
      - checklists
      - limit
      - since
      - before
      - filter
      - fields
    konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-cards-filter:
      properties:
        idChecklist:
          type: string
        filter:
          type: string
      required:
      - filter
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
      - filter
    konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-checkItems:
      properties:
        idChecklist:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-checkItems-get-parameters-1-schema
        fields:
          default: "name, nameData, pos and state"
          example: "name, nameData, pos and state"
          type: string
          x-konfig-original-example: "name, nameData, pos and state"
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-checkItems-get-parameters-2-schema
      required:
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
      - filter
      - fields
    konfig-generated-schema-single-parameter-schema-post--checklists-idChecklist-checkItems:
      properties:
        idChecklist:
          type: string
        checked:
          description: ' true or false'
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
    konfig-generated-schema-single-parameter-schema-delete--checklists-idChecklist-checkItems-idCheckItem:
      properties:
        idChecklist:
          type: string
        idCheckItem:
          type: string
      required:
      - idCheckItem
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
      - idCheckItem
    konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-checkItems-idCheckItem:
      properties:
        idChecklist:
          type: string
        idCheckItem:
          type: string
        fields:
          default: "name, nameData, pos and state"
          example: "name, nameData, pos and state"
          type: string
          x-konfig-original-example: "name, nameData, pos and state"
          x-konfig-generated-schema: konfig-generated-schema-paths--checklists-idChecklist-checkItems-idCheckItem-get-parameters-2-schema
      required:
      - idCheckItem
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
      - idCheckItem
      - fields
    konfig-generated-schema-single-parameter-schema-put--checklists-idChecklist-idCard:
      properties:
        idChecklist:
          type: string
        value:
          description: The id of the card that the checklist is on
          type: string
      required:
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
    konfig-generated-schema-single-parameter-schema-put--checklists-idChecklist-name:
      properties:
        idChecklist:
          type: string
        value:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
    konfig-generated-schema-single-parameter-schema-put--checklists-idChecklist-pos:
      properties:
        idChecklist:
          type: string
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
    konfig-generated-schema-single-parameter-schema-get--checklists-idChecklist-field:
      properties:
        idChecklist:
          type: string
        field:
          type: string
      required:
      - field
      - idChecklist
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idChecklist
      - field
    konfig-generated-schema-single-parameter-schema-post--labels:
      properties:
        color:
          description: A valid label color or null
          type: string
        idBoard:
          description: An id
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--labels-idLabel:
      properties:
        idLabel:
          type: string
      required:
      - idLabel
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idLabel
    konfig-generated-schema-single-parameter-schema-get--labels-idLabel:
      properties:
        idLabel:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--labels-idLabel-get-parameters-1-schema
      required:
      - idLabel
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idLabel
      - fields
    konfig-generated-schema-single-parameter-schema-put--labels-idLabel:
      properties:
        idLabel:
          type: string
        color:
          description: A valid label color or null
          type: string
        idBoard:
          description: An id
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idLabel
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idLabel
    konfig-generated-schema-single-parameter-schema-get--labels-idLabel-board:
      properties:
        idLabel:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--labels-idLabel-board-get-parameters-1-schema
      required:
      - idLabel
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idLabel
      - fields
    konfig-generated-schema-single-parameter-schema-get--labels-idLabel-board-field:
      properties:
        idLabel:
          type: string
        field:
          type: string
      required:
      - field
      - idLabel
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idLabel
      - field
    konfig-generated-schema-single-parameter-schema-put--labels-idLabel-color:
      properties:
        idLabel:
          type: string
        value:
          description: A valid label color or null
          type: string
      required:
      - idLabel
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idLabel
    konfig-generated-schema-single-parameter-schema-put--labels-idLabel-name:
      properties:
        idLabel:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idLabel
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idLabel
    konfig-generated-schema-single-parameter-schema-post--lists:
      properties:
        closed:
          description: ' true or false'
          type: string
        idBoard:
          description: id of the board that the list should be added to
          type: string
        idListSource:
          description: The id of the list to copy into a new list.
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        subscribed:
          description: ' true or false'
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--lists-idList:
      properties:
        idList:
          type: string
        cards:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-get-parameters-1-schema
        card_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-get-parameters-2-schema
        board:
          type: string
        board_fields:
          default: "name, desc, descData, closed, idOrganization, pinned, url and\
            \ prefs"
          example: "name, desc, descData, closed, idOrganization, pinned, url and\
            \ prefs"
          type: string
          x-konfig-original-example: "name, desc, descData, closed, idOrganization,\
            \ pinned, url and prefs"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-get-parameters-4-schema
        fields:
          default: "name, closed, idBoard and pos"
          example: "name, closed, idBoard and pos"
          type: string
          x-konfig-original-example: "name, closed, idBoard and pos"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-get-parameters-5-schema
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
      - cards
      - card_fields
      - board
      - board_fields
      - fields
    konfig-generated-schema-single-parameter-schema-put--lists-idList:
      properties:
        idList:
          type: string
        closed:
          description: ' true or false'
          type: string
        idBoard:
          description: id of the board that the list should be added to
          type: string
        idListSource:
          description: The id of the list to copy into a new list.
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        subscribed:
          description: ' true or false'
          type: string
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
    konfig-generated-schema-single-parameter-schema-get--lists-idList-actions:
      properties:
        idList:
          type: string
        entities:
          type: string
        display:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-3-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-4-schema
        limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-5-schema
        format:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-6-schema
        since:
          type: string
        before:
          type: string
        page:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-9-schema
        idModels:
          type: string
        member:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-12-schema
        memberCreator:
          type: string
        memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-actions-get-parameters-14-schema
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
      - entities
      - display
      - filter
      - fields
      - limit
      - format
      - since
      - before
      - page
      - idModels
      - member
      - member_fields
      - memberCreator
      - memberCreator_fields
    konfig-generated-schema-single-parameter-schema-post--lists-idList-archiveAllCards:
      properties:
        idList:
          type: string
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
    konfig-generated-schema-single-parameter-schema-get--lists-idList-board:
      properties:
        idList:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-board-get-parameters-1-schema
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
      - fields
    konfig-generated-schema-single-parameter-schema-get--lists-idList-board-field:
      properties:
        idList:
          type: string
        field:
          type: string
      required:
      - field
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
      - field
    konfig-generated-schema-single-parameter-schema-get--lists-idList-cards:
      properties:
        idList:
          type: string
        actions:
          type: string
        attachments:
          type: string
        attachment_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-cards-get-parameters-3-schema
        stickers:
          type: string
        members:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-cards-get-parameters-6-schema
        checkItemStates:
          type: string
        checklists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-cards-get-parameters-8-schema
        limit:
          type: string
        since:
          type: string
        before:
          type: string
        filter:
          default: open
          example: open
          type: string
          x-konfig-original-example: open
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-cards-get-parameters-12-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--lists-idList-cards-get-parameters-13-schema
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
      - actions
      - attachments
      - attachment_fields
      - stickers
      - members
      - member_fields
      - checkItemStates
      - checklists
      - limit
      - since
      - before
      - filter
      - fields
    konfig-generated-schema-single-parameter-schema-post--lists-idList-cards:
      properties:
        idList:
          type: string
        desc:
          description: a string with a length from 0 to 16384
          type: string
        due:
          description: "A date, or null"
          type: string
        idMembers:
          description: "A comma-separated list of objectIds, 24-character hex strings"
          type: string
        labels:
          description: "all or a comma-separated list of: blue, green, orange, purple,\
            \ red or yellow"
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
    konfig-generated-schema-single-parameter-schema-get--lists-idList-cards-filter:
      properties:
        idList:
          type: string
        filter:
          type: string
      required:
      - filter
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
      - filter
    konfig-generated-schema-single-parameter-schema-put--lists-idList-closed:
      properties:
        idList:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
    konfig-generated-schema-single-parameter-schema-put--lists-idList-idBoard:
      properties:
        idList:
          type: string
        pos:
          description: position of the list on the new board
          type: string
        value:
          description: id of the board the list should be moved to
          type: string
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
    konfig-generated-schema-single-parameter-schema-post--lists-idList-moveAllCards:
      properties:
        idList:
          type: string
        idBoard:
          description: id of the board that the cards should be moved to
          type: string
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
    konfig-generated-schema-single-parameter-schema-put--lists-idList-name:
      properties:
        idList:
          type: string
        value:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
    konfig-generated-schema-single-parameter-schema-put--lists-idList-pos:
      properties:
        idList:
          type: string
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
    konfig-generated-schema-single-parameter-schema-put--lists-idList-subscribed:
      properties:
        idList:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
    konfig-generated-schema-single-parameter-schema-get--lists-idList-field:
      properties:
        idList:
          type: string
        field:
          type: string
      required:
      - field
      - idList
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idList
      - field
    konfig-generated-schema-single-parameter-schema-get--members-idMember:
      properties:
        idMember:
          type: string
        actions:
          type: string
        actions_entities:
          type: string
        actions_display:
          type: string
        actions_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-4-schema
        action_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-5-schema
        action_since:
          type: string
        action_before:
          type: string
        cards:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-8-schema
        card_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-9-schema
        card_members:
          type: string
        card_member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-11-schema
        card_attachments:
          type: string
        card_attachment_fields:
          default: url and previews
          example: url and previews
          type: string
          x-konfig-original-example: url and previews
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-13-schema
        card_stickers:
          type: string
        boards:
          type: string
        board_fields:
          default: "name, closed, idOrganization and pinned"
          example: "name, closed, idOrganization and pinned"
          type: string
          x-konfig-original-example: "name, closed, idOrganization and pinned"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-16-schema
        board_actions:
          type: string
        board_actions_entities:
          type: string
        board_actions_display:
          type: string
        board_actions_format:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-20-schema
        board_actions_since:
          type: string
        board_actions_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-22-schema
        board_action_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-23-schema
        board_lists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-24-schema
        board_memberships:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-25-schema
        board_organization:
          type: string
        board_organization_fields:
          default: name and displayName
          example: name and displayName
          type: string
          x-konfig-original-example: name and displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-27-schema
        boardsInvited:
          type: string
        boardsInvited_fields:
          default: "name, closed, idOrganization and pinned"
          example: "name, closed, idOrganization and pinned"
          type: string
          x-konfig-original-example: "name, closed, idOrganization and pinned"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-29-schema
        boardStars:
          type: string
        savedSearches:
          type: string
        organizations:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-32-schema
        organization_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-33-schema
        organization_paid_account:
          type: string
        organizationsInvited:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-35-schema
        organizationsInvited_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-36-schema
        notifications:
          type: string
        notifications_entities:
          type: string
        notifications_display:
          type: string
        notifications_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-40-schema
        notification_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-41-schema
        notification_memberCreator:
          type: string
        notification_memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-43-schema
        notification_before:
          type: string
        notification_since:
          type: string
        tokens:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-46-schema
        paid_account:
          type: string
        boardBackgrounds:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-48-schema
        customBoardBackgrounds:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-49-schema
        customStickers:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-50-schema
        customEmoji:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-51-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-get-parameters-52-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - actions
      - actions_entities
      - actions_display
      - actions_limit
      - action_fields
      - action_since
      - action_before
      - cards
      - card_fields
      - card_members
      - card_member_fields
      - card_attachments
      - card_attachment_fields
      - card_stickers
      - boards
      - board_fields
      - board_actions
      - board_actions_entities
      - board_actions_display
      - board_actions_format
      - board_actions_since
      - board_actions_limit
      - board_action_fields
      - board_lists
      - board_memberships
      - board_organization
      - board_organization_fields
      - boardsInvited
      - boardsInvited_fields
      - boardStars
      - savedSearches
      - organizations
      - organization_fields
      - organization_paid_account
      - organizationsInvited
      - organizationsInvited_fields
      - notifications
      - notifications_entities
      - notifications_display
      - notifications_limit
      - notification_fields
      - notification_memberCreator
      - notification_memberCreator_fields
      - notification_before
      - notification_since
      - tokens
      - paid_account
      - boardBackgrounds
      - customBoardBackgrounds
      - customStickers
      - customEmoji
      - fields
    konfig-generated-schema-single-parameter-schema-put--members-idMember:
      properties:
        idMember:
          type: string
        avatarSource:
          description: "One of: gravatar, none or upload"
          type: string
        bio:
          description: a string with a length from 0 to 16384
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        initials:
          description: A string with a length from 1 to 4.  Cannot begin or end with
            a space
          type: string
        prefs/colorBlind:
          description: ' true or false'
          type: string
        prefs/locale:
          description: a string with a length from 0 to 255
          type: string
        prefs/minutesBetweenSummaries:
          description: "-1 (disabled), 1 or 60"
          type: string
        username:
          description: "A string with a length of at least 3.  Only lowercase letters,\
            \ underscores, and numbers are allowed.  Must be unique."
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-get--members-idMember-actions:
      properties:
        idMember:
          type: string
        entities:
          type: string
        display:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-3-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-4-schema
        limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-5-schema
        format:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-6-schema
        since:
          type: string
        before:
          type: string
        page:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-9-schema
        idModels:
          type: string
        member:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-12-schema
        memberCreator:
          type: string
        memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-actions-get-parameters-14-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - entities
      - display
      - filter
      - fields
      - limit
      - format
      - since
      - before
      - page
      - idModels
      - member
      - member_fields
      - memberCreator
      - memberCreator_fields
    konfig-generated-schema-single-parameter-schema-post--members-idMember-avatar:
      properties:
        idMember:
          type: string
        file:
          description: A file
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-put--members-idMember-avatarSource:
      properties:
        idMember:
          type: string
        value:
          description: "One of: gravatar, none or upload"
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-put--members-idMember-bio:
      properties:
        idMember:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-get--members-idMember-boardBackgrounds:
      properties:
        idMember:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boardBackgrounds-get-parameters-1-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
    konfig-generated-schema-single-parameter-schema-post--members-idMember-boardBackgrounds:
      properties:
        idMember:
          type: string
        brightness:
          description: "One of: dark, light or unknown"
          type: string
        file:
          description: A file
          type: string
        tile:
          description: ' true or false'
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-delete--members-idMember-boardBackgrounds-idBoardBackground:
      properties:
        idMember:
          type: string
        idBoardBackground:
          type: string
      required:
      - idBoardBackground
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardBackground
    konfig-generated-schema-single-parameter-schema-get--members-idMember-boardBackgrounds-idBoardBackground:
      properties:
        idMember:
          type: string
        idBoardBackground:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boardBackgrounds-idBoardBackground-get-parameters-2-schema
      required:
      - idBoardBackground
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardBackground
      - fields
    konfig-generated-schema-single-parameter-schema-put--members-idMember-boardBackgrounds-idBoardBackground:
      properties:
        idMember:
          type: string
        idBoardBackground:
          type: string
        brightness:
          description: "One of: dark, light or unknown"
          type: string
        file:
          description: A file
          type: string
        tile:
          description: ' true or false'
          type: string
      required:
      - idBoardBackground
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardBackground
    konfig-generated-schema-single-parameter-schema-get--members-idMember-boardStars:
      properties:
        idMember:
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-post--members-idMember-boardStars:
      properties:
        idMember:
          type: string
        idBoard:
          description: The id of the board to star
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-delete--members-idMember-boardStars-idBoardStar:
      properties:
        idMember:
          type: string
        idBoardStar:
          type: string
      required:
      - idBoardStar
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardStar
    konfig-generated-schema-single-parameter-schema-get--members-idMember-boardStars-idBoardStar:
      properties:
        idMember:
          type: string
        idBoardStar:
          type: string
      required:
      - idBoardStar
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardStar
    konfig-generated-schema-single-parameter-schema-put--members-idMember-boardStars-idBoardStar:
      properties:
        idMember:
          type: string
        idBoardStar:
          type: string
        idBoard:
          description: The id of the board to star
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idBoardStar
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardStar
    konfig-generated-schema-single-parameter-schema-put--members-idMember-boardStars-idBoardStar-idBoard:
      properties:
        idMember:
          type: string
        idBoardStar:
          type: string
        value:
          description: An id
          type: string
      required:
      - idBoardStar
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardStar
    konfig-generated-schema-single-parameter-schema-put--members-idMember-boardStars-idBoardStar-pos:
      properties:
        idMember:
          type: string
        idBoardStar:
          type: string
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idBoardStar
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardStar
    konfig-generated-schema-single-parameter-schema-get--members-idMember-boards:
      properties:
        idMember:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-1-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-2-schema
        actions:
          type: string
        actions_entities:
          type: string
        actions_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-5-schema
        actions_format:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-6-schema
        actions_since:
          type: string
        action_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-8-schema
        memberships:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-9-schema
        organization:
          type: string
        organization_fields:
          default: name and displayName
          example: name and displayName
          type: string
          x-konfig-original-example: name and displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-11-schema
        lists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boards-get-parameters-12-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
      - fields
      - actions
      - actions_entities
      - actions_limit
      - actions_format
      - actions_since
      - action_fields
      - memberships
      - organization
      - organization_fields
      - lists
    konfig-generated-schema-single-parameter-schema-get--members-idMember-boards-filter:
      properties:
        idMember:
          type: string
        filter:
          type: string
      required:
      - filter
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
    konfig-generated-schema-single-parameter-schema-get--members-idMember-boardsInvited:
      properties:
        idMember:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-boardsInvited-get-parameters-1-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - fields
    konfig-generated-schema-single-parameter-schema-get--members-idMember-boardsInvited-field:
      properties:
        idMember:
          type: string
        field:
          type: string
      required:
      - field
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - field
    konfig-generated-schema-single-parameter-schema-get--members-idMember-cards:
      properties:
        idMember:
          type: string
        actions:
          type: string
        attachments:
          type: string
        attachment_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-cards-get-parameters-3-schema
        stickers:
          type: string
        members:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-cards-get-parameters-6-schema
        checkItemStates:
          type: string
        checklists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-cards-get-parameters-8-schema
        limit:
          type: string
        since:
          type: string
        before:
          type: string
        filter:
          default: visible
          example: visible
          type: string
          x-konfig-original-example: visible
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-cards-get-parameters-12-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-cards-get-parameters-13-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - actions
      - attachments
      - attachment_fields
      - stickers
      - members
      - member_fields
      - checkItemStates
      - checklists
      - limit
      - since
      - before
      - filter
      - fields
    konfig-generated-schema-single-parameter-schema-get--members-idMember-cards-filter:
      properties:
        idMember:
          type: string
        filter:
          type: string
      required:
      - filter
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
    konfig-generated-schema-single-parameter-schema-get--members-idMember-customBoardBackgrounds:
      properties:
        idMember:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customBoardBackgrounds-get-parameters-1-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
    konfig-generated-schema-single-parameter-schema-post--members-idMember-customBoardBackgrounds:
      properties:
        idMember:
          type: string
        brightness:
          description: "One of: dark, light or unknown"
          type: string
        file:
          description: A file
          type: string
        tile:
          description: ' true or false'
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-delete--members-idMember-customBoardBackgrounds-idBoardBackground:
      properties:
        idMember:
          type: string
        idBoardBackground:
          type: string
      required:
      - idBoardBackground
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardBackground
    konfig-generated-schema-single-parameter-schema-get--members-idMember-customBoardBackgrounds-idBoardBackground:
      properties:
        idMember:
          type: string
        idBoardBackground:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customBoardBackgrounds-idBoardBackground-get-parameters-2-schema
      required:
      - idBoardBackground
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardBackground
      - fields
    konfig-generated-schema-single-parameter-schema-put--members-idMember-customBoardBackgrounds-idBoardBackground:
      properties:
        idMember:
          type: string
        idBoardBackground:
          type: string
        brightness:
          description: "One of: dark, light or unknown"
          type: string
        file:
          description: A file
          type: string
        tile:
          description: ' true or false'
          type: string
      required:
      - idBoardBackground
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idBoardBackground
    konfig-generated-schema-single-parameter-schema-get--members-idMember-customEmoji:
      properties:
        idMember:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customEmoji-get-parameters-1-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
    konfig-generated-schema-single-parameter-schema-post--members-idMember-customEmoji:
      properties:
        idMember:
          type: string
        file:
          description: A file
          type: string
        name:
          description: a string with a length from 2 to 64
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-get--members-idMember-customEmoji-idCustomEmoji:
      properties:
        idMember:
          type: string
        idCustomEmoji:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customEmoji-idCustomEmoji-get-parameters-2-schema
      required:
      - idCustomEmoji
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idCustomEmoji
      - fields
    konfig-generated-schema-single-parameter-schema-get--members-idMember-customStickers:
      properties:
        idMember:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customStickers-get-parameters-1-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
    konfig-generated-schema-single-parameter-schema-post--members-idMember-customStickers:
      properties:
        idMember:
          type: string
        file:
          description: A file
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-delete--members-idMember-customStickers-idCustomSticker:
      properties:
        idMember:
          type: string
        idCustomSticker:
          type: string
      required:
      - idCustomSticker
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idCustomSticker
    konfig-generated-schema-single-parameter-schema-get--members-idMember-customStickers-idCustomSticker:
      properties:
        idMember:
          type: string
        idCustomSticker:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-customStickers-idCustomSticker-get-parameters-2-schema
      required:
      - idCustomSticker
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idCustomSticker
      - fields
    konfig-generated-schema-single-parameter-schema-get--members-idMember-deltas:
      properties:
        idMember:
          type: string
        tags:
          type: string
        ixLastUpdate:
          type: string
      required:
      - idMember
      - ixLastUpdate
      - tags
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - tags
      - ixLastUpdate
    konfig-generated-schema-single-parameter-schema-put--members-idMember-fullName:
      properties:
        idMember:
          type: string
        value:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-put--members-idMember-initials:
      properties:
        idMember:
          type: string
        value:
          description: A string with a length from 1 to 4.  Cannot begin or end with
            a space
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-get--members-idMember-notifications:
      properties:
        idMember:
          type: string
        entities:
          type: string
        display:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-3-schema
        read_filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-4-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-5-schema
        limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-6-schema
        page:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-7-schema
        before:
          type: string
        since:
          type: string
        memberCreator:
          type: string
        memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-notifications-get-parameters-11-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - entities
      - display
      - filter
      - read_filter
      - fields
      - limit
      - page
      - before
      - since
      - memberCreator
      - memberCreator_fields
    konfig-generated-schema-single-parameter-schema-get--members-idMember-notifications-filter:
      properties:
        idMember:
          type: string
        filter:
          type: string
      required:
      - filter
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
    konfig-generated-schema-single-parameter-schema-post--members-idMember-oneTimeMessagesDismissed:
      properties:
        idMember:
          type: string
        value:
          description: Type of message dismissed
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-get--members-idMember-organizations:
      properties:
        idMember:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-organizations-get-parameters-1-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-organizations-get-parameters-2-schema
        paid_account:
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
      - fields
      - paid_account
    konfig-generated-schema-single-parameter-schema-get--members-idMember-organizations-filter:
      properties:
        idMember:
          type: string
        filter:
          type: string
      required:
      - filter
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
    konfig-generated-schema-single-parameter-schema-get--members-idMember-organizationsInvited:
      properties:
        idMember:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-organizationsInvited-get-parameters-1-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - fields
    konfig-generated-schema-single-parameter-schema-get--members-idMember-organizationsInvited-field:
      properties:
        idMember:
          type: string
        field:
          type: string
      required:
      - field
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - field
    konfig-generated-schema-single-parameter-schema-put--members-idMember-prefs-colorBlind:
      properties:
        idMember:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-put--members-idMember-prefs-locale:
      properties:
        idMember:
          type: string
        value:
          description: a string with a length from 0 to 255
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-put--members-idMember-prefs-minutesBetweenSummaries:
      properties:
        idMember:
          type: string
        value:
          description: "-1 (disabled), 1 or 60"
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-get--members-idMember-savedSearches:
      properties:
        idMember:
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-post--members-idMember-savedSearches:
      properties:
        idMember:
          type: string
        name:
          description: A non-empty string with at least one non-space character
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        query:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-delete--members-idMember-savedSearches-idSavedSearch:
      properties:
        idMember:
          type: string
        idSavedSearch:
          type: string
      required:
      - idMember
      - idSavedSearch
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idSavedSearch
    konfig-generated-schema-single-parameter-schema-get--members-idMember-savedSearches-idSavedSearch:
      properties:
        idMember:
          type: string
        idSavedSearch:
          type: string
      required:
      - idMember
      - idSavedSearch
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idSavedSearch
    konfig-generated-schema-single-parameter-schema-put--members-idMember-savedSearches-idSavedSearch:
      properties:
        idMember:
          type: string
        idSavedSearch:
          type: string
        name:
          description: A non-empty string with at least one non-space character
          type: string
        pos:
          description: "A position. top , bottom , or a positive number."
          type: string
        query:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idMember
      - idSavedSearch
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idSavedSearch
    konfig-generated-schema-single-parameter-schema-put--members-idMember-savedSearches-idSavedSearch-name:
      properties:
        idMember:
          type: string
        idSavedSearch:
          type: string
        value:
          description: A non-empty string with at least one non-space character
          type: string
      required:
      - idMember
      - idSavedSearch
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idSavedSearch
    konfig-generated-schema-single-parameter-schema-put--members-idMember-savedSearches-idSavedSearch-pos:
      properties:
        idMember:
          type: string
        idSavedSearch:
          type: string
        value:
          description: "A position. top , bottom , or a positive number."
          type: string
      required:
      - idMember
      - idSavedSearch
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idSavedSearch
    konfig-generated-schema-single-parameter-schema-put--members-idMember-savedSearches-idSavedSearch-query:
      properties:
        idMember:
          type: string
        idSavedSearch:
          type: string
        value:
          description: a string with a length from 1 to 16384
          type: string
      required:
      - idMember
      - idSavedSearch
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - idSavedSearch
    konfig-generated-schema-single-parameter-schema-get--members-idMember-tokens:
      properties:
        idMember:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--members-idMember-tokens-get-parameters-1-schema
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - filter
    konfig-generated-schema-single-parameter-schema-put--members-idMember-username:
      properties:
        idMember:
          type: string
        value:
          description: "A string with a length of at least 3.  Only lowercase letters,\
            \ underscores, and numbers are allowed.  Must be unique."
          type: string
      required:
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
    konfig-generated-schema-single-parameter-schema-get--members-idMember-field:
      properties:
        idMember:
          type: string
        field:
          type: string
      required:
      - field
      - idMember
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idMember
      - field
    konfig-generated-schema-single-parameter-schema-post--notifications-all-read:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification:
      properties:
        idNotification:
          type: string
        display:
          type: string
        entities:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-3-schema
        memberCreator:
          type: string
        memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-5-schema
        board:
          type: string
        board_fields:
          default: name
          example: name
          type: string
          x-konfig-original-example: name
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-7-schema
        list:
          type: string
        card:
          type: string
        card_fields:
          default: name
          example: name
          type: string
          x-konfig-original-example: name
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-10-schema
        organization:
          type: string
        organization_fields:
          default: displayName
          example: displayName
          type: string
          x-konfig-original-example: displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-12-schema
        member:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-get-parameters-14-schema
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - display
      - entities
      - fields
      - memberCreator
      - memberCreator_fields
      - board
      - board_fields
      - list
      - card
      - card_fields
      - organization
      - organization_fields
      - member
      - member_fields
    konfig-generated-schema-single-parameter-schema-put--notifications-idNotification:
      properties:
        idNotification:
          type: string
        unread:
          description: ' true or false'
          type: string
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-board:
      properties:
        idNotification:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-board-get-parameters-1-schema
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - fields
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-board-field:
      properties:
        idNotification:
          type: string
        field:
          type: string
      required:
      - field
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - field
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-card:
      properties:
        idNotification:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-card-get-parameters-1-schema
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - fields
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-card-field:
      properties:
        idNotification:
          type: string
        field:
          type: string
      required:
      - field
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - field
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-display:
      properties:
        idNotification:
          type: string
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-entities:
      properties:
        idNotification:
          type: string
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-list:
      properties:
        idNotification:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-list-get-parameters-1-schema
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - fields
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-list-field:
      properties:
        idNotification:
          type: string
        field:
          type: string
      required:
      - field
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - field
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-member:
      properties:
        idNotification:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-member-get-parameters-1-schema
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - fields
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-member-field:
      properties:
        idNotification:
          type: string
        field:
          type: string
      required:
      - field
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - field
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-memberCreator:
      properties:
        idNotification:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-memberCreator-get-parameters-1-schema
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - fields
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-memberCreator-field:
      properties:
        idNotification:
          type: string
        field:
          type: string
      required:
      - field
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - field
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-organization:
      properties:
        idNotification:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--notifications-idNotification-organization-get-parameters-1-schema
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - fields
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-organization-field:
      properties:
        idNotification:
          type: string
        field:
          type: string
      required:
      - field
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - field
    konfig-generated-schema-single-parameter-schema-put--notifications-idNotification-unread:
      properties:
        idNotification:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
    konfig-generated-schema-single-parameter-schema-get--notifications-idNotification-field:
      properties:
        idNotification:
          type: string
        field:
          type: string
      required:
      - field
      - idNotification
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idNotification
      - field
    konfig-generated-schema-single-parameter-schema-post--organizations:
      properties:
        desc:
          description: a string with a length from 0 to 16384
          type: string
        displayName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        prefs/associatedDomain:
          description: The google apps domain to link this org to.
          type: string
        prefs/boardVisibilityRestrict/org:
          description: "One of: admin, none or org"
          type: string
        prefs/boardVisibilityRestrict/private:
          description: "One of: admin, none or org"
          type: string
        prefs/boardVisibilityRestrict/public:
          description: "One of: admin, none or org"
          type: string
        prefs/externalMembersDisabled:
          description: ' true or false'
          type: string
        prefs/googleAppsVersion:
          description: a number from 1 to 2
          type: string
        prefs/orgInviteRestrict:
          description: An email address with optional expansion tokens
          type: string
        prefs/permissionLevel:
          description: "One of: private or public"
          type: string
        website:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg:
      properties:
        idOrg:
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg:
      properties:
        idOrg:
          type: string
        actions:
          type: string
        actions_entities:
          type: string
        actions_display:
          type: string
        actions_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-4-schema
        action_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-5-schema
        memberships:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-6-schema
        memberships_member:
          type: string
        memberships_member_fields:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-8-schema
        members:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-9-schema
        member_fields:
          default: "avatarHash, fullName, initials, username and confirmed"
          example: "avatarHash, fullName, initials, username and confirmed"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials, username and\
            \ confirmed"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-10-schema
        member_activity:
          type: string
        membersInvited:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-12-schema
        membersInvited_fields:
          default: "avatarHash, initials, fullName and username"
          example: "avatarHash, initials, fullName and username"
          type: string
          x-konfig-original-example: "avatarHash, initials, fullName and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-13-schema
        boards:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-14-schema
        board_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-15-schema
        board_actions:
          type: string
        board_actions_entities:
          type: string
        board_actions_display:
          type: string
        board_actions_format:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-19-schema
        board_actions_since:
          type: string
        board_actions_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-21-schema
        board_action_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-22-schema
        board_lists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-23-schema
        paid_account:
          type: string
        fields:
          default: "name, displayName, desc, descData, url, website, logoHash, products\
            \ and powerUps"
          example: "name, displayName, desc, descData, url, website, logoHash, products\
            \ and powerUps"
          type: string
          x-konfig-original-example: "name, displayName, desc, descData, url, website,\
            \ logoHash, products and powerUps"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-get-parameters-25-schema
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - actions
      - actions_entities
      - actions_display
      - actions_limit
      - action_fields
      - memberships
      - memberships_member
      - memberships_member_fields
      - members
      - member_fields
      - member_activity
      - membersInvited
      - membersInvited_fields
      - boards
      - board_fields
      - board_actions
      - board_actions_entities
      - board_actions_display
      - board_actions_format
      - board_actions_since
      - board_actions_limit
      - board_action_fields
      - board_lists
      - paid_account
      - fields
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg:
      properties:
        idOrg:
          type: string
        desc:
          description: a string with a length from 0 to 16384
          type: string
        displayName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        prefs/associatedDomain:
          description: The google apps domain to link this org to.
          type: string
        prefs/boardVisibilityRestrict/org:
          description: "One of: admin, none or org"
          type: string
        prefs/boardVisibilityRestrict/private:
          description: "One of: admin, none or org"
          type: string
        prefs/boardVisibilityRestrict/public:
          description: "One of: admin, none or org"
          type: string
        prefs/externalMembersDisabled:
          description: ' true or false'
          type: string
        prefs/googleAppsVersion:
          description: a number from 1 to 2
          type: string
        prefs/orgInviteRestrict:
          description: An email address with optional expansion tokens
          type: string
        prefs/permissionLevel:
          description: "One of: private or public"
          type: string
        website:
          description: A URL starting with http:// or https:// or null
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-actions:
      properties:
        idOrg:
          type: string
        entities:
          type: string
        display:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-3-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-4-schema
        limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-5-schema
        format:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-6-schema
        since:
          type: string
        before:
          type: string
        page:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-9-schema
        idModels:
          type: string
        member:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-12-schema
        memberCreator:
          type: string
        memberCreator_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-actions-get-parameters-14-schema
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - entities
      - display
      - filter
      - fields
      - limit
      - format
      - since
      - before
      - page
      - idModels
      - member
      - member_fields
      - memberCreator
      - memberCreator_fields
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-boards:
      properties:
        idOrg:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-1-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-2-schema
        actions:
          type: string
        actions_entities:
          type: string
        actions_limit:
          default: "50"
          example: "50"
          type: string
          x-konfig-original-example: "50"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-5-schema
        actions_format:
          default: list
          example: list
          type: string
          x-konfig-original-example: list
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-6-schema
        actions_since:
          type: string
        action_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-8-schema
        memberships:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-9-schema
        organization:
          type: string
        organization_fields:
          default: name and displayName
          example: name and displayName
          type: string
          x-konfig-original-example: name and displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-11-schema
        lists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-boards-get-parameters-12-schema
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - filter
      - fields
      - actions
      - actions_entities
      - actions_limit
      - actions_format
      - actions_since
      - action_fields
      - memberships
      - organization
      - organization_fields
      - lists
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-boards-filter:
      properties:
        idOrg:
          type: string
        filter:
          type: string
      required:
      - filter
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - filter
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-deltas:
      properties:
        idOrg:
          type: string
        tags:
          type: string
        ixLastUpdate:
          type: string
      required:
      - idOrg
      - ixLastUpdate
      - tags
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - tags
      - ixLastUpdate
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-desc:
      properties:
        idOrg:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-displayName:
      properties:
        idOrg:
          type: string
        value:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg-logo:
      properties:
        idOrg:
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-post--organizations-idOrg-logo:
      properties:
        idOrg:
          type: string
        file:
          description: A file
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-members:
      properties:
        idOrg:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-get-parameters-1-schema
        fields:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-get-parameters-2-schema
        activity:
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - filter
      - fields
      - activity
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-members:
      properties:
        idOrg:
          type: string
        email:
          description: An email address
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-members-filter:
      properties:
        idOrg:
          type: string
        filter:
          type: string
      required:
      - filter
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - filter
    konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg-members-idMember:
      properties:
        idOrg:
          type: string
        idMember:
          type: string
      required:
      - idMember
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - idMember
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-members-idMember:
      properties:
        idOrg:
          type: string
        idMember:
          type: string
        email:
          description: An email address
          type: string
        fullName:
          description: A string with a length of at least 1.  Cannot begin or end
            with a space.
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      required:
      - idMember
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - idMember
    konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg-members-idMember-all:
      properties:
        idOrg:
          type: string
        idMember:
          type: string
      required:
      - idMember
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - idMember
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-members-idMember-cards:
      properties:
        idOrg:
          type: string
        idMember:
          type: string
        actions:
          type: string
        attachments:
          type: string
        attachment_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-4-schema
        members:
          type: string
        member_fields:
          default: "avatarHash, fullName, initials and username"
          example: "avatarHash, fullName, initials and username"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials and username"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-6-schema
        checkItemStates:
          type: string
        checklists:
          default: none
          example: none
          type: string
          x-konfig-original-example: none
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-8-schema
        board:
          type: string
        board_fields:
          default: "name, desc, closed, idOrganization, pinned, url and prefs"
          example: "name, desc, closed, idOrganization, pinned, url and prefs"
          type: string
          x-konfig-original-example: "name, desc, closed, idOrganization, pinned,\
            \ url and prefs"
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-10-schema
        list:
          type: string
        list_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-12-schema
        filter:
          default: visible
          example: visible
          type: string
          x-konfig-original-example: visible
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-13-schema
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-members-idMember-cards-get-parameters-14-schema
      required:
      - idMember
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - idMember
      - actions
      - attachments
      - attachment_fields
      - members
      - member_fields
      - checkItemStates
      - checklists
      - board
      - board_fields
      - list
      - list_fields
      - filter
      - fields
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-members-idMember-deactivated:
      properties:
        idOrg:
          type: string
        idMember:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idMember
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - idMember
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-membersInvited:
      properties:
        idOrg:
          type: string
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-membersInvited-get-parameters-1-schema
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - fields
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-membersInvited-field:
      properties:
        idOrg:
          type: string
        field:
          type: string
      required:
      - field
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - field
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-memberships:
      properties:
        idOrg:
          type: string
        filter:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-memberships-get-parameters-1-schema
        member:
          type: string
        member_fields:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-memberships-get-parameters-3-schema
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - filter
      - member
      - member_fields
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-memberships-idMembership:
      properties:
        idOrg:
          type: string
        idMembership:
          type: string
        member:
          type: string
        member_fields:
          default: fullName and username
          example: fullName and username
          type: string
          x-konfig-original-example: fullName and username
          x-konfig-generated-schema: konfig-generated-schema-paths--organizations-idOrg-memberships-idMembership-get-parameters-3-schema
      required:
      - idMembership
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - idMembership
      - member
      - member_fields
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-memberships-idMembership:
      properties:
        idOrg:
          type: string
        idMembership:
          type: string
        member_fields:
          description: "all or a comma-separated list of: avatarHash, bio, bioData,\
            \ confirmed, fullName, idPremOrgsAdmin, initials, memberType, products,\
            \ status, url or username"
          type: string
        type:
          description: "One of: admin, normal or observer"
          type: string
      required:
      - idMembership
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - idMembership
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-name:
      properties:
        idOrg:
          type: string
        value:
          description: "A string with a length of at least 3.  Only lowercase letters,\
            \ underscores, and numbers are allowed.  Must be unique."
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg-prefs-associatedDomain:
      properties:
        idOrg:
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-associatedDomain:
      properties:
        idOrg:
          type: string
        value:
          description: The google apps domain to link this org to.
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-boardVisibilityRestrict-org:
      properties:
        idOrg:
          type: string
        value:
          description: "One of: admin, none or org"
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-boardVisibilityRestrict-private:
      properties:
        idOrg:
          type: string
        value:
          description: "One of: admin, none or org"
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-boardVisibilityRestrict-public:
      properties:
        idOrg:
          type: string
        value:
          description: "One of: admin, none or org"
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-externalMembersDisabled:
      properties:
        idOrg:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-googleAppsVersion:
      properties:
        idOrg:
          type: string
        value:
          description: a number from 1 to 2
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-delete--organizations-idOrg-prefs-orgInviteRestrict:
      properties:
        idOrg:
          type: string
        value:
          type: string
      required:
      - idOrg
      - value
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - value
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-orgInviteRestrict:
      properties:
        idOrg:
          type: string
        value:
          description: An email address with optional expansion tokens
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-prefs-permissionLevel:
      properties:
        idOrg:
          type: string
        value:
          description: "One of: private or public"
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-put--organizations-idOrg-website:
      properties:
        idOrg:
          type: string
        value:
          description: A URL starting with http:// or https:// or null
          type: string
      required:
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
    konfig-generated-schema-single-parameter-schema-get--organizations-idOrg-field:
      properties:
        idOrg:
          type: string
        field:
          type: string
      required:
      - field
      - idOrg
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idOrg
      - field
    konfig-generated-schema-single-parameter-schema-get--search:
      properties:
        query:
          type: string
        idBoards:
          default: mine
          example: mine
          type: string
          x-konfig-original-example: mine
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-1-schema
        idOrganizations:
          type: string
        idCards:
          type: string
        modelTypes:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-4-schema
        board_fields:
          default: name and idOrganization
          example: name and idOrganization
          type: string
          x-konfig-original-example: name and idOrganization
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-5-schema
        boards_limit:
          default: "10"
          example: "10"
          type: string
          x-konfig-original-example: "10"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-6-schema
        card_fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-7-schema
        cards_limit:
          default: "10"
          example: "10"
          type: string
          x-konfig-original-example: "10"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-8-schema
        cards_page:
          default: "0"
          example: "0"
          type: string
          x-konfig-original-example: "0"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-9-schema
        card_board:
          type: string
        card_list:
          type: string
        card_members:
          type: string
        card_stickers:
          type: string
        card_attachments:
          type: string
        organization_fields:
          default: name and displayName
          example: name and displayName
          type: string
          x-konfig-original-example: name and displayName
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-15-schema
        organizations_limit:
          default: "10"
          example: "10"
          type: string
          x-konfig-original-example: "10"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-16-schema
        member_fields:
          default: "avatarHash, fullName, initials, username and confirmed"
          example: "avatarHash, fullName, initials, username and confirmed"
          type: string
          x-konfig-original-example: "avatarHash, fullName, initials, username and\
            \ confirmed"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-17-schema
        members_limit:
          default: "10"
          example: "10"
          type: string
          x-konfig-original-example: "10"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-get-parameters-18-schema
        partial:
          type: string
      required:
      - idOrganizations
      - query
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
      - idBoards
      - idOrganizations
      - idCards
      - modelTypes
      - board_fields
      - boards_limit
      - card_fields
      - cards_limit
      - cards_page
      - card_board
      - card_list
      - card_members
      - card_stickers
      - card_attachments
      - organization_fields
      - organizations_limit
      - member_fields
      - members_limit
      - partial
    konfig-generated-schema-single-parameter-schema-get--search-members:
      properties:
        query:
          type: string
        limit:
          default: "8"
          example: "8"
          type: string
          x-konfig-original-example: "8"
          x-konfig-generated-schema: konfig-generated-schema-paths--search-members-get-parameters-1-schema
        idBoard:
          type: string
        idOrganization:
          type: string
        onlyOrgMembers:
          type: string
      required:
      - query
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - query
      - limit
      - idBoard
      - idOrganization
      - onlyOrgMembers
    konfig-generated-schema-single-parameter-schema-post--sessions:
      properties:
        idBoard:
          description: The id of the board you&#39;re viewing.  Boards with no viewers
            will not get updates about members&#39; statuses.
          type: string
        status:
          description: "One of: active, disconnected or idle"
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--sessions-socket:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--sessions-idSession:
      properties:
        idSession:
          type: string
        idBoard:
          description: The id of the board you&#39;re viewing.  Boards with no viewers
            will not get updates about members&#39; statuses.
          type: string
        status:
          description: "One of: active, disconnected or idle"
          type: string
      required:
      - idSession
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idSession
    konfig-generated-schema-single-parameter-schema-put--sessions-idSession-status:
      properties:
        idSession:
          type: string
        value:
          description: "One of: active, disconnected or idle"
          type: string
      required:
      - idSession
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idSession
    konfig-generated-schema-single-parameter-schema-delete--tokens-token:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--tokens-token:
      properties:
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--tokens-token-get-parameters-0-schema
        webhooks:
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - fields
      - webhooks
    konfig-generated-schema-single-parameter-schema-get--tokens-token-member:
      properties:
        fields:
          default: all
          example: all
          type: string
          x-konfig-original-example: all
          x-konfig-generated-schema: konfig-generated-schema-paths--tokens-token-member-get-parameters-0-schema
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - fields
    konfig-generated-schema-single-parameter-schema-get--tokens-token-member-field:
      properties:
        field:
          type: string
      required:
      - field
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - field
    konfig-generated-schema-single-parameter-schema-get--tokens-token-webhooks:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--tokens-token-webhooks:
      properties:
        description:
          description: a string with a length from 0 to 16384
          type: string
        callbackURL:
          description: A valid URL that is reachable with a HEAD request
          type: string
        idModel:
          description: id of the model to be monitored
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--tokens-token-webhooks:
      properties:
        description:
          description: a string with a length from 0 to 16384
          type: string
        callbackURL:
          description: A valid URL that is reachable with a HEAD request
          type: string
        idModel:
          description: id of the model to be monitored
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--tokens-token-webhooks-idWebhook:
      properties:
        idWebhook:
          type: string
      required:
      - idWebhook
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idWebhook
    konfig-generated-schema-single-parameter-schema-get--tokens-token-webhooks-idWebhook:
      properties:
        idWebhook:
          type: string
      required:
      - idWebhook
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idWebhook
    konfig-generated-schema-single-parameter-schema-get--tokens-token-field:
      properties:
        token:
          type: string
        field:
          type: string
      required:
      - field
      - token
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - token
      - field
    konfig-generated-schema-single-parameter-schema-get--types-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--webhooks:
      properties:
        description:
          description: a string with a length from 0 to 16384
          type: string
        active:
          description: ' true or false'
          type: string
        callbackURL:
          description: A valid URL that is reachable with a HEAD request
          type: string
        idModel:
          description: id of the model that should be hooked
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--webhooks-idWebhook:
      properties:
        idWebhook:
          type: string
      required:
      - idWebhook
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idWebhook
    konfig-generated-schema-single-parameter-schema-get--webhooks-idWebhook:
      properties:
        idWebhook:
          type: string
      required:
      - idWebhook
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idWebhook
    konfig-generated-schema-single-parameter-schema-put--webhooks-idWebhook:
      properties:
        idWebhook:
          type: string
        description:
          description: a string with a length from 0 to 16384
          type: string
        active:
          description: ' true or false'
          type: string
        callbackURL:
          description: A valid URL that is reachable with a HEAD request
          type: string
        idModel:
          description: id of the model that should be hooked
          type: string
      required:
      - idWebhook
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idWebhook
    konfig-generated-schema-single-parameter-schema-put--webhooks-idWebhook-active:
      properties:
        idWebhook:
          type: string
        value:
          description: ' true or false'
          type: string
      required:
      - idWebhook
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idWebhook
    konfig-generated-schema-single-parameter-schema-put--webhooks-idWebhook-callbackURL:
      properties:
        idWebhook:
          type: string
        value:
          description: A valid URL that is reachable with a HEAD request
          type: string
      required:
      - idWebhook
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idWebhook
    konfig-generated-schema-single-parameter-schema-put--webhooks-idWebhook-description:
      properties:
        idWebhook:
          type: string
        value:
          description: a string with a length from 0 to 16384
          type: string
      required:
      - idWebhook
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idWebhook
    konfig-generated-schema-single-parameter-schema-put--webhooks-idWebhook-idModel:
      properties:
        idWebhook:
          type: string
        value:
          description: id of the model to be monitored
          type: string
      required:
      - idWebhook
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idWebhook
    konfig-generated-schema-single-parameter-schema-get--webhooks-idWebhook-field:
      properties:
        idWebhook:
          type: string
        field:
          type: string
      required:
      - field
      - idWebhook
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - idWebhook
      - field
  securitySchemes:
    api_key:
      in: query
      name: key
      type: apiKey
      x-konfig-globally-required-security: false
    api_token:
      in: query
      name: token
      type: apiKey
      x-konfig-globally-required-security: false
x-hasEquivalentPaths: true

