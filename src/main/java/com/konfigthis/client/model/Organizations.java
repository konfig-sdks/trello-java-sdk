/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Organizations
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Organizations {
  public static final String SERIALIZED_NAME_DESC = "desc";
  @SerializedName(SERIALIZED_NAME_DESC)
  private String desc;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PREFS_ASSOCIATED_DOMAIN = "prefs/associatedDomain";
  @SerializedName(SERIALIZED_NAME_PREFS_ASSOCIATED_DOMAIN)
  private String prefsAssociatedDomain;

  public static final String SERIALIZED_NAME_PREFS_BOARD_VISIBILITY_RESTRICT_ORG = "prefs/boardVisibilityRestrict/org";
  @SerializedName(SERIALIZED_NAME_PREFS_BOARD_VISIBILITY_RESTRICT_ORG)
  private String prefsBoardVisibilityRestrictOrg;

  public static final String SERIALIZED_NAME_PREFS_BOARD_VISIBILITY_RESTRICT_PRIVATE = "prefs/boardVisibilityRestrict/private";
  @SerializedName(SERIALIZED_NAME_PREFS_BOARD_VISIBILITY_RESTRICT_PRIVATE)
  private String prefsBoardVisibilityRestrictPrivate;

  public static final String SERIALIZED_NAME_PREFS_BOARD_VISIBILITY_RESTRICT_PUBLIC = "prefs/boardVisibilityRestrict/public";
  @SerializedName(SERIALIZED_NAME_PREFS_BOARD_VISIBILITY_RESTRICT_PUBLIC)
  private String prefsBoardVisibilityRestrictPublic;

  public static final String SERIALIZED_NAME_PREFS_EXTERNAL_MEMBERS_DISABLED = "prefs/externalMembersDisabled";
  @SerializedName(SERIALIZED_NAME_PREFS_EXTERNAL_MEMBERS_DISABLED)
  private String prefsExternalMembersDisabled;

  public static final String SERIALIZED_NAME_PREFS_GOOGLE_APPS_VERSION = "prefs/googleAppsVersion";
  @SerializedName(SERIALIZED_NAME_PREFS_GOOGLE_APPS_VERSION)
  private String prefsGoogleAppsVersion;

  public static final String SERIALIZED_NAME_PREFS_ORG_INVITE_RESTRICT = "prefs/orgInviteRestrict";
  @SerializedName(SERIALIZED_NAME_PREFS_ORG_INVITE_RESTRICT)
  private String prefsOrgInviteRestrict;

  public static final String SERIALIZED_NAME_PREFS_PERMISSION_LEVEL = "prefs/permissionLevel";
  @SerializedName(SERIALIZED_NAME_PREFS_PERMISSION_LEVEL)
  private String prefsPermissionLevel;

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  private String website;

  public Organizations() {
  }

  public Organizations desc(String desc) {
    
    
    
    
    this.desc = desc;
    return this;
  }

   /**
   * a string with a length from 0 to 16384
   * @return desc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "a string with a length from 0 to 16384")

  public String getDesc() {
    return desc;
  }


  public void setDesc(String desc) {
    
    
    
    this.desc = desc;
  }


  public Organizations displayName(String displayName) {
    
    
    
    
    this.displayName = displayName;
    return this;
  }

   /**
   * A string with a length of at least 1.  Cannot begin or end with a space.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A string with a length of at least 1.  Cannot begin or end with a space.")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    
    
    
    this.displayName = displayName;
  }


  public Organizations name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * a string with a length from 0 to 16384
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "a string with a length from 0 to 16384")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public Organizations prefsAssociatedDomain(String prefsAssociatedDomain) {
    
    
    
    
    this.prefsAssociatedDomain = prefsAssociatedDomain;
    return this;
  }

   /**
   * The google apps domain to link this org to.
   * @return prefsAssociatedDomain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The google apps domain to link this org to.")

  public String getPrefsAssociatedDomain() {
    return prefsAssociatedDomain;
  }


  public void setPrefsAssociatedDomain(String prefsAssociatedDomain) {
    
    
    
    this.prefsAssociatedDomain = prefsAssociatedDomain;
  }


  public Organizations prefsBoardVisibilityRestrictOrg(String prefsBoardVisibilityRestrictOrg) {
    
    
    
    
    this.prefsBoardVisibilityRestrictOrg = prefsBoardVisibilityRestrictOrg;
    return this;
  }

   /**
   * One of: admin, none or org
   * @return prefsBoardVisibilityRestrictOrg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One of: admin, none or org")

  public String getPrefsBoardVisibilityRestrictOrg() {
    return prefsBoardVisibilityRestrictOrg;
  }


  public void setPrefsBoardVisibilityRestrictOrg(String prefsBoardVisibilityRestrictOrg) {
    
    
    
    this.prefsBoardVisibilityRestrictOrg = prefsBoardVisibilityRestrictOrg;
  }


  public Organizations prefsBoardVisibilityRestrictPrivate(String prefsBoardVisibilityRestrictPrivate) {
    
    
    
    
    this.prefsBoardVisibilityRestrictPrivate = prefsBoardVisibilityRestrictPrivate;
    return this;
  }

   /**
   * One of: admin, none or org
   * @return prefsBoardVisibilityRestrictPrivate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One of: admin, none or org")

  public String getPrefsBoardVisibilityRestrictPrivate() {
    return prefsBoardVisibilityRestrictPrivate;
  }


  public void setPrefsBoardVisibilityRestrictPrivate(String prefsBoardVisibilityRestrictPrivate) {
    
    
    
    this.prefsBoardVisibilityRestrictPrivate = prefsBoardVisibilityRestrictPrivate;
  }


  public Organizations prefsBoardVisibilityRestrictPublic(String prefsBoardVisibilityRestrictPublic) {
    
    
    
    
    this.prefsBoardVisibilityRestrictPublic = prefsBoardVisibilityRestrictPublic;
    return this;
  }

   /**
   * One of: admin, none or org
   * @return prefsBoardVisibilityRestrictPublic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One of: admin, none or org")

  public String getPrefsBoardVisibilityRestrictPublic() {
    return prefsBoardVisibilityRestrictPublic;
  }


  public void setPrefsBoardVisibilityRestrictPublic(String prefsBoardVisibilityRestrictPublic) {
    
    
    
    this.prefsBoardVisibilityRestrictPublic = prefsBoardVisibilityRestrictPublic;
  }


  public Organizations prefsExternalMembersDisabled(String prefsExternalMembersDisabled) {
    
    
    
    
    this.prefsExternalMembersDisabled = prefsExternalMembersDisabled;
    return this;
  }

   /**
   *  true or false
   * @return prefsExternalMembersDisabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " true or false")

  public String getPrefsExternalMembersDisabled() {
    return prefsExternalMembersDisabled;
  }


  public void setPrefsExternalMembersDisabled(String prefsExternalMembersDisabled) {
    
    
    
    this.prefsExternalMembersDisabled = prefsExternalMembersDisabled;
  }


  public Organizations prefsGoogleAppsVersion(String prefsGoogleAppsVersion) {
    
    
    
    
    this.prefsGoogleAppsVersion = prefsGoogleAppsVersion;
    return this;
  }

   /**
   * a number from 1 to 2
   * @return prefsGoogleAppsVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "a number from 1 to 2")

  public String getPrefsGoogleAppsVersion() {
    return prefsGoogleAppsVersion;
  }


  public void setPrefsGoogleAppsVersion(String prefsGoogleAppsVersion) {
    
    
    
    this.prefsGoogleAppsVersion = prefsGoogleAppsVersion;
  }


  public Organizations prefsOrgInviteRestrict(String prefsOrgInviteRestrict) {
    
    
    
    
    this.prefsOrgInviteRestrict = prefsOrgInviteRestrict;
    return this;
  }

   /**
   * An email address with optional expansion tokens
   * @return prefsOrgInviteRestrict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An email address with optional expansion tokens")

  public String getPrefsOrgInviteRestrict() {
    return prefsOrgInviteRestrict;
  }


  public void setPrefsOrgInviteRestrict(String prefsOrgInviteRestrict) {
    
    
    
    this.prefsOrgInviteRestrict = prefsOrgInviteRestrict;
  }


  public Organizations prefsPermissionLevel(String prefsPermissionLevel) {
    
    
    
    
    this.prefsPermissionLevel = prefsPermissionLevel;
    return this;
  }

   /**
   * One of: private or public
   * @return prefsPermissionLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One of: private or public")

  public String getPrefsPermissionLevel() {
    return prefsPermissionLevel;
  }


  public void setPrefsPermissionLevel(String prefsPermissionLevel) {
    
    
    
    this.prefsPermissionLevel = prefsPermissionLevel;
  }


  public Organizations website(String website) {
    
    
    
    
    this.website = website;
    return this;
  }

   /**
   * A URL starting with http:// or https:// or null
   * @return website
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A URL starting with http:// or https:// or null")

  public String getWebsite() {
    return website;
  }


  public void setWebsite(String website) {
    
    
    
    this.website = website;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Organizations instance itself
   */
  public Organizations putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organizations organizations = (Organizations) o;
    return Objects.equals(this.desc, organizations.desc) &&
        Objects.equals(this.displayName, organizations.displayName) &&
        Objects.equals(this.name, organizations.name) &&
        Objects.equals(this.prefsAssociatedDomain, organizations.prefsAssociatedDomain) &&
        Objects.equals(this.prefsBoardVisibilityRestrictOrg, organizations.prefsBoardVisibilityRestrictOrg) &&
        Objects.equals(this.prefsBoardVisibilityRestrictPrivate, organizations.prefsBoardVisibilityRestrictPrivate) &&
        Objects.equals(this.prefsBoardVisibilityRestrictPublic, organizations.prefsBoardVisibilityRestrictPublic) &&
        Objects.equals(this.prefsExternalMembersDisabled, organizations.prefsExternalMembersDisabled) &&
        Objects.equals(this.prefsGoogleAppsVersion, organizations.prefsGoogleAppsVersion) &&
        Objects.equals(this.prefsOrgInviteRestrict, organizations.prefsOrgInviteRestrict) &&
        Objects.equals(this.prefsPermissionLevel, organizations.prefsPermissionLevel) &&
        Objects.equals(this.website, organizations.website)&&
        Objects.equals(this.additionalProperties, organizations.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(desc, displayName, name, prefsAssociatedDomain, prefsBoardVisibilityRestrictOrg, prefsBoardVisibilityRestrictPrivate, prefsBoardVisibilityRestrictPublic, prefsExternalMembersDisabled, prefsGoogleAppsVersion, prefsOrgInviteRestrict, prefsPermissionLevel, website, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organizations {\n");
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    prefsAssociatedDomain: ").append(toIndentedString(prefsAssociatedDomain)).append("\n");
    sb.append("    prefsBoardVisibilityRestrictOrg: ").append(toIndentedString(prefsBoardVisibilityRestrictOrg)).append("\n");
    sb.append("    prefsBoardVisibilityRestrictPrivate: ").append(toIndentedString(prefsBoardVisibilityRestrictPrivate)).append("\n");
    sb.append("    prefsBoardVisibilityRestrictPublic: ").append(toIndentedString(prefsBoardVisibilityRestrictPublic)).append("\n");
    sb.append("    prefsExternalMembersDisabled: ").append(toIndentedString(prefsExternalMembersDisabled)).append("\n");
    sb.append("    prefsGoogleAppsVersion: ").append(toIndentedString(prefsGoogleAppsVersion)).append("\n");
    sb.append("    prefsOrgInviteRestrict: ").append(toIndentedString(prefsOrgInviteRestrict)).append("\n");
    sb.append("    prefsPermissionLevel: ").append(toIndentedString(prefsPermissionLevel)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("desc");
    openapiFields.add("displayName");
    openapiFields.add("name");
    openapiFields.add("prefs/associatedDomain");
    openapiFields.add("prefs/boardVisibilityRestrict/org");
    openapiFields.add("prefs/boardVisibilityRestrict/private");
    openapiFields.add("prefs/boardVisibilityRestrict/public");
    openapiFields.add("prefs/externalMembersDisabled");
    openapiFields.add("prefs/googleAppsVersion");
    openapiFields.add("prefs/orgInviteRestrict");
    openapiFields.add("prefs/permissionLevel");
    openapiFields.add("website");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Organizations
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Organizations.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Organizations is not found in the empty JSON string", Organizations.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("desc") != null && !jsonObj.get("desc").isJsonNull()) && !jsonObj.get("desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("desc").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("prefs/associatedDomain") != null && !jsonObj.get("prefs/associatedDomain").isJsonNull()) && !jsonObj.get("prefs/associatedDomain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefs/associatedDomain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefs/associatedDomain").toString()));
      }
      if ((jsonObj.get("prefs/boardVisibilityRestrict/org") != null && !jsonObj.get("prefs/boardVisibilityRestrict/org").isJsonNull()) && !jsonObj.get("prefs/boardVisibilityRestrict/org").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefs/boardVisibilityRestrict/org` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefs/boardVisibilityRestrict/org").toString()));
      }
      if ((jsonObj.get("prefs/boardVisibilityRestrict/private") != null && !jsonObj.get("prefs/boardVisibilityRestrict/private").isJsonNull()) && !jsonObj.get("prefs/boardVisibilityRestrict/private").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefs/boardVisibilityRestrict/private` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefs/boardVisibilityRestrict/private").toString()));
      }
      if ((jsonObj.get("prefs/boardVisibilityRestrict/public") != null && !jsonObj.get("prefs/boardVisibilityRestrict/public").isJsonNull()) && !jsonObj.get("prefs/boardVisibilityRestrict/public").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefs/boardVisibilityRestrict/public` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefs/boardVisibilityRestrict/public").toString()));
      }
      if ((jsonObj.get("prefs/externalMembersDisabled") != null && !jsonObj.get("prefs/externalMembersDisabled").isJsonNull()) && !jsonObj.get("prefs/externalMembersDisabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefs/externalMembersDisabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefs/externalMembersDisabled").toString()));
      }
      if ((jsonObj.get("prefs/googleAppsVersion") != null && !jsonObj.get("prefs/googleAppsVersion").isJsonNull()) && !jsonObj.get("prefs/googleAppsVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefs/googleAppsVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefs/googleAppsVersion").toString()));
      }
      if ((jsonObj.get("prefs/orgInviteRestrict") != null && !jsonObj.get("prefs/orgInviteRestrict").isJsonNull()) && !jsonObj.get("prefs/orgInviteRestrict").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefs/orgInviteRestrict` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefs/orgInviteRestrict").toString()));
      }
      if ((jsonObj.get("prefs/permissionLevel") != null && !jsonObj.get("prefs/permissionLevel").isJsonNull()) && !jsonObj.get("prefs/permissionLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefs/permissionLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefs/permissionLevel").toString()));
      }
      if ((jsonObj.get("website") != null && !jsonObj.get("website").isJsonNull()) && !jsonObj.get("website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Organizations.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Organizations' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Organizations> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Organizations.class));

       return (TypeAdapter<T>) new TypeAdapter<Organizations>() {
           @Override
           public void write(JsonWriter out, Organizations value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Organizations read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Organizations instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Organizations given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Organizations
  * @throws IOException if the JSON string is invalid with respect to Organizations
  */
  public static Organizations fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Organizations.class);
  }

 /**
  * Convert an instance of Organizations to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

