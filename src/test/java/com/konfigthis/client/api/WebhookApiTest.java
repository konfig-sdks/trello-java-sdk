/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Webhooks;
import com.konfigthis.client.model.WebhooksActive;
import com.konfigthis.client.model.WebhooksCallbackURL;
import com.konfigthis.client.model.WebhooksDescription;
import com.konfigthis.client.model.WebhooksIdModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhookApi
 */
@Disabled
public class WebhookApiTest {

    private static WebhookApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new WebhookApi(apiClient);
    }

    /**
     * getWebhooksByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String idWebhook = null;
        api.getById(idWebhook)
                .execute();
        // TODO: test validations
    }

    /**
     * getWebhooksByIdWebhookByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdFieldTest() throws ApiException {
        String idWebhook = null;
        String field = null;
        api.getByIdField(idWebhook, field)
                .execute();
        // TODO: test validations
    }

    /**
     * deleteWebhooksByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeByIdTest() throws ApiException {
        String idWebhook = null;
        api.removeById(idWebhook)
                .execute();
        // TODO: test validations
    }

    /**
     * updateWebhooks()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        String description = null;
        String active = null;
        String callbackURL = null;
        String idModel = null;
        api.update()
                .description(description)
                .active(active)
                .callbackURL(callbackURL)
                .idModel(idModel)
                .execute();
        // TODO: test validations
    }

    /**
     * updateWebhooksActiveByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateActiveByIdTest() throws ApiException {
        String idWebhook = null;
        String value = null;
        api.updateActiveById(idWebhook)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateWebhooksByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByIdWebhookTest() throws ApiException {
        String idWebhook = null;
        String description = null;
        String active = null;
        String callbackURL = null;
        String idModel = null;
        api.updateByIdWebhook(idWebhook)
                .description(description)
                .active(active)
                .callbackURL(callbackURL)
                .idModel(idModel)
                .execute();
        // TODO: test validations
    }

    /**
     * updateWebhooksCallbackURLByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCallbackUrlByIdTest() throws ApiException {
        String idWebhook = null;
        String value = null;
        api.updateCallbackUrlById(idWebhook)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateWebhooksDescriptionByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDescriptionByIdWebhookTest() throws ApiException {
        String idWebhook = null;
        String value = null;
        api.updateDescriptionByIdWebhook(idWebhook)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateWebhooksIdModelByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateModelByIdTest() throws ApiException {
        String idWebhook = null;
        String value = null;
        api.updateModelById(idWebhook)
                .value(value)
                .execute();
        // TODO: test validations
    }

}
