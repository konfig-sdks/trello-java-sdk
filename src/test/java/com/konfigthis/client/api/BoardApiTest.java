/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.Boards;
import com.konfigthis.client.model.BoardsChecklists;
import com.konfigthis.client.model.BoardsClosed;
import com.konfigthis.client.model.BoardsDesc;
import com.konfigthis.client.model.BoardsIdOrganization;
import com.konfigthis.client.model.BoardsLabels;
import com.konfigthis.client.model.BoardsLists;
import com.konfigthis.client.model.BoardsMembers;
import com.konfigthis.client.model.BoardsMemberships;
import com.konfigthis.client.model.BoardsName;
import com.konfigthis.client.model.BoardsPowerUps;
import com.konfigthis.client.model.BoardsSubscribed;
import com.konfigthis.client.model.LabelNamesBlue;
import com.konfigthis.client.model.LabelNamesGreen;
import com.konfigthis.client.model.LabelNamesOrange;
import com.konfigthis.client.model.LabelNamesPurple;
import com.konfigthis.client.model.LabelNamesRed;
import com.konfigthis.client.model.LabelNamesYellow;
import com.konfigthis.client.model.MyPrefsEmailPosition;
import com.konfigthis.client.model.MyPrefsIdEmailList;
import com.konfigthis.client.model.MyPrefsShowListGuide;
import com.konfigthis.client.model.MyPrefsShowSidebar;
import com.konfigthis.client.model.MyPrefsShowSidebarActivity;
import com.konfigthis.client.model.MyPrefsShowSidebarBoardActions;
import com.konfigthis.client.model.MyPrefsShowSidebarMembers;
import com.konfigthis.client.model.PrefsBackground;
import com.konfigthis.client.model.PrefsCalendarFeedEnabled;
import com.konfigthis.client.model.PrefsCardAging;
import com.konfigthis.client.model.PrefsCardCovers;
import com.konfigthis.client.model.PrefsComments;
import com.konfigthis.client.model.PrefsInvitations;
import com.konfigthis.client.model.PrefsPermissionLevel;
import com.konfigthis.client.model.PrefsSelfJoin;
import com.konfigthis.client.model.PrefsVoting;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BoardApi
 */
@Disabled
public class BoardApiTest {

    private static BoardApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new BoardApi(apiClient);
    }

    /**
     * addBoardsChecklistsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addChecklistsTest() throws ApiException {
        String idBoard = null;
        String name = null;
        api.addChecklists(idBoard)
                .name(name)
                .execute();
        // TODO: test validations
    }

    /**
     * addBoardsLabelsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addLabelsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String color = null;
        String name = null;
        api.addLabelsByIdBoard(idBoard)
                .color(color)
                .name(name)
                .execute();
        // TODO: test validations
    }

    /**
     * addBoardsPowerUpsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addPowerUpsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.addPowerUpsByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * addBoards()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBoardTest() throws ApiException {
        String closed = null;
        String desc = null;
        String idBoardSource = null;
        String idOrganization = null;
        String keepFromSource = null;
        String labelNamesBlue = null;
        String labelNamesGreen = null;
        String labelNamesOrange = null;
        String labelNamesPurple = null;
        String labelNamesRed = null;
        String labelNamesYellow = null;
        String name = null;
        String powerUps = null;
        String prefsBackground = null;
        String prefsCalendarFeedEnabled = null;
        String prefsCardAging = null;
        String prefsCardCovers = null;
        String prefsComments = null;
        String prefsInvitations = null;
        String prefsPermissionLevel = null;
        String prefsSelfJoin = null;
        String prefsVoting = null;
        String prefsBackground = null;
        String prefsCardAging = null;
        String prefsCardCovers = null;
        String prefsComments = null;
        String prefsInvitations = null;
        String prefsPermissionLevel = null;
        String prefsSelfJoin = null;
        String prefsVoting = null;
        String subscribed = null;
        api.createBoard()
                .closed(closed)
                .desc(desc)
                .idBoardSource(idBoardSource)
                .idOrganization(idOrganization)
                .keepFromSource(keepFromSource)
                .labelNamesBlue(labelNamesBlue)
                .labelNamesGreen(labelNamesGreen)
                .labelNamesOrange(labelNamesOrange)
                .labelNamesPurple(labelNamesPurple)
                .labelNamesRed(labelNamesRed)
                .labelNamesYellow(labelNamesYellow)
                .name(name)
                .powerUps(powerUps)
                .prefsBackground(prefsBackground)
                .prefsCalendarFeedEnabled(prefsCalendarFeedEnabled)
                .prefsCardAging(prefsCardAging)
                .prefsCardCovers(prefsCardCovers)
                .prefsComments(prefsComments)
                .prefsInvitations(prefsInvitations)
                .prefsPermissionLevel(prefsPermissionLevel)
                .prefsSelfJoin(prefsSelfJoin)
                .prefsVoting(prefsVoting)
                .prefsBackground(prefsBackground)
                .prefsCardAging(prefsCardAging)
                .prefsCardCovers(prefsCardCovers)
                .prefsComments(prefsComments)
                .prefsInvitations(prefsInvitations)
                .prefsPermissionLevel(prefsPermissionLevel)
                .prefsSelfJoin(prefsSelfJoin)
                .prefsVoting(prefsVoting)
                .subscribed(subscribed)
                .execute();
        // TODO: test validations
    }

    /**
     * addBoardsListsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createListsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String name = null;
        String pos = null;
        api.createListsByIdBoard(idBoard)
                .name(name)
                .pos(pos)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsCardsByIdBoardByFilter()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void filterCardsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String filter = null;
        api.filterCardsByIdBoard(idBoard, filter)
                .execute();
        // TODO: test validations
    }

    /**
     * addBoardsCalendarKeyGenerateByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateCalendarKeyByIdTest() throws ApiException {
        String idBoard = null;
        api.generateCalendarKeyById(idBoard)
                .execute();
        // TODO: test validations
    }

    /**
     * addBoardsEmailKeyGenerateByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateEmailKeyTest() throws ApiException {
        String idBoard = null;
        api.generateEmailKey(idBoard)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsBoardStarsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardStarsByIdTest() throws ApiException {
        String idBoard = null;
        String filter = null;
        api.getBoardStarsById(idBoard)
                .filter(filter)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String idBoard = null;
        String actions = null;
        String actionsEntities = null;
        String actionsDisplay = null;
        String actionsFormat = null;
        String actionsSince = null;
        String actionsLimit = null;
        String actionFields = null;
        String actionMember = null;
        String actionMemberFields = null;
        String actionMemberCreator = null;
        String actionMemberCreatorFields = null;
        String cards = null;
        String cardFields = null;
        String cardAttachments = null;
        String cardAttachmentFields = null;
        String cardChecklists = null;
        String cardStickers = null;
        String boardStars = null;
        String labels = null;
        String labelFields = null;
        String labelsLimit = null;
        String lists = null;
        String listFields = null;
        String memberships = null;
        String membershipsMember = null;
        String membershipsMemberFields = null;
        String members = null;
        String memberFields = null;
        String membersInvited = null;
        String membersInvitedFields = null;
        String checklists = null;
        String checklistFields = null;
        String organization = null;
        String organizationFields = null;
        String organizationMemberships = null;
        String myPrefs = null;
        String fields = null;
        api.getById(idBoard)
                .actions(actions)
                .actionsEntities(actionsEntities)
                .actionsDisplay(actionsDisplay)
                .actionsFormat(actionsFormat)
                .actionsSince(actionsSince)
                .actionsLimit(actionsLimit)
                .actionFields(actionFields)
                .actionMember(actionMember)
                .actionMemberFields(actionMemberFields)
                .actionMemberCreator(actionMemberCreator)
                .actionMemberCreatorFields(actionMemberCreatorFields)
                .cards(cards)
                .cardFields(cardFields)
                .cardAttachments(cardAttachments)
                .cardAttachmentFields(cardAttachmentFields)
                .cardChecklists(cardChecklists)
                .cardStickers(cardStickers)
                .boardStars(boardStars)
                .labels(labels)
                .labelFields(labelFields)
                .labelsLimit(labelsLimit)
                .lists(lists)
                .listFields(listFields)
                .memberships(memberships)
                .membershipsMember(membershipsMember)
                .membershipsMemberFields(membershipsMemberFields)
                .members(members)
                .memberFields(memberFields)
                .membersInvited(membersInvited)
                .membersInvitedFields(membersInvitedFields)
                .checklists(checklists)
                .checklistFields(checklistFields)
                .organization(organization)
                .organizationFields(organizationFields)
                .organizationMemberships(organizationMemberships)
                .myPrefs(myPrefs)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsByIdBoardByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdFieldTest() throws ApiException {
        String idBoard = null;
        String field = null;
        api.getByIdField(idBoard, field)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsCardsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String actions = null;
        String attachments = null;
        String attachmentFields = null;
        String stickers = null;
        String members = null;
        String memberFields = null;
        String checkItemStates = null;
        String checklists = null;
        String limit = null;
        String since = null;
        String before = null;
        String filter = null;
        String fields = null;
        api.getCardsByIdBoard(idBoard)
                .actions(actions)
                .attachments(attachments)
                .attachmentFields(attachmentFields)
                .stickers(stickers)
                .members(members)
                .memberFields(memberFields)
                .checkItemStates(checkItemStates)
                .checklists(checklists)
                .limit(limit)
                .since(since)
                .before(before)
                .filter(filter)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsCardsByIdBoardByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsByIdBoardByIdCardTest() throws ApiException {
        String idBoard = null;
        String idCard = null;
        String attachments = null;
        String attachmentFields = null;
        String actions = null;
        String actionsEntities = null;
        String actionsDisplay = null;
        String actionsLimit = null;
        String actionFields = null;
        String actionMemberCreatorFields = null;
        String members = null;
        String memberFields = null;
        String checkItemStates = null;
        String checkItemStateFields = null;
        String labels = null;
        String checklists = null;
        String checklistFields = null;
        String fields = null;
        api.getCardsByIdBoardByIdCard(idBoard, idCard)
                .attachments(attachments)
                .attachmentFields(attachmentFields)
                .actions(actions)
                .actionsEntities(actionsEntities)
                .actionsDisplay(actionsDisplay)
                .actionsLimit(actionsLimit)
                .actionFields(actionFields)
                .actionMemberCreatorFields(actionMemberCreatorFields)
                .members(members)
                .memberFields(memberFields)
                .checkItemStates(checkItemStates)
                .checkItemStateFields(checkItemStateFields)
                .labels(labels)
                .checklists(checklists)
                .checklistFields(checklistFields)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsChecklistsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChecklistsByIdTest() throws ApiException {
        String idBoard = null;
        String cards = null;
        String cardFields = null;
        String checkItems = null;
        String checkItemFields = null;
        String filter = null;
        String fields = null;
        api.getChecklistsById(idBoard)
                .cards(cards)
                .cardFields(cardFields)
                .checkItems(checkItems)
                .checkItemFields(checkItemFields)
                .filter(filter)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsDeltasByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDeltasByIdBoardTest() throws ApiException {
        String idBoard = null;
        String tags = null;
        String ixLastUpdate = null;
        api.getDeltasByIdBoard(idBoard, tags, ixLastUpdate)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsLabelsByIdBoardByIdLabel()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLabelsByIdBoardByIdLabelTest() throws ApiException {
        String idBoard = null;
        String idLabel = null;
        String fields = null;
        api.getLabelsByIdBoardByIdLabel(idBoard, idLabel)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsListsByIdBoardByFilter()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListsByFilterTest() throws ApiException {
        String idBoard = null;
        String filter = null;
        api.getListsByFilter(idBoard, filter)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsListsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String cards = null;
        String cardFields = null;
        String filter = null;
        String fields = null;
        api.getListsByIdBoard(idBoard)
                .cards(cards)
                .cardFields(cardFields)
                .filter(filter)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsMembersByIdBoardByFilter()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMembersByFilterTest() throws ApiException {
        String idBoard = null;
        String filter = null;
        api.getMembersByFilter(idBoard, filter)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsMembersByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMembersByIdBoardTest() throws ApiException {
        String idBoard = null;
        String filter = null;
        String fields = null;
        String activity = null;
        api.getMembersByIdBoard(idBoard)
                .filter(filter)
                .fields(fields)
                .activity(activity)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsMembersCardsByIdBoardByIdMember()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMembersCardsByIdBoardByIdMemberTest() throws ApiException {
        String idBoard = null;
        String idMember = null;
        String actions = null;
        String attachments = null;
        String attachmentFields = null;
        String members = null;
        String memberFields = null;
        String checkItemStates = null;
        String checklists = null;
        String board = null;
        String boardFields = null;
        String list = null;
        String listFields = null;
        String filter = null;
        String fields = null;
        api.getMembersCardsByIdBoardByIdMember(idBoard, idMember)
                .actions(actions)
                .attachments(attachments)
                .attachmentFields(attachmentFields)
                .members(members)
                .memberFields(memberFields)
                .checkItemStates(checkItemStates)
                .checklists(checklists)
                .board(board)
                .boardFields(boardFields)
                .list(list)
                .listFields(listFields)
                .filter(filter)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsMembersInvitedByIdBoardByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMembersInvitedByFieldTest() throws ApiException {
        String idBoard = null;
        String field = null;
        api.getMembersInvitedByField(idBoard, field)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsMembersInvitedByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMembersInvitedByIdBoardTest() throws ApiException {
        String idBoard = null;
        String fields = null;
        api.getMembersInvitedByIdBoard(idBoard)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsMembershipsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMembershipsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String filter = null;
        String member = null;
        String memberFields = null;
        api.getMembershipsByIdBoard(idBoard)
                .filter(filter)
                .member(member)
                .memberFields(memberFields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsMembershipsByIdBoardByIdMembership()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMembershipsByIdBoardByIdMembershipTest() throws ApiException {
        String idBoard = null;
        String idMembership = null;
        String member = null;
        String memberFields = null;
        api.getMembershipsByIdBoardByIdMembership(idBoard, idMembership)
                .member(member)
                .memberFields(memberFields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsMyPrefsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMyPrefsByIdTest() throws ApiException {
        String idBoard = null;
        api.getMyPrefsById(idBoard)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsOrganizationByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationByIdTest() throws ApiException {
        String idBoard = null;
        String fields = null;
        api.getOrganizationById(idBoard)
                .fields(fields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsOrganizationByIdBoardByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationByIdBoardByFieldTest() throws ApiException {
        String idBoard = null;
        String field = null;
        api.getOrganizationByIdBoardByField(idBoard, field)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsActionsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listActionsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String entities = null;
        String display = null;
        String filter = null;
        String fields = null;
        String limit = null;
        String format = null;
        String since = null;
        String before = null;
        String page = null;
        String idModels = null;
        String member = null;
        String memberFields = null;
        String memberCreator = null;
        String memberCreatorFields = null;
        api.listActionsByIdBoard(idBoard)
                .entities(entities)
                .display(display)
                .filter(filter)
                .fields(fields)
                .limit(limit)
                .format(format)
                .since(since)
                .before(before)
                .page(page)
                .idModels(idModels)
                .member(member)
                .memberFields(memberFields)
                .memberCreator(memberCreator)
                .memberCreatorFields(memberCreatorFields)
                .execute();
        // TODO: test validations
    }

    /**
     * getBoardsLabelsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listLabelsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String fields = null;
        String limit = null;
        api.listLabelsByIdBoard(idBoard)
                .fields(fields)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

    /**
     * addBoardsMarkAsViewedByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void markAsViewedByIdBoardTest() throws ApiException {
        String idBoard = null;
        api.markAsViewedByIdBoard(idBoard)
                .execute();
        // TODO: test validations
    }

    /**
     * deleteBoardsMembersByIdBoardByIdMember()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeMemberTest() throws ApiException {
        String idBoard = null;
        String idMember = null;
        api.removeMember(idBoard, idMember)
                .execute();
        // TODO: test validations
    }

    /**
     * deleteBoardsPowerUpsByIdBoardByPowerUp()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removePowerUpTest() throws ApiException {
        String idBoard = null;
        String powerUp = null;
        api.removePowerUp(idBoard, powerUp)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateByIdTest() throws ApiException {
        String idBoard = null;
        String closed = null;
        String desc = null;
        String idBoardSource = null;
        String idOrganization = null;
        String keepFromSource = null;
        String labelNamesBlue = null;
        String labelNamesGreen = null;
        String labelNamesOrange = null;
        String labelNamesPurple = null;
        String labelNamesRed = null;
        String labelNamesYellow = null;
        String name = null;
        String powerUps = null;
        String prefsBackground = null;
        String prefsCalendarFeedEnabled = null;
        String prefsCardAging = null;
        String prefsCardCovers = null;
        String prefsComments = null;
        String prefsInvitations = null;
        String prefsPermissionLevel = null;
        String prefsSelfJoin = null;
        String prefsVoting = null;
        String prefsBackground = null;
        String prefsCardAging = null;
        String prefsCardCovers = null;
        String prefsComments = null;
        String prefsInvitations = null;
        String prefsPermissionLevel = null;
        String prefsSelfJoin = null;
        String prefsVoting = null;
        String subscribed = null;
        api.updateById(idBoard)
                .closed(closed)
                .desc(desc)
                .idBoardSource(idBoardSource)
                .idOrganization(idOrganization)
                .keepFromSource(keepFromSource)
                .labelNamesBlue(labelNamesBlue)
                .labelNamesGreen(labelNamesGreen)
                .labelNamesOrange(labelNamesOrange)
                .labelNamesPurple(labelNamesPurple)
                .labelNamesRed(labelNamesRed)
                .labelNamesYellow(labelNamesYellow)
                .name(name)
                .powerUps(powerUps)
                .prefsBackground(prefsBackground)
                .prefsCalendarFeedEnabled(prefsCalendarFeedEnabled)
                .prefsCardAging(prefsCardAging)
                .prefsCardCovers(prefsCardCovers)
                .prefsComments(prefsComments)
                .prefsInvitations(prefsInvitations)
                .prefsPermissionLevel(prefsPermissionLevel)
                .prefsSelfJoin(prefsSelfJoin)
                .prefsVoting(prefsVoting)
                .prefsBackground(prefsBackground)
                .prefsCardAging(prefsCardAging)
                .prefsCardCovers(prefsCardCovers)
                .prefsComments(prefsComments)
                .prefsInvitations(prefsInvitations)
                .prefsPermissionLevel(prefsPermissionLevel)
                .prefsSelfJoin(prefsSelfJoin)
                .prefsVoting(prefsVoting)
                .subscribed(subscribed)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsClosedByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateClosedByIdTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateClosedById(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsDescByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDescriptionByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateDescriptionByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesBlueByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLabelNamesBlueByIdTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateLabelNamesBlueById(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesGreenByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLabelNamesGreenByIdBoardPutTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateLabelNamesGreenByIdBoardPut(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesOrangeByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLabelNamesOrangeByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateLabelNamesOrangeByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesPurpleByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLabelNamesPurpleByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateLabelNamesPurpleByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesRedByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLabelNamesRedTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateLabelNamesRed(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesYellowByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLabelNamesYellowByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateLabelNamesYellowByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsMembersByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMembersByIdBoardTest() throws ApiException {
        String idBoard = null;
        String email = null;
        String fullName = null;
        String type = null;
        api.updateMembersByIdBoard(idBoard)
                .email(email)
                .fullName(fullName)
                .type(type)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsMembersByIdBoardByIdMember()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMembersByIdBoardByIdMemberTest() throws ApiException {
        String idBoard = null;
        String idMember = null;
        String email = null;
        String fullName = null;
        String type = null;
        api.updateMembersByIdBoardByIdMember(idBoard, idMember)
                .email(email)
                .fullName(fullName)
                .type(type)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsMembershipsByIdBoardByIdMembership()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMembershipsByIdBoardByIdMembershipTest() throws ApiException {
        String idBoard = null;
        String idMembership = null;
        String memberFields = null;
        String type = null;
        api.updateMembershipsByIdBoardByIdMembership(idBoard, idMembership)
                .memberFields(memberFields)
                .type(type)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsIdEmailListByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMyPrefsEmailListByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateMyPrefsEmailListByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsEmailPositionByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMyPrefsEmailPositionByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateMyPrefsEmailPositionByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsShowListGuideByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMyPrefsShowListGuideByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateMyPrefsShowListGuideByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsShowSidebarByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMyPrefsShowSidebarTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateMyPrefsShowSidebar(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMyPrefsShowSidebarActionsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateMyPrefsShowSidebarActionsByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsShowSidebarActivityByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMyPrefsShowSidebarActivityByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateMyPrefsShowSidebarActivityByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsNameByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNameByIdTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateNameById(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsIdOrganizationByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganizationByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateOrganizationByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsBackgroundByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePrefsBackgroundByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updatePrefsBackgroundByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsCalendarFeedEnabledByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePrefsCalendarFeedEnabledByIdTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updatePrefsCalendarFeedEnabledById(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsCardAgingByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePrefsCardAgingByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updatePrefsCardAgingByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsCardCoversByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePrefsCardCoversByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updatePrefsCardCoversByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsCommentsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePrefsCommentsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updatePrefsCommentsByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsInvitationsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePrefsInvitationsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updatePrefsInvitationsByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsPermissionLevelByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePrefsPermissionLevelByIdTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updatePrefsPermissionLevelById(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsSelfJoinByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePrefsSelfJoinByIdBoardTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updatePrefsSelfJoinByIdBoard(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsShowSidebarMembersByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePrefsShowSidebarMembersByIdTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updatePrefsShowSidebarMembersById(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsSubscribedByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSubscribedByIdTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateSubscribedById(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsVotingByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateVotingPrefsByIdTest() throws ApiException {
        String idBoard = null;
        String value = null;
        api.updateVotingPrefsById(idBoard)
                .value(value)
                .execute();
        // TODO: test validations
    }

}
